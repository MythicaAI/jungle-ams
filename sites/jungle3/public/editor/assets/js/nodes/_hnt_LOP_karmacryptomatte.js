
export default function (hou) {
    class _hnt_LOP_karmacryptomatte extends hou.extend(hou._HoudiniBase).with(hou._SubgraphMixin) {
        static is_root = false;
        static id = 'LOP/Rendering/karmacryptomatte';
        static category = '/LOP';
        static houdiniType = 'karmacryptomatte';
        static title = 'Karma Cryptomatte';
        static icon = '/editor/assets/imgs/nodes/_hnt_LOP_karmacryptomatte.svg';
        constructor() {
            super();
            this.flags['houdini_type'] = this.__proto__.constructor.houdiniType;
            
            const inputs = ['LOP'];
            const outputs = ['LOP'];

            for(var i=0;i<inputs.length;i++) this.addInput(''+i,inputs[i]);        
            for(var j=0;j<outputs.length;j++) this.addOutput(''+j,outputs[j]);
        }
        parmTemplatesInit() {
            let hou_parm_template_group = new hou.ParmTemplateGroup();
			this.parmTemplateGroup = hou_parm_template_group;
			let hou_parm_template = new hou.FolderParmTemplate({name: "folder4", label: "Render Product", folder_type: hou.folderType.Collapsible, default_value: 0, ends_tab_group: false});
			hou_parm_template.setTags({"group_default": "1", "group_type": "collapsible"});
			let hou_parm_template2 = new hou.IntParmTemplate({name: "renderproductmode", label: "Mode", num_components: 1, default_value: [0], min: 0, max: 10, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.Base1, menu_items: ["0", "1", "2"], menu_labels: ["Add to Existing Render Product", "Create Render Product", "Create Render Product for Each ID"], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal, menu_use_token: false});
			hou_parm_template2.setScriptCallbackLanguage(hou.scriptLanguage.Python);
			hou_parm_template2.setTags({"script_callback_language": "python"});
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template2 = new hou.StringParmTemplate({name: "renderproducts", label: "Product Primitives", num_components: 1, default_value: ["%renderproducts(/Render/rendersettings)"], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.Regular, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "opmenu -l -a add_rendervars_to_product primpattern", item_generator_script_language: hou.scriptLanguage.Hscript, menu_type: hou.menuType.StringToggle});
			hou_parm_template2.setConditional(hou.parmCondType.HideWhen, "{ renderproductmode != 0 }");
			hou_parm_template2.setTags({"autoscope": "0000000000000000", "script_action": "import loputils\nloputils.selectPrimsInParm(kwargs, True)", "script_action_help": "Select primitives in the Scene Viewer or Scene Graph Tree pane. Ctrl-click to select using the primitive picker dialog.", "script_action_icon": "BUTTONS_reselect", "sidefx::usdpathtype": "primlist"});
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template2 = new hou.StringParmTemplate({name: "renderproductpath", label: "Primitive Path", num_components: 1, default_value: ["/Render/Products/$OS"], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.Regular, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "opmenu -l -a cryptomatte_product primpath", item_generator_script_language: hou.scriptLanguage.Hscript, menu_type: hou.menuType.StringReplace});
			hou_parm_template2.setConditional(hou.parmCondType.HideWhen, "{ renderproductmode != 1 }");
			hou_parm_template2.setTags({"autoscope": "0000000000000000", "editor": "0", "script_action": "import loputils\nkwargs['ctrl'] = True\nloputils.selectPrimsInParm(kwargs, False)", "script_action_help": "Select a primitive using the primitive picker dialog.", "script_action_icon": "BUTTONS_reselect", "sidefx::usdpathtype": "prim"});
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template2 = new hou.StringParmTemplate({name: "rendersettings", label: "Render Settings", num_components: 1, default_value: ["/Render/rendersettings"], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.Regular, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "opmenu -l -a add_rendervars_to_product primpattern", item_generator_script_language: hou.scriptLanguage.Hscript, menu_type: hou.menuType.StringToggle});
			hou_parm_template2.setConditional(hou.parmCondType.HideWhen, "{ renderproductmode == 0 }");
			hou_parm_template2.setTags({"autoscope": "0000000000000000", "script_action": "import loputils\nloputils.selectPrimsInParm(kwargs, True)", "script_action_help": "Select primitives in the Scene Viewer or Scene Graph Tree pane. Ctrl-click to select using the primitive picker dialog.", "script_action_icon": "BUTTONS_reselect", "sidefx::usdpathtype": "primlist"});
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template2 = new hou.StringParmTemplate({name: "cryptopicture", label: "Output Picture", num_components: 1, default_value: ["$HIP/render/$HIPNAME.$OS.$F4.exr"], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.FileReference, file_type: hou.fileType.Image, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.StringReplace});
			hou_parm_template2.setConditional(hou.parmCondType.HideWhen, "{ renderproductmode != 1 }");
			hou_parm_template2.setTags({"autoscope": "0000000000000000", "usdvaluetype": "token"});
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template2 = new hou.FolderParmTemplate({name: "settings3", label: "Meta Data", folder_type: hou.folderType.Collapsible, default_value: 0, ends_tab_group: false});
			hou_parm_template2.setConditional(hou.parmCondType.HideWhen, "{ renderproductmode != 1 }");
			hou_parm_template2.setTags({"group_default": "0", "group_type": "collapsible"});
			let hou_parm_template3 = new hou.StringParmTemplate({name: "xn__driverparametersartist_wcbk", label: "Artist", num_components: 1, default_value: [""], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.Regular, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal});
			hou_parm_template3.setTags({"autoscope": "0000000000000000", "usdvaluetype": "string"});
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template3 = new hou.StringParmTemplate({name: "xn__driverparameterscomment_jebk", label: "Comment", num_components: 1, default_value: [""], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.Regular, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal});
			hou_parm_template3.setTags({"autoscope": "0000000000000000", "usdvaluetype": "string"});
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template3 = new hou.StringParmTemplate({name: "xn__driverparametershostname_5fbk", label: "Hostname", num_components: 1, default_value: [""], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.Regular, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal});
			hou_parm_template3.setTags({"autoscope": "0000000000000000", "usdvaluetype": "string"});
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template3 = new hou.StringParmTemplate({name: "xn__driverparametersOpenEXRcompression_gwbkh", label: "EXR Compression", num_components: 1, default_value: ["zips"], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.Regular, menu_items: ["none", "dwab", "dwaa", "piz", "rle", "zips", "zip", "pix", "b44", "b44a"], menu_labels: ["No compression", "DWA-B, Lossy and Fast (256-scanline block)", "DWA-A, Lossy and Fast (32-scanline block)", "PIZ Wavelet", "Runlength Encoding", "ZIP (Single scanline)", "ZIP (Multi-scanline blocks)", "PXR24 (32 bit float compression, lossy)", "B44 (4x4 block compression, lossy)", "B44A (4x4 block extra compression, lossy)"], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal});
			hou_parm_template3.setJoinWithNext(true);
			hou_parm_template3.setTags({"autoscope": "0000000000000000", "usdvaluetype": "string"});
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template3 = new hou.FloatParmTemplate({name: "xn__driverparametersOpenEXRdwa_compression_y2bkh", label: " DWA Compression Level", num_components: 1, default_value: [85], min: 1, max: 200, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.Base1});
			hou_parm_template3.setConditional(hou.parmCondType.HideWhen, "{ xn__driverparametersOpenEXRcompression_gwbkh != dwaa xn__driverparametersOpenEXRcompression_gwbkh != dwab }");
			hou_parm_template3.setTags({"autoscope": "0000000000000000", "usdvaluetype": "float"});
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template_group.append(hou_parm_template);
			hou_parm_template = new hou.FolderParmTemplate({name: "folder3", label: "Cryptomatte IDs", folder_type: hou.folderType.Collapsible, default_value: 0, ends_tab_group: false});
			hou_parm_template.setTags({"group_default": "1", "group_type": "collapsible"});
			hou_parm_template2 = new hou.ToggleParmTemplate({name: "doprimcrypto", label: "Enable", default_value: true});
			hou_parm_template2.setScriptCallbackLanguage(hou.scriptLanguage.Python);
			hou_parm_template2.setTags({"script_callback_language": "python"});
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template2 = new hou.FolderParmTemplate({name: "folder1", label: "Primitives", folder_type: hou.folderType.Collapsible, default_value: 0, ends_tab_group: false});
			hou_parm_template2.setConditional(hou.parmCondType.DisableWhen, "{ doprimcrypto != 1 }");
			hou_parm_template2.setTags({"group_default": "0", "group_type": "collapsible", "sidefx::header_parm": "primcryptoname", "sidefx::header_toggle": "doprimcrypto"});
			hou_parm_template3 = new hou.StringParmTemplate({name: "primcryptoname", label: "Name", num_components: 1, default_value: ["CryptoPrimitives"], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.Regular, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal});
			hou_parm_template3.setScriptCallbackLanguage(hou.scriptLanguage.Python);
			hou_parm_template3.setTags({"script_callback_language": "python"});
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template3 = new hou.StringParmTemplate({name: "primcryptofile", label: "Output Picture", num_components: 1, default_value: ["$HIP/render/$HIPNAME.$OS.`chs(\"primcryptoname\")`.$F4.exr"], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.FileReference, file_type: hou.fileType.Image, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.StringReplace});
			hou_parm_template3.setConditional(hou.parmCondType.HideWhen, "{ renderproductmode != 2 }");
			hou_parm_template3.setScriptCallbackLanguage(hou.scriptLanguage.Python);
			hou_parm_template3.setTags({"filechooser_pattern": "*.exr", "script_callback_language": "python"});
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template3 = new hou.FolderParmTemplate({name: "folder0", label: "Render Options", folder_type: hou.folderType.Collapsible, default_value: 0, ends_tab_group: false});
			hou_parm_template3.setTags({"group_default": "0", "group_type": "collapsible"});
			let hou_parm_template4 = new hou.StringParmTemplate({name: "primcryptopixelfilter", label: "Pixel Filter", num_components: 1, default_value: ["[\"ubox\",{}]"], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.Regular, menu_items: ["[\"ubox\",{}]", "[\"accumulate\",{}]", "[\"minmax\",{\"mode\":\"min\"}]", "[\"minmax\",{\"mode\":\"max\"}]", "[\"minmax\",{\"mode\":\"median\"}]", "[\"minmax\",{\"mode\":\"zmin\"}]", "[\"minmax\",{\"mode\":\"zmax\"}]", "[\"minmax\",{\"mode\":\"edge\"}]", "[\"minmax\",{\"mode\":\"ocover\"}]", "[\"minmax\",{\"mode\":\"idcover\"}]", "[\"minmax\",{\"mode\":\"omin\"}]", "[\"minmax\",{\"mode\":\"omax\"}]", "[\"minmax\",{\"mode\":\"omedian\"}]"], menu_labels: ["Average Sample Values", "Adds Up Sample Values", "Sample: Minimum Value", "Sample: Maximum Value", "Sample: Median Value", "Sample: Closest", "Sample: Farthest", "Disable Edge Antialiasing", "Object With Most Pixel Coverage (average)", "Object With Most Coverage (no filtering)", "Object With Most Coverage (minimum z-value)", "Object With Most Coverage (maximum z-value)", "Object With Most Coverage (median z-value)"], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.StringReplace});
			hou_parm_template4.setTags({"autoscope": "0000000000000000", "spare_category": "Image", "uiscope": "None", "usdvaluetype": "string"});
			hou_parm_template3.addParmTemplate(hou_parm_template4);
			hou_parm_template4 = new hou.IntParmTemplate({name: "primcryptomaxoverlap", label: "Max Overlap", num_components: 1, default_value: [6], min: 0, max: 10, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.Base1, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal, menu_use_token: false});
			hou_parm_template4.setScriptCallbackLanguage(hou.scriptLanguage.Python);
			hou_parm_template4.setTags({"script_callback_language": "python"});
			hou_parm_template3.addParmTemplate(hou_parm_template4);
			hou_parm_template4 = new hou.ToggleParmTemplate({name: "primcryptomultisampled", label: "Multi Sampled", default_value: false});
			hou_parm_template4.setScriptCallbackLanguage(hou.scriptLanguage.Python);
			hou_parm_template4.setTags({"script_callback_language": "python"});
			hou_parm_template3.addParmTemplate(hou_parm_template4);
			hou_parm_template4 = new hou.StringParmTemplate({name: "primcryptosidecar", label: "Sidecar File", num_components: 1, default_value: [""], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.FileReference, file_type: hou.fileType.Any, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.StringReplace});
			hou_parm_template4.setScriptCallbackLanguage(hou.scriptLanguage.Python);
			hou_parm_template4.setTags({"filechooser_pattern": "*.json", "script_callback_language": "python"});
			hou_parm_template3.addParmTemplate(hou_parm_template4);
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template3 = new hou.SeparatorParmTemplate({name: "_sepparm2"});
			hou_parm_template3.setTags({"sidefx::layout_height": "small", "sidefx::look": "blank"});
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template2 = new hou.ToggleParmTemplate({name: "domtlcrypto", label: "Enable", default_value: false});
			hou_parm_template2.setScriptCallbackLanguage(hou.scriptLanguage.Python);
			hou_parm_template2.setTags({"script_callback_language": "python"});
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template2 = new hou.FolderParmTemplate({name: "folder2", label: "Materials", folder_type: hou.folderType.Collapsible, default_value: 0, ends_tab_group: false});
			hou_parm_template2.setConditional(hou.parmCondType.DisableWhen, "{ domtlcrypto != 1 }");
			hou_parm_template2.setTags({"group_default": "0", "group_type": "collapsible", "sidefx::header_parm": "mtlcryptoname", "sidefx::header_toggle": "domtlcrypto"});
			hou_parm_template3 = new hou.StringParmTemplate({name: "mtlcryptoname", label: "Name", num_components: 1, default_value: ["CryptoMaterials"], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.Regular, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal});
			hou_parm_template3.setScriptCallbackLanguage(hou.scriptLanguage.Python);
			hou_parm_template3.setTags({"script_callback_language": "python"});
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template3 = new hou.StringParmTemplate({name: "mtlcryptofile", label: "Output Picture", num_components: 1, default_value: ["$HIP/render/$HIPNAME.$OS.`chs(\"mtlcryptoname\")`.$F4.exr"], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.FileReference, file_type: hou.fileType.Image, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.StringReplace});
			hou_parm_template3.setConditional(hou.parmCondType.HideWhen, "{ renderproductmode != 2 }");
			hou_parm_template3.setScriptCallbackLanguage(hou.scriptLanguage.Python);
			hou_parm_template3.setTags({"filechooser_pattern": "*.exr", "script_callback_language": "python"});
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template3 = new hou.FolderParmTemplate({name: "folder9", label: "Render Options", folder_type: hou.folderType.Collapsible, default_value: 0, ends_tab_group: false});
			hou_parm_template3.setTags({"group_default": "0", "group_type": "collapsible"});
			hou_parm_template4 = new hou.StringParmTemplate({name: "mtlcryptopixelfilter", label: "Pixel Filter", num_components: 1, default_value: ["[\"ubox\",{}]"], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.Regular, menu_items: ["[\"ubox\",{}]", "[\"accumulate\",{}]", "[\"minmax\",{\"mode\":\"min\"}]", "[\"minmax\",{\"mode\":\"max\"}]", "[\"minmax\",{\"mode\":\"median\"}]", "[\"minmax\",{\"mode\":\"zmin\"}]", "[\"minmax\",{\"mode\":\"zmax\"}]", "[\"minmax\",{\"mode\":\"edge\"}]", "[\"minmax\",{\"mode\":\"ocover\"}]", "[\"minmax\",{\"mode\":\"idcover\"}]", "[\"minmax\",{\"mode\":\"omin\"}]", "[\"minmax\",{\"mode\":\"omax\"}]", "[\"minmax\",{\"mode\":\"omedian\"}]"], menu_labels: ["Average Sample Values", "Adds Up Sample Values", "Sample: Minimum Value", "Sample: Maximum Value", "Sample: Median Value", "Sample: Closest", "Sample: Farthest", "Disable Edge Antialiasing", "Object With Most Pixel Coverage (average)", "Object With Most Coverage (no filtering)", "Object With Most Coverage (minimum z-value)", "Object With Most Coverage (maximum z-value)", "Object With Most Coverage (median z-value)"], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.StringReplace});
			hou_parm_template4.setTags({"autoscope": "0000000000000000", "spare_category": "Image", "uiscope": "None", "usdvaluetype": "string"});
			hou_parm_template3.addParmTemplate(hou_parm_template4);
			hou_parm_template4 = new hou.IntParmTemplate({name: "mtlcryptomaxoverlap", label: "Max Overlap", num_components: 1, default_value: [6], min: 0, max: 10, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.Base1, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal, menu_use_token: false});
			hou_parm_template4.setScriptCallbackLanguage(hou.scriptLanguage.Python);
			hou_parm_template4.setTags({"script_callback_language": "python"});
			hou_parm_template3.addParmTemplate(hou_parm_template4);
			hou_parm_template4 = new hou.ToggleParmTemplate({name: "mtlcryptomultisampled", label: "Multi Sampled", default_value: false});
			hou_parm_template4.setScriptCallbackLanguage(hou.scriptLanguage.Python);
			hou_parm_template4.setTags({"script_callback_language": "python"});
			hou_parm_template3.addParmTemplate(hou_parm_template4);
			hou_parm_template4 = new hou.StringParmTemplate({name: "mtlcryptosidecar", label: "Sidecar File", num_components: 1, default_value: [""], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.FileReference, file_type: hou.fileType.Any, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.StringReplace});
			hou_parm_template4.setScriptCallbackLanguage(hou.scriptLanguage.Python);
			hou_parm_template4.setTags({"filechooser_pattern": "*.json", "script_callback_language": "python"});
			hou_parm_template3.addParmTemplate(hou_parm_template4);
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template3 = new hou.SeparatorParmTemplate({name: "_sepparm3"});
			hou_parm_template3.setTags({"sidefx::layout_height": "small", "sidefx::look": "blank"});
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template2 = new hou.ToggleParmTemplate({name: "dokindcrypto", label: "Enable", default_value: false});
			hou_parm_template2.setScriptCallbackLanguage(hou.scriptLanguage.Python);
			hou_parm_template2.setTags({"script_callback_language": "python"});
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template2 = new hou.FolderParmTemplate({name: "folder5", label: "Kind", folder_type: hou.folderType.Collapsible, default_value: 0, ends_tab_group: false});
			hou_parm_template2.setConditional(hou.parmCondType.DisableWhen, "{ dokindcrypto != 1 }");
			hou_parm_template2.setTags({"group_default": "0", "group_type": "collapsible", "sidefx::header_toggle": "dokindcrypto"});
			hou_parm_template3 = new hou.FolderParmTemplate({name: "kinds_folder", label: "Vars", folder_type: hou.folderType.MultiparmBlock, default_value: 1, ends_tab_group: false});
			hou_parm_template4 = new hou.StringParmTemplate({name: "kindcrypto#", label: "Kind", num_components: 1, default_value: ["component"], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.Regular, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "menu = []#['component','Component']\nmpidx = kwargs['script_multiparm_index']\nmodels = kwargs['node'].evalParm('kindcryptostrict{}'.format(mpidx))\n\nfrom pxr import Kind\n\nkind_registry = Kind.Registry\nm = Kind.Tokens.model\n\nfor kind in kind_registry.GetAllKinds():\n    if kind != m:\n        if models and kind_registry.IsA(kind,m):\n            menu.append(kind)\n            menu.append(kind.capitalize())\n        else:\n            menu.append(kind)\n            menu.append(kind.capitalize())\n\nreturn menu", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal});
			hou_parm_template4.setScriptCallbackLanguage(hou.scriptLanguage.Python);
			hou_parm_template4.setTags({"script_callback_language": "python", "units": ""});
			hou_parm_template3.addParmTemplate(hou_parm_template4);
			hou_parm_template4 = new hou.IntParmTemplate({name: "kindcryptomatchby#", label: "Match By", num_components: 1, default_value: [0], min: 0, max: 10, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.Base1, menu_items: ["0", "1"], menu_labels: ["Prim Path", "AssetInfo"], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal, menu_use_token: false});
			hou_parm_template4.setScriptCallbackLanguage(hou.scriptLanguage.Python);
			hou_parm_template4.setTags({"script_callback_language": "python"});
			hou_parm_template3.addParmTemplate(hou_parm_template4);
			hou_parm_template4 = new hou.ToggleParmTemplate({name: "kindcryptostrict#", label: "Strict Model Hierarchy", default_value: false});
			hou_parm_template4.setScriptCallbackLanguage(hou.scriptLanguage.Python);
			hou_parm_template4.setTags({"script_callback_language": "python"});
			hou_parm_template3.addParmTemplate(hou_parm_template4);
			hou_parm_template4 = new hou.StringParmTemplate({name: "kindcryptoname#", label: "Name", num_components: 1, default_value: ["CryptoKind_`chs(\"kindcrypto#\")`"], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.Regular, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal});
			hou_parm_template4.setScriptCallbackLanguage(hou.scriptLanguage.Python);
			hou_parm_template4.setTags({"script_callback_language": "python"});
			hou_parm_template3.addParmTemplate(hou_parm_template4);
			hou_parm_template4 = new hou.StringParmTemplate({name: "kindcryptofile#", label: "Output Picture", num_components: 1, default_value: ["$HIP/render/$HIPNAME.$OS.`chs(\"kindcryptoname\"+opdigits($CH))`.$F4.exr"], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.FileReference, file_type: hou.fileType.Image, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.StringReplace});
			hou_parm_template4.setConditional(hou.parmCondType.HideWhen, "{ renderproductmode != 2 }");
			hou_parm_template4.setScriptCallbackLanguage(hou.scriptLanguage.Python);
			hou_parm_template4.setTags({"filechooser_pattern": "*.exr", "script_callback_language": "python"});
			hou_parm_template3.addParmTemplate(hou_parm_template4);
			hou_parm_template4 = new hou.FolderParmTemplate({name: "folder10_#", label: "Render Options", folder_type: hou.folderType.Collapsible, default_value: 0, ends_tab_group: false});
			hou_parm_template4.setTags({"group_default": "0", "group_type": "collapsible"});
			let hou_parm_template5 = new hou.StringParmTemplate({name: "kindcryptopixelfilter#", label: "Pixel Filter", num_components: 1, default_value: ["[\"ubox\",{}]"], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.Regular, menu_items: ["[\"ubox\",{}]", "[\"accumulate\",{}]", "[\"minmax\",{\"mode\":\"min\"}]", "[\"minmax\",{\"mode\":\"max\"}]", "[\"minmax\",{\"mode\":\"median\"}]", "[\"minmax\",{\"mode\":\"zmin\"}]", "[\"minmax\",{\"mode\":\"zmax\"}]", "[\"minmax\",{\"mode\":\"edge\"}]", "[\"minmax\",{\"mode\":\"ocover\"}]", "[\"minmax\",{\"mode\":\"idcover\"}]", "[\"minmax\",{\"mode\":\"omin\"}]", "[\"minmax\",{\"mode\":\"omax\"}]", "[\"minmax\",{\"mode\":\"omedian\"}]"], menu_labels: ["Average Sample Values", "Adds Up Sample Values", "Sample: Minimum Value", "Sample: Maximum Value", "Sample: Median Value", "Sample: Closest", "Sample: Farthest", "Disable Edge Antialiasing", "Object With Most Pixel Coverage (average)", "Object With Most Coverage (no filtering)", "Object With Most Coverage (minimum z-value)", "Object With Most Coverage (maximum z-value)", "Object With Most Coverage (median z-value)"], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.StringReplace});
			hou_parm_template5.setTags({"autoscope": "0000000000000000", "spare_category": "Image", "uiscope": "None", "usdvaluetype": "string"});
			hou_parm_template4.addParmTemplate(hou_parm_template5);
			hou_parm_template5 = new hou.IntParmTemplate({name: "kindcryptomaxoverlap#", label: "Max Overlap", num_components: 1, default_value: [6], min: 0, max: 10, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.Base1, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal, menu_use_token: false});
			hou_parm_template5.setScriptCallbackLanguage(hou.scriptLanguage.Python);
			hou_parm_template5.setTags({"script_callback_language": "python"});
			hou_parm_template4.addParmTemplate(hou_parm_template5);
			hou_parm_template5 = new hou.ToggleParmTemplate({name: "kindcryptomultisampled#", label: "Multi Sampled", default_value: false});
			hou_parm_template5.setScriptCallbackLanguage(hou.scriptLanguage.Python);
			hou_parm_template5.setTags({"script_callback_language": "python"});
			hou_parm_template4.addParmTemplate(hou_parm_template5);
			hou_parm_template5 = new hou.StringParmTemplate({name: "kindcryptosidecar#", label: "Sidecar File", num_components: 1, default_value: [""], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.FileReference, file_type: hou.fileType.Any, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.StringReplace});
			hou_parm_template5.setScriptCallbackLanguage(hou.scriptLanguage.Python);
			hou_parm_template5.setTags({"filechooser_pattern": "*.json", "script_callback_language": "python"});
			hou_parm_template4.addParmTemplate(hou_parm_template5);
			hou_parm_template3.addParmTemplate(hou_parm_template4);
			hou_parm_template4 = new hou.SeparatorParmTemplate({name: "_sepparm4_#"});
			hou_parm_template4.setTags({"sidefx::layout_height": "small", "sidefx::look": "blank"});
			hou_parm_template3.addParmTemplate(hou_parm_template4);
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template2 = new hou.ToggleParmTemplate({name: "doprimvarcrypto", label: "Enable", default_value: false});
			hou_parm_template2.setScriptCallbackLanguage(hou.scriptLanguage.Python);
			hou_parm_template2.setTags({"script_callback_language": "python"});
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template2 = new hou.FolderParmTemplate({name: "folder6", label: "Primvar", folder_type: hou.folderType.Collapsible, default_value: 0, ends_tab_group: false});
			hou_parm_template2.setConditional(hou.parmCondType.DisableWhen, "{ doprimvarcrypto != 1 }");
			hou_parm_template2.setTags({"group_default": "0", "group_type": "collapsible", "sidefx::header_toggle": "doprimvarcrypto"});
			hou_parm_template3 = new hou.FolderParmTemplate({name: "primvars_folder", label: "Primvar IDs", folder_type: hou.folderType.MultiparmBlock, default_value: 1, ends_tab_group: false});
			hou_parm_template4 = new hou.StringParmTemplate({name: "primvarcrypto#", label: "Primvar (String/Int)", num_components: 1, default_value: [""], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.Regular, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal});
			hou_parm_template4.setScriptCallbackLanguage(hou.scriptLanguage.Python);
			hou_parm_template4.setTags({"script_callback_language": "python"});
			hou_parm_template3.addParmTemplate(hou_parm_template4);
			hou_parm_template4 = new hou.StringParmTemplate({name: "primvarcryptoname#", label: "Name", num_components: 1, default_value: ["CryptoPrimvar_`chs(\"primvarcrypto#\")`"], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.Regular, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal});
			hou_parm_template4.setScriptCallbackLanguage(hou.scriptLanguage.Python);
			hou_parm_template4.setTags({"script_callback_language": "python"});
			hou_parm_template3.addParmTemplate(hou_parm_template4);
			hou_parm_template4 = new hou.StringParmTemplate({name: "primvarcryptofile#", label: "Output Picture", num_components: 1, default_value: ["$HIP/render/$HIPNAME.$OS.`chs(\"primvarcrypto\"+opdigits($CH))`.$F4.exr"], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.FileReference, file_type: hou.fileType.Image, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.StringReplace});
			hou_parm_template4.setConditional(hou.parmCondType.HideWhen, "{ renderproductmode != 2 }");
			hou_parm_template4.setScriptCallbackLanguage(hou.scriptLanguage.Python);
			hou_parm_template4.setTags({"filechooser_pattern": "*.exr", "script_callback_language": "python"});
			hou_parm_template3.addParmTemplate(hou_parm_template4);
			hou_parm_template4 = new hou.FolderParmTemplate({name: "folder10_#_2", label: "Render Options", folder_type: hou.folderType.Collapsible, default_value: 0, ends_tab_group: false});
			hou_parm_template4.setTags({"group_default": "0", "group_type": "collapsible"});
			hou_parm_template5 = new hou.StringParmTemplate({name: "primvarcryptopixelfilter#", label: "Pixel Filter", num_components: 1, default_value: ["[\"ubox\",{}]"], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.Regular, menu_items: ["[\"ubox\",{}]", "[\"accumulate\",{}]", "[\"minmax\",{\"mode\":\"min\"}]", "[\"minmax\",{\"mode\":\"max\"}]", "[\"minmax\",{\"mode\":\"median\"}]", "[\"minmax\",{\"mode\":\"zmin\"}]", "[\"minmax\",{\"mode\":\"zmax\"}]", "[\"minmax\",{\"mode\":\"edge\"}]", "[\"minmax\",{\"mode\":\"ocover\"}]", "[\"minmax\",{\"mode\":\"idcover\"}]", "[\"minmax\",{\"mode\":\"omin\"}]", "[\"minmax\",{\"mode\":\"omax\"}]", "[\"minmax\",{\"mode\":\"omedian\"}]"], menu_labels: ["Average Sample Values", "Adds Up Sample Values", "Sample: Minimum Value", "Sample: Maximum Value", "Sample: Median Value", "Sample: Closest", "Sample: Farthest", "Disable Edge Antialiasing", "Object With Most Pixel Coverage (average)", "Object With Most Coverage (no filtering)", "Object With Most Coverage (minimum z-value)", "Object With Most Coverage (maximum z-value)", "Object With Most Coverage (median z-value)"], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.StringReplace});
			hou_parm_template5.setTags({"autoscope": "0000000000000000", "spare_category": "Image", "uiscope": "None", "usdvaluetype": "string"});
			hou_parm_template4.addParmTemplate(hou_parm_template5);
			hou_parm_template5 = new hou.IntParmTemplate({name: "primvarcryptomaxoverlap#", label: "Max Overlap", num_components: 1, default_value: [6], min: 0, max: 10, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.Base1, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal, menu_use_token: false});
			hou_parm_template5.setScriptCallbackLanguage(hou.scriptLanguage.Python);
			hou_parm_template5.setTags({"script_callback_language": "python"});
			hou_parm_template4.addParmTemplate(hou_parm_template5);
			hou_parm_template5 = new hou.ToggleParmTemplate({name: "primvarcryptomultisampled#", label: "Multi Sampled", default_value: false});
			hou_parm_template5.setScriptCallbackLanguage(hou.scriptLanguage.Python);
			hou_parm_template5.setTags({"script_callback_language": "python"});
			hou_parm_template4.addParmTemplate(hou_parm_template5);
			hou_parm_template5 = new hou.StringParmTemplate({name: "primvarcryptosidecar#", label: "Sidecar File", num_components: 1, default_value: [""], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.FileReference, file_type: hou.fileType.Any, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.StringReplace});
			hou_parm_template5.setScriptCallbackLanguage(hou.scriptLanguage.Python);
			hou_parm_template5.setTags({"filechooser_pattern": "*.json", "script_callback_language": "python"});
			hou_parm_template4.addParmTemplate(hou_parm_template5);
			hou_parm_template3.addParmTemplate(hou_parm_template4);
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template_group.append(hou_parm_template);
			
            this.parmTemplateGroup = hou_parm_template_group;
            this.parmTemplateGroup.linkNode(this);
        }
    }
    hou.registerType('LOP/Rendering/karmacryptomatte',_hnt_LOP_karmacryptomatte)
    return _hnt_LOP_karmacryptomatte
}
        