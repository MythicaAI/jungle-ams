
export default function (hou) {
    class _hnt_DRIVER_hq_render extends hou._HoudiniBase {
        static is_root = false;
        static id = 'DRIVER/Farm/hq_render';
        static category = '/DRIVER';
        static houdiniType = 'hq_render';
        static title = 'HQueue Render';
        static icon = '/editor/assets/imgs/nodes/_hnt_DRIVER_hq_render.svg';
        constructor() {
            super();
            this.flags['houdini_type'] = this.__proto__.constructor.houdiniType;
            
            const inputs = ['DRIVER'];
            const outputs = ['DRIVER'];

            for(var i=0;i<inputs.length;i++) this.addInput(''+i,inputs[i]);        
            for(var j=0;j<outputs.length;j++) this.addOutput(''+j,outputs[j]);
        }
        parmTemplatesInit() {
            let hou_parm_template_group = new hou.ParmTemplateGroup();
			this.parmTemplateGroup = hou_parm_template_group;
			let hou_parm_template = new hou.ButtonParmTemplate({name: "execute", label: "Submit Job"});
			hou_parm_template.setJoinWithNext(true);
			hou_parm_template.setTags({"takecontrol": "always"});
			hou_parm_template_group.append(hou_parm_template);
			hou_parm_template = new hou.ButtonParmTemplate({name: "renderdialog", label: "Controls..."});
			hou_parm_template.hide(true);
			hou_parm_template.hideLabel(true);
			hou_parm_template.setTags({"takecontrol": "always"});
			hou_parm_template_group.append(hou_parm_template);
			hou_parm_template = new hou.MenuParmTemplate({name: "trange", label: "Valid Frame Range", menu_items: ["off", "normal", "on"], menu_labels: ["Render Current Frame", "Render Frame Range", "Render Frame Range Only (Strict)"], default_value: 0, icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal, menu_use_token: false, is_button_strip: false, strip_uses_icons: false});
			hou_parm_template.hide(true);
			hou_parm_template_group.append(hou_parm_template);
			hou_parm_template = new hou.FloatParmTemplate({name: "f", label: "Start/End/Inc", num_components: 3, default_value: [1, 240, 1], default_expression: ["$FSTART", "$FEND", ""], default_expression_language: [hou.scriptLanguage.Hscript, hou.scriptLanguage.Hscript, hou.scriptLanguage.Hscript], min: 0, max: 10, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.Base1});
			hou_parm_template.hide(true);
			hou_parm_template_group.append(hou_parm_template);
			hou_parm_template = new hou.StringParmTemplate({name: "take", label: "Render With Take", num_components: 1, default_value: ["_current_"], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.Regular, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal});
			hou_parm_template.hide(true);
			hou_parm_template_group.append(hou_parm_template);
			hou_parm_template = new hou.StringParmTemplate({name: "soho_program", label: "Label", num_components: 1, default_value: ["HQrender.py"], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.Regular, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal});
			hou_parm_template.hide(true);
			hou_parm_template_group.append(hou_parm_template);
			hou_parm_template = new hou.IntParmTemplate({name: "soho_outputmode", label: "Label", num_components: 1, default_value: [2], min: 0, max: 10, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.Base1, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal, menu_use_token: false});
			hou_parm_template.hide(true);
			hou_parm_template_group.append(hou_parm_template);
			hou_parm_template = new hou.ToggleParmTemplate({name: "soho_multiframe", label: "Label", default_value: true});
			hou_parm_template.hide(true);
			hou_parm_template_group.append(hou_parm_template);
			hou_parm_template = new hou.ToggleParmTemplate({name: "hq_use_render_tracker", label: "Label", default_value: false});
			hou_parm_template.hide(true);
			hou_parm_template.hideLabel(true);
			hou_parm_template_group.append(hou_parm_template);
			hou_parm_template = new hou.FolderParmTemplate({name: "general", label: "General", folder_type: hou.folderType.Tabs, default_value: 0, ends_tab_group: false});
			hou_parm_template.setTags({"sidefx::switcher": "general"});
			let hou_parm_template2 = new hou.ToggleParmTemplate({name: "hq_openbrowser", label: "Open Web Interface", default_value: false});
			hou_parm_template2.hide(true);
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template2 = new hou.StringParmTemplate({name: "hq_server", label: "HQueue Server", num_components: 1, default_value: ["$HOUDINI_HQUEUE_SERVER"], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.Regular, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal});
			hou_parm_template2.setTags({"script_action": "import webbrowser\n\nwebbrowser.open(kwargs['node'].parm('hq_server').evalAsString())", "script_action_help": "Open HQueue in Webbrowser", "script_action_icon": "BUTTONS_hq_browser"});
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template2 = new hou.StringParmTemplate({name: "hq_job_name", label: "Job Name", num_components: 1, default_value: ["<default>"], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.Regular, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal});
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template2 = new hou.StringParmTemplate({name: "hq_driver", label: "Output Driver", num_components: 1, default_value: [""], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.NodeReference, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal});
			hou_parm_template2.setConditional(hou.parmCondType.DisableWhen, "{ hasinput(0) == 1 } { hq_hip_action == use_ifd hq_use_cloud1 != 1 } { hq_hip_action == use_usd hq_use_cloud1 != 1 }");
			hou_parm_template2.setScriptCallback("hou.pwd().hdaModule().onOutputDriverChange(hou.pwd())");
			hou_parm_template2.setScriptCallbackLanguage(hou.scriptLanguage.Python);
			hou_parm_template2.setTags({"oprelative": ".", "script_callback": "hou.pwd().hdaModule().onOutputDriverChange(hou.pwd())", "script_callback_language": "python"});
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template2 = new hou.MenuParmTemplate({name: "hq_priority", label: "Job Priority", menu_items: [], menu_labels: [], default_value: 5, icon_names: [], item_generator_script: "entries = []\nfor i in range(0, 11):\n    entries.append(str(i))\n    \n    if i == 0:\n        entries.append(str(i) + \" (lowest)\")\n    elif i == 5:\n        entries.append(str(i) + \" (medium)\")\n    elif i == 10:\n        entries.append(str(i) + \" (highest)\")\n    else:\n        entries.append(str(i))\n    \nreturn entries", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal, menu_use_token: false, is_button_strip: false, strip_uses_icons: false});
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template2 = new hou.ToggleParmTemplate({name: "hq_report_submitted_job_id", label: "Report Submitted Job ID", default_value: true});
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template2 = new hou.FolderParmTemplate({name: "hfsfolder_1", label: "Target HFS", folder_type: hou.folderType.Simple, default_value: 0, ends_tab_group: false});
			hou_parm_template2.setTags({"group_type": "simple"});
			let hou_parm_template3 = new hou.ToggleParmTemplate({name: "hq_useuniversalhfs", label: "Use Universal HFS", default_value: true});
			hou_parm_template3.hideLabel(true);
			hou_parm_template3.setJoinWithNext(true);
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template3 = new hou.StringParmTemplate({name: "hq_hfs", label: "Universal HFS", num_components: 1, default_value: ["$HOUDINI_HQUEUE_HFS"], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.Regular, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal});
			hou_parm_template3.setConditional(hou.parmCondType.DisableWhen, "{ hq_useuniversalhfs == 0 }");
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template3 = new hou.StringParmTemplate({name: "hq_hfs_linux", label: "Linux HFS Path", num_components: 1, default_value: ["$HOUDINI_HQUEUE_HFS_LINUX"], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.FileReference, file_type: hou.fileType.Directory, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.StringReplace});
			hou_parm_template3.setConditional(hou.parmCondType.DisableWhen, "{ hq_useuniversalhfs == 1 }");
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template3 = new hou.StringParmTemplate({name: "hq_hfs_macos", label: "macOS HFS Path", num_components: 1, default_value: ["$HOUDINI_HQUEUE_HFS_MACOS"], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.FileReference, file_type: hou.fileType.Directory, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.StringReplace});
			hou_parm_template3.setConditional(hou.parmCondType.DisableWhen, "{ hq_useuniversalhfs == 1 }");
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template3 = new hou.StringParmTemplate({name: "hq_hfs_windows", label: "Windows HFS Path", num_components: 1, default_value: ["$HOUDINI_HQUEUE_HFS_WINDOWS"], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.FileReference, file_type: hou.fileType.Directory, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.StringReplace});
			hou_parm_template3.setConditional(hou.parmCondType.DisableWhen, "{ hq_useuniversalhfs == 1 }");
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template2 = new hou.FolderParmTemplate({name: "hipfolder_1", label: "Target HIP", folder_type: hou.folderType.Simple, default_value: 0, ends_tab_group: false});
			hou_parm_template2.setTags({"group_type": "simple"});
			hou_parm_template3 = new hou.StringParmTemplate({name: "hq_hip_action", label: " ", num_components: 1, default_value: ["use_current_hip"], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.Regular, menu_items: ["use_current_hip", "use_target_hip", "copy_to_shared_folder", "use_ifd", "use_usd"], menu_labels: ["Render Current HIP File", "Render Target HIP File", "Copy Project Files to Shared Folder and Render", "Use Existing IFDs", "Use Existing USDs"], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal});
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template3 = new hou.StringParmTemplate({name: "hq_hip", label: "Target HIP", num_components: 1, default_value: [""], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.FileReference, file_type: hou.fileType.Any, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.StringReplace});
			hou_parm_template3.setConditional(hou.parmCondType.DisableWhen, "{ hq_hip_action != use_target_hip }");
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template3 = new hou.StringParmTemplate({name: "hq_project_path", label: "Project Path", num_components: 1, default_value: ["$HQROOT/projects"], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.FileReference, file_type: hou.fileType.Any, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.StringReplace});
			hou_parm_template3.setConditional(hou.parmCondType.DisableWhen, "{ hq_hip_action != copy_to_shared_folder }");
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template3 = new hou.StringParmTemplate({name: "hq_input_ifd", label: "IFD Path", num_components: 1, default_value: [""], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.FileReference, file_type: hou.fileType.Any, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.StringReplace});
			hou_parm_template3.setConditional(hou.parmCondType.DisableWhen, "{ hq_hip_action != use_ifd }");
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template3 = new hou.StringParmTemplate({name: "hq_input_usd", label: "USD Path", num_components: 1, default_value: [""], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.FileReference, file_type: hou.fileType.Any, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.StringReplace});
			hou_parm_template3.setConditional(hou.parmCondType.DisableWhen, "{ hq_hip_action != use_usd }");
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template3 = new hou.StringParmTemplate({name: "hq_renderer", label: "Render Delegate", num_components: 1, default_value: ["BRAY_HdKarma"], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.Regular, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "renderers = hou.lop.availableRendererInfo()\n\nsupported_renderers = []\n\n# Include only renderers that support image buffers.\nfor renderer in renderers:\n    if not renderer[\"aovsupport\"]:\n        continue\n        \n    supported_renderers.append(renderer)\n    \n# Sort the renderers by priority desc, then by menu label asc.\n# Note that we have to sort in reverse (label first, then priority)\n# to get the desired sort order.\nsupported_renderers.sort(key = lambda x: x[\"menulabel\"])\nsupported_renderers.sort(key = lambda x: x[\"menupriority\"], reverse=True)\n\n\n# Build up final result to return.\nresult = []\nfor renderer in supported_renderers:\n    result.append(renderer[\"name\"])\n    result.append(renderer[\"menulabel\"])\n    \nreturn result", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal});
			hou_parm_template3.setConditional(hou.parmCondType.DisableWhen, "{ hq_hip_action != use_usd }");
			hou_parm_template3.setScriptCallbackLanguage(hou.scriptLanguage.Python);
			hou_parm_template3.setTags({"script_callback_language": "python"});
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template3 = new hou.StringParmTemplate({name: "hq_outputimage", label: "Override Output Image", num_components: 1, default_value: [""], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.FileReference, file_type: hou.fileType.Image, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "echo `pythonexprs(\"__import__(\'toolutils\').parseDialogScriptMenu(\'FBrender\')\")`", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.StringReplace});
			hou_parm_template3.setConditional(hou.parmCondType.DisableWhen, "{ hq_hip_action != use_usd }");
			hou_parm_template3.setScriptCallbackLanguage(hou.scriptLanguage.Python);
			hou_parm_template3.setTags({"script_callback_language": "python"});
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template3 = new hou.StringParmTemplate({name: "hq_rendercommand", label: "Render Command", num_components: 1, default_value: ["husk"], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.Regular, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal});
			hou_parm_template3.setConditional(hou.parmCondType.DisableWhen, "{ hq_hip_action != use_usd }");
			hou_parm_template3.setScriptCallbackLanguage(hou.scriptLanguage.Python);
			hou_parm_template3.setTags({"script_callback_language": "python"});
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template3 = new hou.FloatParmTemplate({name: "hq_frame_range_", label: "Start/End/Inc", num_components: 3, default_value: [1, 240, 1], min: 0, max: 10, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.Base1});
			hou_parm_template3.setConditional(hou.parmCondType.DisableWhen, "{ hq_hip_action != use_ifd hq_hip_action != use_usd }");
			hou_parm_template3.setTags({"autoscope": "0000000000000000"});
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template3 = new hou.ToggleParmTemplate({name: "hq_autosave", label: "Automatically Save HIP File", default_value: false});
			hou_parm_template3.setConditional(hou.parmCondType.DisableWhen, "{ hq_hip_action == use_target_hip } { hq_hip_action == use_ifd } { hq_hip_action == use_usd }");
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template3 = new hou.ToggleParmTemplate({name: "hq_warn_unsaved_changes", label: "Warn If Unsaved Changes in HIP File", default_value: true});
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template3 = new hou.ToggleParmTemplate({name: "hq_skip_file_dependency_dialog", label: "Skip File Dependency Dialog", default_value: false});
			hou_parm_template3.setConditional(hou.parmCondType.DisableWhen, "{ hq_hip_action != copy_to_shared_folder }");
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template2 = new hou.FolderParmTemplate({name: "hq_use_cloud", label: "Local Farm", folder_type: hou.folderType.RadioButtons, default_value: 0, ends_tab_group: false});
			hou_parm_template2.hide(true);
			hou_parm_template2.setTags({"sidefx::switcher": "hq_use_cloud"});
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template2 = new hou.FolderParmTemplate({name: "hq_use_cloud_1", label: "Cloud", folder_type: hou.folderType.RadioButtons, default_value: 0, ends_tab_group: false});
			hou_parm_template2.hide(true);
			hou_parm_template2.setTags({"sidefx::switcher": "hq_use_cloud"});
			hou_parm_template3 = new hou.FolderParmTemplate({name: "amazon_warning_folder", label: "NOTE", folder_type: hou.folderType.Simple, default_value: 0, ends_tab_group: false});
			hou_parm_template3.setTags({"group_type": "simple", "sidefx::switcher": "amazon_warning_folder"});
			let hou_parm_template4 = new hou.LabelParmTemplate({name: "amazon_warning", label: "amazon_warning", column_labels: ["The Amazon Cloud render service is unavailable indefinitely due to reasons outside of SideFX's control."]});
			hou_parm_template4.hideLabel(true);
			hou_parm_template3.addParmTemplate(hou_parm_template4);
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template3 = new hou.ButtonParmTemplate({name: "hq_cloud_check_progress", label: "Check Progress"});
			hou_parm_template3.setJoinWithNext(true);
			hou_parm_template3.setHelp("Check the progress of an active render in the cloud.");
			hou_parm_template3.setScriptCallback("hou.pwd().hdaModule().onCheckProgress()");
			hou_parm_template3.setScriptCallbackLanguage(hou.scriptLanguage.Python);
			hou_parm_template3.setTags({"script_callback": "hou.pwd().hdaModule().onCheckProgress()", "script_callback_language": "python"});
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template3 = new hou.ButtonParmTemplate({name: "hq_cloud_amazon_web_console", label: "Check Amazon"});
			hou_parm_template3.setJoinWithNext(true);
			hou_parm_template3.setHelp("Use the Amazon web console to check for active machine instances.");
			hou_parm_template3.setScriptCallback("hou.pwd().hdaModule().onShowAmazonConsole()");
			hou_parm_template3.setScriptCallbackLanguage(hou.scriptLanguage.Python);
			hou_parm_template3.setTags({"script_callback": "hou.pwd().hdaModule().onShowAmazonConsole()", "script_callback_language": "python"});
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template3 = new hou.ButtonParmTemplate({name: "hq_cloud_help", label: "Help"});
			hou_parm_template3.setScriptCallback("hou.pwd().hdaModule().onShowHelp()");
			hou_parm_template3.setScriptCallbackLanguage(hou.scriptLanguage.Python);
			hou_parm_template3.setTags({"script_callback": "hou.pwd().hdaModule().onShowHelp()", "script_callback_language": "python"});
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template3 = new hou.StringParmTemplate({name: "hq_cloud_cached_file_info", label: "Cached File Info", num_components: 1, default_value: [""], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.Regular, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal});
			hou_parm_template3.hide(true);
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template3 = new hou.StringParmTemplate({name: "hq_cloud_machine_type", label: "Machine Type", num_components: 1, default_value: ["c3.xlarge"], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.Regular, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "import cloud\n\nmenu_items = []\nfor instance_type in cloud.SUPPORTED_INSTANCE_TYPES:\n    value = instance_type.model\n    label = \"(%s) %s\" % (instance_type.model, instance_type.description())\n    menu_items.append(value)\n    menu_items.append(label)\n    \nreturn menu_items", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal});
			hou_parm_template3.setHelp("The class of machine to launch in the cloud.");
			hou_parm_template3.setScriptCallback("hou.pwd().hdaModule().updatePriceInNode(hou.pwd())");
			hou_parm_template3.setScriptCallbackLanguage(hou.scriptLanguage.Python);
			hou_parm_template3.setTags({"script_callback": "hou.pwd().hdaModule().updatePriceInNode(hou.pwd())", "script_callback_language": "python"});
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template3 = new hou.IntParmTemplate({name: "hq_num_cloud_machines", label: "Num. Machines", num_components: 1, default_value: [1], min: 1, max: 20, min_is_strict: true, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.Base1, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal, menu_use_token: false});
			hou_parm_template3.setJoinWithNext(true);
			hou_parm_template3.setHelp("The total number of machine instances to start in the cloud.");
			hou_parm_template3.setScriptCallback("hou.pwd().hdaModule().updatePriceInNode(hou.pwd())");
			hou_parm_template3.setScriptCallbackLanguage(hou.scriptLanguage.Python);
			hou_parm_template3.setTags({"script_callback": "hou.pwd().hdaModule().updatePriceInNode(hou.pwd())", "script_callback_language": "python"});
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template3 = new hou.LabelParmTemplate({name: "hq_cloud_price", label: "price", column_labels: [""]});
			hou_parm_template3.hideLabel(true);
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template3 = new hou.SeparatorParmTemplate({name: "sepparm3"});
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template3 = new hou.MenuParmTemplate({name: "hq_cloud_region", label: "Cloud Region", menu_items: [], menu_labels: [], default_value: 0, icon_names: [], item_generator_script: "import cloud\n\nmenu_items = [ \"autodetect\", \"Use Detected\" ]\n\nfor region in cloud.SUPPORTED_REGIONS:\n    value = region.code\n    label = \"(%s) %s\" % (region.code, region.name)\n    menu_items.append(value)\n    menu_items.append(label)\n    \nreturn menu_items", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal, menu_use_token: false, is_button_strip: false, strip_uses_icons: false});
			hou_parm_template3.setJoinWithNext(true);
			hou_parm_template3.setScriptCallback("hou.pwd().hdaModule().updateDetectedRegionInNode(hou.pwd())");
			hou_parm_template3.setScriptCallbackLanguage(hou.scriptLanguage.Python);
			hou_parm_template3.setTags({"script_callback": "hou.pwd().hdaModule().updateDetectedRegionInNode(hou.pwd())", "script_callback_language": "python"});
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template3 = new hou.ButtonParmTemplate({name: "hq_cloud_redetect_region", label: "Redetect"});
			hou_parm_template3.hide(true);
			hou_parm_template3.setJoinWithNext(true);
			hou_parm_template3.setScriptCallback("hou.pwd().hdaModule().onRedetectRegion(hou.pwd())");
			hou_parm_template3.setScriptCallbackLanguage(hou.scriptLanguage.Python);
			hou_parm_template3.setTags({"script_callback": "hou.pwd().hdaModule().onRedetectRegion(hou.pwd())", "script_callback_language": "python"});
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template3 = new hou.LabelParmTemplate({name: "hq_cloud_detected_region", label: "hq_cloud_detected_region", column_labels: [""]});
			hou_parm_template3.hideLabel(true);
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template_group.append(hou_parm_template);
			hou_parm_template = new hou.FolderParmTemplate({name: "general_1", label: "Email Options", folder_type: hou.folderType.Tabs, default_value: 0, ends_tab_group: false});
			hou_parm_template.setTags({"sidefx::switcher": "general"});
			hou_parm_template2 = new hou.ToggleParmTemplate({name: "hq_will_email", label: "Send Status Emails", default_value: false});
			hou_parm_template2.setConditional(hou.parmCondType.DisableWhen, "{ hq_use_cloud1 == 1 }");
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template2 = new hou.StringParmTemplate({name: "hq_emailTo", label: "Email Address", num_components: 1, default_value: [""], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.Regular, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal});
			hou_parm_template2.setConditional(hou.parmCondType.DisableWhen, "{ hq_will_email == 0 } { hq_use_cloud1 == 1 }");
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template2 = new hou.ToggleParmTemplate({name: "hq_email_on_start", label: "On Start", default_value: true});
			hou_parm_template2.setConditional(hou.parmCondType.DisableWhen, "{ hq_will_email == 0 } { hq_use_cloud1 == 1 }");
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template2 = new hou.ToggleParmTemplate({name: "hq_email_on_success", label: "On Success", default_value: true});
			hou_parm_template2.setConditional(hou.parmCondType.DisableWhen, "{ hq_will_email == 0 } { hq_use_cloud1 == 1 }");
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template2 = new hou.ToggleParmTemplate({name: "hq_email_on_failure", label: "On Failure", default_value: true});
			hou_parm_template2.setConditional(hou.parmCondType.DisableWhen, "{ hq_will_email == 0 } { hq_use_cloud1 == 1 }");
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template2 = new hou.ToggleParmTemplate({name: "hq_email_on_pause", label: "On Pause", default_value: true});
			hou_parm_template2.setConditional(hou.parmCondType.DisableWhen, "{ hq_will_email == 0 } { hq_use_cloud1 == 1 }");
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template2 = new hou.ToggleParmTemplate({name: "hq_email_on_resume", label: "On Resume", default_value: true});
			hou_parm_template2.setConditional(hou.parmCondType.DisableWhen, "{ hq_will_email == 0 } { hq_use_cloud1 == 1 }");
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template2 = new hou.ToggleParmTemplate({name: "hq_email_on_reschedule", label: "On Reschedule", default_value: true});
			hou_parm_template2.setConditional(hou.parmCondType.DisableWhen, "{ hq_will_email == 0 } { hq_use_cloud1 == 1 }");
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template2 = new hou.ToggleParmTemplate({name: "hq_email_on_priority_change", label: "On Priority Change", default_value: true});
			hou_parm_template2.setConditional(hou.parmCondType.DisableWhen, "{ hq_will_email == 0 } { hq_use_cloud1 == 1 }");
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template_group.append(hou_parm_template);
			hou_parm_template = new hou.FolderParmTemplate({name: "general_2", label: "Mantra Options", folder_type: hou.folderType.Tabs, default_value: 0, ends_tab_group: false});
			hou_parm_template.setTags({"sidefx::switcher": "general"});
			hou_parm_template.setTabConditional(hou.parmCondType.DisableWhen, "{ hq_hip_action == use_usd }");
			hou_parm_template2 = new hou.FolderParmTemplate({name: "ifds_folder0", label: "IFDs", folder_type: hou.folderType.Simple, default_value: 0, ends_tab_group: false});
			hou_parm_template2.setTags({"group_type": "simple"});
			hou_parm_template3 = new hou.ToggleParmTemplate({name: "hq_makeifds", label: "Generate IFDs", default_value: true});
			hou_parm_template3.setConditional(hou.parmCondType.DisableWhen, "{ hq_hip_action == use_ifd hq_use_cloud1 != 1 }");
			hou_parm_template3.hideLabel(true);
			hou_parm_template3.setJoinWithNext(true);
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template3 = new hou.StringParmTemplate({name: "hq_outputifd", label: "Generate IFDs", num_components: 1, default_value: ["$HIP/ifds/$HIPNAME.$F.ifd"], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.FileReference, file_type: hou.fileType.Any, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.StringReplace});
			hou_parm_template3.setConditional(hou.parmCondType.DisableWhen, "{ hq_hip_action == use_ifd hq_use_cloud1 != 1 } { hq_makeifds != 1 }");
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template3 = new hou.MenuParmTemplate({name: "hq_assign_ifdgen_to", label: "Assign IFD Job To", menu_items: ["same", "clients", "client_groups"], menu_labels: ["Same Clients Assigned to Render Jobs", "Listed Clients", "Clients from Listed Groups"], default_value: 0, icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal, menu_use_token: false, is_button_strip: false, strip_uses_icons: false});
			hou_parm_template3.setConditional(hou.parmCondType.DisableWhen, "{ hq_hip_action == use_ifd hq_use_cloud1 != 1 } { hq_makeifds == 0 }");
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template3 = new hou.StringParmTemplate({name: "hq_ifdgen_clients", label: "Clients", num_components: 1, default_value: [""], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.Regular, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal});
			hou_parm_template3.setConditional(hou.parmCondType.DisableWhen, "{ hq_hip_action == use_ifd hq_use_cloud1 != 1 } { hq_makeifds == 0 } { hq_assign_ifdgen_to != clients }");
			hou_parm_template3.setJoinWithNext(true);
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template3 = new hou.ButtonParmTemplate({name: "select_ifdgen_clients", label: "Select Clients"});
			hou_parm_template3.setConditional(hou.parmCondType.DisableWhen, "{ hq_hip_action == use_ifd hq_use_cloud1 != 1 } { hq_makeifds == 0 } { hq_assign_ifdgen_to != clients }");
			hou_parm_template3.setScriptCallback("import hqrop; hqrop.selectClients(hou.parm(\"hq_server\").eval(), hou.parm(\"hq_ifdgen_clients\"))");
			hou_parm_template3.setScriptCallbackLanguage(hou.scriptLanguage.Python);
			hou_parm_template3.setTags({"script_callback": "import hqrop; hqrop.selectClients(hou.parm(\"hq_server\").eval(), hou.parm(\"hq_ifdgen_clients\"))", "script_callback_language": "python"});
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template3 = new hou.StringParmTemplate({name: "hq_ifdgen_client_groups", label: "Client Groups", num_components: 1, default_value: [""], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.Regular, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal});
			hou_parm_template3.setConditional(hou.parmCondType.DisableWhen, "{ hq_hip_action == use_ifd hq_use_cloud1 != 1 } { hq_makeifds == 0 } { hq_assign_ifdgen_to != client_groups }");
			hou_parm_template3.setJoinWithNext(true);
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template3 = new hou.ButtonParmTemplate({name: "select_ifdgen_client_groups", label: "Select Groups"});
			hou_parm_template3.setConditional(hou.parmCondType.DisableWhen, "{ hq_hip_action == use_ifd hq_use_cloud1 != 1 } { hq_makeifds == 0 } { hq_assign_ifdgen_to != client_groups }");
			hou_parm_template3.setScriptCallback("import hqrop; hqrop.selectClientGroups(hou.parm(\"hq_server\").eval(), hou.parm(\"hq_ifdgen_client_groups\"))");
			hou_parm_template3.setScriptCallbackLanguage(hou.scriptLanguage.Python);
			hou_parm_template3.setTags({"script_callback": "import hqrop; hqrop.selectClientGroups(hou.parm(\"hq_server\").eval(), hou.parm(\"hq_ifdgen_client_groups\"))", "script_callback_language": "python"});
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template3 = new hou.ToggleParmTemplate({name: "hq_delete_ifds", label: "Delete IFDs On Frame Completion", default_value: true});
			hou_parm_template3.setConditional(hou.parmCondType.DisableWhen, "{ hq_makeifds != 1 } { hq_hip_action == use_ifd } { hq_use_cloud1 == 1 }");
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template3 = new hou.ToggleParmTemplate({name: "hq_cross_platform_ifd", label: "Allow cross-platform rendering", default_value: false});
			hou_parm_template3.setConditional(hou.parmCondType.DisableWhen, "{ hq_makeifds == 0 hq_hip_action != use_ifd }");
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template3 = new hou.ToggleParmTemplate({name: "hq_distribute_ifd_gen", label: "Distribute IFD Generation", default_value: false});
			hou_parm_template3.setConditional(hou.parmCondType.DisableWhen, "{ hq_makeifds == 0 hq_hip_action != use_ifd }");
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template3 = new hou.ToggleParmTemplate({name: "hq_render_single_tile", label: "Render Single Tile", default_value: false});
			hou_parm_template3.setConditional(hou.parmCondType.DisableWhen, "{ hq_makeifds == 1 } { hq_use_cloud1 == 1 } { hq_hip_action == use_ifd }");
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template2 = new hou.FolderParmTemplate({name: "mantra_misc_folder1", label: "Miscellaneous", folder_type: hou.folderType.Simple, default_value: 0, ends_tab_group: false});
			hou_parm_template2.setTags({"group_type": "simple"});
			hou_parm_template3 = new hou.ToggleParmTemplate({name: "hq_enable_checkpoints", label: "Enable Checkpoints", default_value: true});
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template3 = new hou.IntParmTemplate({name: "hq_min_hosts", label: "Min. Clients per Frame", num_components: 1, default_value: [1], min: 1, max: 10, min_is_strict: true, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.Base1, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal, menu_use_token: false});
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template3 = new hou.IntParmTemplate({name: "hq_max_hosts", label: "Max. Clients per Frame", num_components: 1, default_value: [1], min: 1, max: 10, min_is_strict: true, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.Base1, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal, menu_use_token: false});
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template_group.append(hou_parm_template);
			hou_parm_template = new hou.FolderParmTemplate({name: "general_3", label: "USD Render Options", folder_type: hou.folderType.Tabs, default_value: 0, ends_tab_group: false});
			hou_parm_template.setTags({"sidefx::switcher": "general"});
			hou_parm_template.setTabConditional(hou.parmCondType.DisableWhen, "{ hq_hip_action == use_ifd } { hq_hip_action == use_usd }");
			hou_parm_template2 = new hou.ToggleParmTemplate({name: "hq_make_usds", label: "Generate USDs", default_value: true});
			hou_parm_template2.hideLabel(true);
			hou_parm_template2.setJoinWithNext(true);
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template2 = new hou.StringParmTemplate({name: "hq_output_usd", label: "USD Output File", num_components: 1, default_value: ["$HIP/usds/$HIPNAME-$F4/__render__.usd"], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.FileReference, file_type: hou.fileType.Any, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.StringReplace});
			hou_parm_template2.setConditional(hou.parmCondType.DisableWhen, "{ hq_make_usds == 0 }");
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template2 = new hou.FolderParmTemplate({name: "xn__GenerateUSDParms_kpad", label: "Generate USD Parms", folder_type: hou.folderType.Simple, default_value: 0, ends_tab_group: false});
			hou_parm_template2.setConditional(hou.parmCondType.DisableWhen, "{ hq_make_usds == 0 }");
			hou_parm_template2.setTags({"group_type": "simple", "sidefx::look": "blank"});
			hou_parm_template3 = new hou.MenuParmTemplate({name: "hq_assign_usdgen_to", label: "Assign USD Job To", menu_items: ["same", "clients", "client_groups"], menu_labels: ["Same Clients Assigned to Render Jobs", "Listed Clients", "Clients from Listed Groups"], default_value: 0, icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal, menu_use_token: false, is_button_strip: false, strip_uses_icons: false});
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template3 = new hou.StringParmTemplate({name: "hq_usdgen_clients", label: "Clients", num_components: 1, default_value: [""], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.Regular, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal});
			hou_parm_template3.setConditional(hou.parmCondType.DisableWhen, "{ hq_assign_usdgen_to != clients }");
			hou_parm_template3.setJoinWithNext(true);
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template3 = new hou.ButtonParmTemplate({name: "select_usdgen_clients", label: "Select Clients"});
			hou_parm_template3.setConditional(hou.parmCondType.DisableWhen, "{ hq_assign_usdgen_to != clients }");
			hou_parm_template3.setScriptCallback("import hqrop; hqrop.selectClients(hou.parm(\"hq_server\").eval(), hou.parm(\"hq_usdgen_clients\"))");
			hou_parm_template3.setScriptCallbackLanguage(hou.scriptLanguage.Python);
			hou_parm_template3.setTags({"script_callback": "import hqrop; hqrop.selectClients(hou.parm(\"hq_server\").eval(), hou.parm(\"hq_usdgen_clients\"))", "script_callback_language": "python"});
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template3 = new hou.StringParmTemplate({name: "hq_usdgen_client_groups", label: "Client Groups", num_components: 1, default_value: [""], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.Regular, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal});
			hou_parm_template3.setConditional(hou.parmCondType.DisableWhen, "{ hq_assign_usdgen_to != client_groups }");
			hou_parm_template3.setJoinWithNext(true);
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template3 = new hou.ButtonParmTemplate({name: "select_usdgen_client_groups", label: "Select Groups"});
			hou_parm_template3.setConditional(hou.parmCondType.DisableWhen, "{ hq_assign_usdgen_to != client_groups }");
			hou_parm_template3.setScriptCallback("import hqrop; hqrop.selectClientGroups(hou.parm(\"hq_server\").eval(), hou.parm(\"hq_usdgen_client_groups\"))");
			hou_parm_template3.setScriptCallbackLanguage(hou.scriptLanguage.Python);
			hou_parm_template3.setTags({"script_callback": "import hqrop; hqrop.selectClientGroups(hou.parm(\"hq_server\").eval(), hou.parm(\"hq_usdgen_client_groups\"))", "script_callback_language": "python"});
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template3 = new hou.ToggleParmTemplate({name: "hq_delete_usds", label: "Delete USD Directory On Frame Completion", default_value: true});
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template3 = new hou.ToggleParmTemplate({name: "hq_distribute_usd_gen", label: "Distribute USD Generation", default_value: false});
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template_group.append(hou_parm_template);
			hou_parm_template = new hou.FolderParmTemplate({name: "general_4", label: "Advanced", folder_type: hou.folderType.Tabs, default_value: 0, ends_tab_group: false});
			hou_parm_template.setTags({"sidefx::switcher": "general"});
			hou_parm_template2 = new hou.FolderParmTemplate({name: "clients_folder1", label: "Clients", folder_type: hou.folderType.Simple, default_value: 0, ends_tab_group: false});
			hou_parm_template2.setTags({"group_type": "simple"});
			hou_parm_template3 = new hou.MenuParmTemplate({name: "hq_assign_to", label: "Assign To", menu_items: ["any", "clients", "client_groups"], menu_labels: ["Any Client", "Listed Clients", "Clients from Listed Groups"], default_value: 0, icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal, menu_use_token: false, is_button_strip: false, strip_uses_icons: false});
			hou_parm_template3.setConditional(hou.parmCondType.DisableWhen, "{ hq_use_cloud1 != 0 }");
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template3 = new hou.StringParmTemplate({name: "hq_clients", label: "Clients", num_components: 1, default_value: [""], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.Regular, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal});
			hou_parm_template3.setConditional(hou.parmCondType.DisableWhen, "{ hq_use_cloud1 != 0 } { hq_assign_to != clients }");
			hou_parm_template3.setJoinWithNext(true);
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template3 = new hou.ButtonParmTemplate({name: "select_clients", label: "Select Clients"});
			hou_parm_template3.setConditional(hou.parmCondType.DisableWhen, "{ hq_use_cloud1 != 0 } { hq_assign_to != clients }");
			hou_parm_template3.setScriptCallback("import hqrop; hqrop.selectClients(hou.parm(\"hq_server\").eval(), hou.parm(\"hq_clients\"))");
			hou_parm_template3.setScriptCallbackLanguage(hou.scriptLanguage.Python);
			hou_parm_template3.setTags({"script_callback": "import hqrop; hqrop.selectClients(hou.parm(\"hq_server\").eval(), hou.parm(\"hq_clients\"))", "script_callback_language": "python"});
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template3 = new hou.StringParmTemplate({name: "hq_client_groups", label: "Client Groups", num_components: 1, default_value: [""], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.Regular, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal});
			hou_parm_template3.setConditional(hou.parmCondType.DisableWhen, "{ hq_use_cloud1 != 0 } { hq_assign_to != client_groups }");
			hou_parm_template3.setJoinWithNext(true);
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template3 = new hou.ButtonParmTemplate({name: "select_client_groups", label: "Select Groups"});
			hou_parm_template3.setConditional(hou.parmCondType.DisableWhen, "{ hq_use_cloud1 != 0 } { hq_assign_to != client_groups }");
			hou_parm_template3.setScriptCallback("import hqrop; hqrop.selectClientGroups(hou.parm(\"hq_server\").eval(), hou.parm(\"hq_client_groups\"))");
			hou_parm_template3.setScriptCallbackLanguage(hou.scriptLanguage.Python);
			hou_parm_template3.setTags({"script_callback": "import hqrop; hqrop.selectClientGroups(hou.parm(\"hq_server\").eval(), hou.parm(\"hq_client_groups\"))", "script_callback_language": "python"});
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template2 = new hou.FolderParmTemplate({name: "scheduling_folder0", label: "Scheduling", folder_type: hou.folderType.Simple, default_value: 0, ends_tab_group: false});
			hou_parm_template2.setTags({"group_type": "simple"});
			hou_parm_template3 = new hou.ToggleParmTemplate({name: "hq_batch_all_frames", label: "Batch All Frames in One Job", default_value: false});
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template3 = new hou.IntParmTemplate({name: "hq_framesperjob", label: "Frames per Job", num_components: 1, default_value: [1], min: 1, max: 25, min_is_strict: true, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.Base1, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal, menu_use_token: false});
			hou_parm_template3.setConditional(hou.parmCondType.DisableWhen, "{ hq_batch_all_frames == 1 }");
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template3 = new hou.MenuParmTemplate({name: "hq_render_frame_order", label: "Frame Order", menu_items: ["linear_order", "subdivision_order"], menu_labels: ["Render Frames in Linear Order", "Render Frames in Binary Subdivision Order"], default_value: 0, icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal, menu_use_token: false, is_button_strip: false, strip_uses_icons: false});
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template3 = new hou.ToggleParmTemplate({name: "hq_is_CPU_number_set", label: "Set Number of CPUs per Job", default_value: false});
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template3 = new hou.IntParmTemplate({name: "hq_CPUs_to_use", label: "CPUs per Job", num_components: 1, default_value: [1], min: 1, max: 8, min_is_strict: true, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.Base1, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal, menu_use_token: false});
			hou_parm_template3.setConditional(hou.parmCondType.DisableWhen, "{ hq_is_CPU_number_set == 0 }");
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template2 = new hou.FolderParmTemplate({name: "folder0", label: "Retries", folder_type: hou.folderType.Simple, default_value: 0, ends_tab_group: false});
			hou_parm_template2.setTags({"group_type": "simple"});
			hou_parm_template3 = new hou.IntParmTemplate({name: "hq_tries_left", label: "Render Retries", num_components: 1, default_value: [0], min: 0, max: 10, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.Base1, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal, menu_use_token: false});
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template3 = new hou.ToggleParmTemplate({name: "hq_tries_different_client", label: "Reschedule job on a different client on failure", default_value: false});
			hou_parm_template3.setConditional(hou.parmCondType.DisableWhen, "{ hq_tries_left == 0 }");
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template2 = new hou.FolderParmTemplate({name: "env_folder1", label: "Job Environment", folder_type: hou.folderType.Simple, default_value: 0, ends_tab_group: false});
			hou_parm_template2.setTags({"group_type": "simple"});
			hou_parm_template3 = new hou.FolderParmTemplate({name: "environment", label: "Environment Variables", folder_type: hou.folderType.MultiparmBlock, default_value: 0, ends_tab_group: false});
			hou_parm_template3.setTags({"multistartoffset": "0"});
			hou_parm_template4 = new hou.StringParmTemplate({name: "var_name#", label: "Name", num_components: 1, default_value: [""], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.Regular, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal});
			hou_parm_template3.addParmTemplate(hou_parm_template4);
			hou_parm_template4 = new hou.StringParmTemplate({name: "var_value#", label: "Value", num_components: 1, default_value: [""], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.Regular, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal});
			hou_parm_template3.addParmTemplate(hou_parm_template4);
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template2 = new hou.FolderParmTemplate({name: "dir_folder1", label: "Directories", folder_type: hou.folderType.Simple, default_value: 0, ends_tab_group: false});
			hou_parm_template2.setTags({"group_type": "simple"});
			hou_parm_template3 = new hou.FolderParmTemplate({name: "create_directories", label: "Create Directories", folder_type: hou.folderType.MultiparmBlock, default_value: 0, ends_tab_group: false});
			hou_parm_template3.setTags({"autoscope": "0000000000000000", "multistartoffset": "0"});
			hou_parm_template4 = new hou.StringParmTemplate({name: "directory_path#", label: "Directory Path", num_components: 1, default_value: [""], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.FileReference, file_type: hou.fileType.Any, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.StringReplace});
			hou_parm_template3.addParmTemplate(hou_parm_template4);
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template_group.append(hou_parm_template);
			hou_parm_template = new hou.ButtonParmTemplate({name: "renderpreview", label: "Render to MPlay"});
			hou_parm_template.hide(true);
			hou_parm_template.setTags({"takecontrol": "always"});
			hou_parm_template_group.append(hou_parm_template);
			hou_parm_template = new hou.ButtonParmTemplate({name: "executebackground", label: "Render to Disk in Background"});
			hou_parm_template.hide(true);
			hou_parm_template.setTags({"takecontrol": "always"});
			hou_parm_template_group.append(hou_parm_template);
			
            this.parmTemplateGroup = hou_parm_template_group;
            this.parmTemplateGroup.linkNode(this);
        }
    }
    hou.registerType('DRIVER/Farm/hq_render',_hnt_DRIVER_hq_render)
    return _hnt_DRIVER_hq_render
}
        