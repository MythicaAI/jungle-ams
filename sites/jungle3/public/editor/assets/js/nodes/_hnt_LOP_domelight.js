
export default function (hou) {
    class _hnt_LOP_domelight extends hou._HoudiniBase {
        static is_root = false;
        static id = 'LOP/Lights/domelight';
        static category = '/LOP';
        static houdiniType = 'domelight';
        static title = 'Dome Light';
        static icon = '/editor/assets/imgs/nodes/_hnt_LOP_domelight.svg';
        constructor() {
            super();
            this.flags['houdini_type'] = this.__proto__.constructor.houdiniType;
            
            const inputs = ['LOP'];
            const outputs = ['LOP'];

            for(var i=0;i<inputs.length;i++) this.addInput(''+i,inputs[i]);        
            for(var j=0;j<outputs.length;j++) this.addOutput(''+j,outputs[j]);
        }
        parmTemplatesInit() {
            let hou_parm_template_group = new hou.ParmTemplateGroup();
			this.parmTemplateGroup = hou_parm_template_group;
			let hou_parm_template = new hou.FolderParmTemplate({name: "sample_group", label: "Frame Range/Subframes", folder_type: hou.folderType.Collapsible, default_value: 0, ends_tab_group: false});
			hou_parm_template.setTags({"group_type": "collapsible", "sidefx::header_parm": "sample_behavior"});
			let hou_parm_template2 = new hou.StringParmTemplate({name: "sample_behavior", label: "Sampling Behavior", num_components: 1, default_value: ["single"], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.Regular, menu_items: ["single", "timedep", "multi"], menu_labels: ["Sample Current Frame", "Sample Frame Range If Input Is Not Time Dependent", "Sample Frame Range"], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal});
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template2 = new hou.FloatParmTemplate({name: "sample_f", label: "Start/End/Inc", num_components: 3, default_value: [1, 240, 1], default_expression: ["@fstart", "@fend", "@finc"], default_expression_language: [hou.scriptLanguage.Hscript, hou.scriptLanguage.Hscript, hou.scriptLanguage.Hscript], min: 0, max: 10, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.Base1});
			hou_parm_template2.setConditional(hou.parmCondType.DisableWhen, "{ sample_behavior == single }");
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template2 = new hou.ToggleParmTemplate({name: "sample_subframeenable", label: "Subframe Sampling", default_value: false});
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template2 = new hou.FolderParmTemplate({name: "sample_subframegroup", label: "Subframe Sampling", folder_type: hou.folderType.Simple, default_value: 0, ends_tab_group: false});
			hou_parm_template2.setConditional(hou.parmCondType.DisableWhen, "{ sample_subframeenable == 0 }");
			hou_parm_template2.setTags({"group_type": "simple", "sidefx::header_toggle": "sample_subframeenable"});
			let hou_parm_template3 = new hou.StringParmTemplate({name: "sample_shuttermode", label: "Shutter", num_components: 1, default_value: ["manual"], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.Regular, menu_items: ["cameraprim", "manual"], menu_labels: ["Use Camera Prim", "Specify Manually"], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal});
			hou_parm_template3.setConditional(hou.parmCondType.DisableWhen, "{ sample_subframeenable == 0 }");
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template3 = new hou.FloatParmTemplate({name: "sample_shutterrange", label: "Shutter Open/Close", num_components: 2, default_value: [null, 0.25], min: 0, max: 10, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.Base1});
			hou_parm_template3.setConditional(hou.parmCondType.DisableWhen, "{ sample_shuttermode == cameraprim } { sample_subframeenable == 0 }");
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template3 = new hou.StringParmTemplate({name: "sample_cameraprim", label: "Camera Prim", num_components: 1, default_value: ["/cameras/camera1"], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.Regular, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "import expressionmenu\nreturn expressionmenu.buildExpressionsMenu(('Lop/primpath',))", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.StringReplace});
			hou_parm_template3.setConditional(hou.parmCondType.DisableWhen, "{ sample_shuttermode == manual } { sample_subframeenable == 0 }");
			hou_parm_template3.setTags({"script_action": "import loputils\nloputils.selectPrimsInParm(kwargs, False)", "script_action_help": "Select a primitive in the Scene Viewer or Scene Graph Tree pane.\nCtrl-click to select using the primitive picker dialog.\nAlt-click to toggle movement of the display flag.", "script_action_icon": "BUTTONS_reselect", "sidefx::usdpathtype": "prim"});
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template3 = new hou.IntParmTemplate({name: "sample_count", label: "Samples", num_components: 1, default_value: [2], min: 2, max: 10, min_is_strict: true, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.Base1, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal, menu_use_token: false});
			hou_parm_template3.setConditional(hou.parmCondType.DisableWhen, "{ sample_subframeenable == 0 }");
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template3 = new hou.ToggleParmTemplate({name: "sample_includeframe", label: "Always Include Frame Sample", default_value: true});
			hou_parm_template3.setConditional(hou.parmCondType.DisableWhen, "{ sample_subframeenable == 0 }");
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template_group.append(hou_parm_template);
			hou_parm_template = new hou.StringParmTemplate({name: "primpattern", label: "Primitives", num_components: 1, default_value: ["`lopinputprims('.', 0)`"], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.Regular, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "import loputils\nreturn loputils.createPrimPatternMenu(kwargs['node'], 0)", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.StringToggle});
			hou_parm_template.setConditional(hou.parmCondType.HideWhen, "{ createprims == on }");
			hou_parm_template.setTags({"script_action": "import loputils\nloputils.selectPrimsInParm(kwargs, True)", "script_action_help": "Select primitives in the Scene Viewer or Scene Graph Tree pane.\nCtrl-click to select using the primitive picker dialog.\nShift-click to select using the primitive pattern editor.\nAlt-click to toggle movement of the display flag.", "script_action_icon": "BUTTONS_reselect", "sidefx::usdpathtype": "primlist"});
			hou_parm_template_group.append(hou_parm_template);
			hou_parm_template = new hou.StringParmTemplate({name: "primpath", label: "Primitive Path", num_components: 1, default_value: ["/lights/$OS"], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.Regular, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "import loputils\nreturn loputils.createPrimPathMenu()", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.StringReplace});
			hou_parm_template.setConditional(hou.parmCondType.HideWhen, "{ createprims != on }");
			hou_parm_template.setTags({"script_action": "import loputils\nloputils.selectPrimsInParm(kwargs, False)", "script_action_help": "Select a primitive in the Scene Viewer or Scene Graph Tree pane.\nCtrl-click to select using the primitive picker dialog.\nAlt-click to toggle movement of the display flag.", "script_action_icon": "BUTTONS_reselect", "sidefx::usdpathtype": "prim"});
			hou_parm_template_group.append(hou_parm_template);
			hou_parm_template = new hou.MenuParmTemplate({name: "createprims", label: "Action", menu_items: ["off", "on", "forceedit"], menu_labels: ["Edit", "Create", "Force Edit (Ignore Editable Flag)"], default_value: 1, icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal, menu_use_token: false, is_button_strip: false, strip_uses_icons: false});
			hou_parm_template_group.append(hou_parm_template);
			hou_parm_template = new hou.MenuParmTemplate({name: "initforedit", label: "Initialize Parameters", menu_items: [], menu_labels: [], default_value: 0, default_expression: "donothing", default_expression_language: hou.scriptLanguage.Hscript, icon_names: [], item_generator_script: "import loputils\nreturn loputils.createInitializeParametersMenu(kwargs['node'].parm('createprims').eval())", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal, menu_use_token: false, is_button_strip: false, strip_uses_icons: false});
			hou_parm_template.setScriptCallback("__import__('loputils').initializeParameters(kwargs['node'], kwargs['script_value'])");
			hou_parm_template.setScriptCallbackLanguage(hou.scriptLanguage.Python);
			hou_parm_template.setTags({"script_callback": "__import__('loputils').initializeParameters(kwargs['node'], kwargs['script_value'])", "script_callback_language": "python"});
			hou_parm_template_group.append(hou_parm_template);
			hou_parm_template = new hou.StringParmTemplate({name: "primtype", label: "Primitive Type", num_components: 1, default_value: ["UsdLuxDomeLight"], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.Regular, menu_items: ["UsdLuxDomeLight"], menu_labels: ["Dome Light"], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal});
			hou_parm_template.hide(true);
			hou_parm_template_group.append(hou_parm_template);
			hou_parm_template = new hou.StringParmTemplate({name: "parentprimtype", label: "Parent Primitive Type", num_components: 1, default_value: ["UsdGeomXform"], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.Regular, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "import loputils\nreturn loputils.createParentTypesMenu()", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal});
			hou_parm_template.hide(true);
			hou_parm_template_group.append(hou_parm_template);
			hou_parm_template = new hou.FolderParmTemplate({name: "folder0", label: "Transform", folder_type: hou.folderType.Tabs, default_value: 0, ends_tab_group: false});
			hou_parm_template2 = new hou.StringParmTemplate({name: "xn__xformOptransform_control_6fb", label: "Transform", num_components: 1, default_value: ["set"], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.Regular, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "import loputils\nreturn loputils.createEditPropertiesControlMenu(kwargs, 'xform')", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.ControlNextParameter});
			hou_parm_template2.setTags({"sidefx::look": "icon"});
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template2 = new hou.StringParmTemplate({name: "xn__xformOptransform_51a", label: "Operator Order", num_components: 1, default_value: ["append"], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.Regular, menu_items: ["append", "prepend", "overwriteorappend", "overwriteorprepend", "world", "replace"], menu_labels: ["Append", "Prepend", "Overwrite or Append", "Overwrite or Prepend", "Apply Transform in World Space", "Replace All Local Transforms"], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal});
			hou_parm_template2.setConditional(hou.parmCondType.DisableWhen, "{ xn__xformOptransform_control_6fb == block } { xn__xformOptransform_control_6fb == none }");
			hou_parm_template2.setTags({"usdvaluetype": "xform"});
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template2 = new hou.MenuParmTemplate({name: "xOrd", label: "Transform Order", menu_items: ["srt", "str", "rst", "rts", "tsr", "trs"], menu_labels: ["Scale Rot Trans", "Scale Trans Rot", "Rot Scale Trans", "Rot Trans Scale", "Trans Scale Rot", "Trans Rot Scale"], default_value: 0, icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal, menu_use_token: false, is_button_strip: false, strip_uses_icons: false});
			hou_parm_template2.setConditional(hou.parmCondType.DisableWhen, "{ xn__xformOptransform_control_6fb == block } { xn__xformOptransform_control_6fb == none }");
			hou_parm_template2.setJoinWithNext(true);
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template2 = new hou.MenuParmTemplate({name: "rOrd", label: "Rotate Order", menu_items: ["xyz", "xzy", "yxz", "yzx", "zxy", "zyx"], menu_labels: ["Rx Ry Rz", "Rx Rz Ry", "Ry Rx Rz", "Ry Rz Rx", "Rz Rx Ry", "Rz Ry Rx"], default_value: 0, icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal, menu_use_token: false, is_button_strip: false, strip_uses_icons: false});
			hou_parm_template2.setConditional(hou.parmCondType.DisableWhen, "{ xn__xformOptransform_control_6fb == block } { xn__xformOptransform_control_6fb == none }");
			hou_parm_template2.hideLabel(true);
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template2 = new hou.FloatParmTemplate({name: "t", label: "Translate", num_components: 3, default_value: [0, 0, 0], min: null, max: 1, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.XYZW});
			hou_parm_template2.setConditional(hou.parmCondType.DisableWhen, "{ xn__xformOptransform_control_6fb == block } { xn__xformOptransform_control_6fb == none }");
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template2 = new hou.FloatParmTemplate({name: "r", label: "Rotate", num_components: 3, default_value: [0, 0, 0], min: 0, max: 360, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.XYZW});
			hou_parm_template2.setConditional(hou.parmCondType.DisableWhen, "{ xn__xformOptransform_control_6fb == block } { xn__xformOptransform_control_6fb == none }");
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template2 = new hou.FloatParmTemplate({name: "s", label: "Scale", num_components: 3, default_value: [1, 1, 1], min: null, max: 1, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.XYZW});
			hou_parm_template2.setConditional(hou.parmCondType.DisableWhen, "{ xn__xformOptransform_control_6fb == block } { xn__xformOptransform_control_6fb == none }");
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template2 = new hou.FloatParmTemplate({name: "shear", label: "Shear", num_components: 3, default_value: [0, 0, 0], min: 0, max: 10, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.Base1});
			hou_parm_template2.setConditional(hou.parmCondType.DisableWhen, "{ xn__xformOptransform_control_6fb == block } { xn__xformOptransform_control_6fb == none }");
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template2 = new hou.FloatParmTemplate({name: "scale", label: "Uniform Scale", num_components: 1, default_value: [1], min: 0, max: 10, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.Base1});
			hou_parm_template2.setConditional(hou.parmCondType.DisableWhen, "{ xn__xformOptransform_control_6fb == block } { xn__xformOptransform_control_6fb == none }");
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template2 = new hou.FolderParmTemplate({name: "pivotxform", label: "Pivot Transform", folder_type: hou.folderType.Collapsible, default_value: 0, ends_tab_group: false});
			hou_parm_template2.setConditional(hou.parmCondType.DisableWhen, "{ xn__xformOptransform_control_6fb == block } { xn__xformOptransform_control_6fb == none }");
			hou_parm_template2.setTags({"group_type": "collapsible"});
			hou_parm_template3 = new hou.FloatParmTemplate({name: "p", label: "Pivot Translate", num_components: 3, default_value: [0, 0, 0], min: null, max: 1, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.XYZW});
			hou_parm_template3.setConditional(hou.parmCondType.DisableWhen, "{ xn__xformOptransform_control_6fb == block } { xn__xformOptransform_control_6fb == none }");
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template3 = new hou.FloatParmTemplate({name: "pr", label: "Pivot Rotate", num_components: 3, default_value: [0, 0, 0], min: null, max: 1, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.XYZW});
			hou_parm_template3.setConditional(hou.parmCondType.DisableWhen, "{ xn__xformOptransform_control_6fb == block } { xn__xformOptransform_control_6fb == none }");
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template_group.append(hou_parm_template);
			hou_parm_template = new hou.FolderParmTemplate({name: "folder0_1", label: "Base Properties", folder_type: hou.folderType.Tabs, default_value: 0, ends_tab_group: false});
			hou_parm_template2 = new hou.StringParmTemplate({name: "intensity_control", label: "Intensity", num_components: 1, default_value: ["set"], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.Regular, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "import loputils\nreturn loputils.createEditPropertiesControlMenu(kwargs, 'float')", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.ControlNextParameter});
			hou_parm_template2.setTags({"sidefx::look": "icon"});
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template2 = new hou.FloatParmTemplate({name: "intensity", label: "Intensity", num_components: 1, default_value: [1], min: 0, max: 10, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.Base1});
			hou_parm_template2.setConditional(hou.parmCondType.DisableWhen, "{ intensity_control == block } { intensity_control == none }");
			hou_parm_template2.setTags({"usdvaluename": "inputs:intensity", "usdvaluetype": "float"});
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template2 = new hou.StringParmTemplate({name: "exposure_control", label: "Exposure", num_components: 1, default_value: ["set"], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.Regular, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "import loputils\nreturn loputils.createEditPropertiesControlMenu(kwargs, 'float')", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.ControlNextParameter});
			hou_parm_template2.setTags({"sidefx::look": "icon"});
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template2 = new hou.FloatParmTemplate({name: "exposure", label: "Exposure", num_components: 1, default_value: [0], min: null, max: 10, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.Base1});
			hou_parm_template2.setConditional(hou.parmCondType.DisableWhen, "{ exposure_control == block } { exposure_control == none }");
			hou_parm_template2.setTags({"usdvaluename": "inputs:exposure", "usdvaluetype": "float"});
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template2 = new hou.StringParmTemplate({name: "color_control", label: "Color", num_components: 1, default_value: ["set"], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.Regular, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "import loputils\nreturn loputils.createEditPropertiesControlMenu(kwargs, 'color3f')", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.ControlNextParameter});
			hou_parm_template2.setTags({"sidefx::look": "icon"});
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template2 = new hou.FloatParmTemplate({name: "color", label: "Color", num_components: 3, default_value: [1, 1, 1], min: 0, max: 1, min_is_strict: false, max_is_strict: false, look: hou.parmLook.ColorSquare, naming_scheme: hou.parmNamingScheme.RGBA});
			hou_parm_template2.setConditional(hou.parmCondType.DisableWhen, "{ color_control == block } { color_control == none }");
			hou_parm_template2.setTags({"usdvaluename": "inputs:color", "usdvaluetype": "color3f"});
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template2 = new hou.StringParmTemplate({name: "enableColorTemperature_control", label: "Enable Color Temperature", num_components: 1, default_value: ["set"], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.Regular, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "import loputils\nreturn loputils.createEditPropertiesControlMenu(kwargs, 'bool')", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.ControlNextParameter});
			hou_parm_template2.setTags({"sidefx::look": "icon"});
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template2 = new hou.ToggleParmTemplate({name: "enableColorTemperature", label: "Enable Color Temperature", default_value: false});
			hou_parm_template2.setConditional(hou.parmCondType.DisableWhen, "{ enableColorTemperature_control == block } { enableColorTemperature_control == none }");
			hou_parm_template2.setTags({"usdvaluename": "inputs:enableColorTemperature", "usdvaluetype": "bool"});
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template2 = new hou.StringParmTemplate({name: "colorTemperature_control", label: "Color Temperature", num_components: 1, default_value: ["set"], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.Regular, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "import loputils\nreturn loputils.createEditPropertiesControlMenu(kwargs, 'float')", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.ControlNextParameter});
			hou_parm_template2.setTags({"sidefx::look": "icon"});
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template2 = new hou.FloatParmTemplate({name: "colorTemperature", label: "Color Temperature", num_components: 1, default_value: [6500], min: 500, max: 100000, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Logarithmic, naming_scheme: hou.parmNamingScheme.Base1});
			hou_parm_template2.setConditional(hou.parmCondType.DisableWhen, "{ enableColorTemperature == 0 createprims == on } { colorTemperature_control == block } { colorTemperature_control == none }");
			hou_parm_template2.setTags({"usdvaluename": "inputs:colorTemperature", "usdvaluetype": "float"});
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template2 = new hou.StringParmTemplate({name: "xn__texturefile_control_16a", label: "Texture", num_components: 1, default_value: ["set"], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.Regular, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "import loputils\nreturn loputils.createEditPropertiesControlMenu(kwargs, 'asset')", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.ControlNextParameter});
			hou_parm_template2.setTags({"sidefx::look": "icon"});
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template2 = new hou.StringParmTemplate({name: "xn__texturefile_0ta", label: "Texture", num_components: 1, default_value: [""], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.FileReference, file_type: hou.fileType.Image, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.StringReplace});
			hou_parm_template2.setConditional(hou.parmCondType.DisableWhen, "{ xn__texturefile_control_16a == block } { xn__texturefile_control_16a == none }");
			hou_parm_template2.setTags({"usdvaluename": "inputs:texture:file", "usdvaluetype": "asset"});
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template2 = new hou.StringParmTemplate({name: "xn__textureformat_control_bbb", label: "Format", num_components: 1, default_value: ["set"], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.Regular, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "import loputils\nreturn loputils.createEditPropertiesControlMenu(kwargs, 'token')", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.ControlNextParameter});
			hou_parm_template2.setTags({"sidefx::look": "icon"});
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template2 = new hou.StringParmTemplate({name: "xn__textureformat_9wa", label: "Format", num_components: 1, default_value: ["automatic"], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.Regular, menu_items: ["automatic", "latlong", "mirroredBall", "angular", "cubeMapVerticalCross"], menu_labels: ["Automatic", "Lat-Long", "Mirrored Ball", "Angular", "Cube Map (Vertical Cross)"], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal});
			hou_parm_template2.setConditional(hou.parmCondType.DisableWhen, "{ xn__textureformat_control_bbb == block } { xn__textureformat_control_bbb == none }");
			hou_parm_template2.setTags({"usdvaluename": "inputs:texture:format", "usdvaluetype": "token"});
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template2 = new hou.StringParmTemplate({name: "normalize_control", label: "Normalize", num_components: 1, default_value: ["set"], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.Regular, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "import loputils\nreturn loputils.createEditPropertiesControlMenu(kwargs, 'bool')", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.ControlNextParameter});
			hou_parm_template2.setTags({"sidefx::look": "icon"});
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template2 = new hou.ToggleParmTemplate({name: "normalize", label: "Normalize Power", default_value: false});
			hou_parm_template2.setConditional(hou.parmCondType.DisableWhen, "{ normalize_control == block } { normalize_control == none }");
			hou_parm_template2.setTags({"usdvaluename": "inputs:normalize", "usdvaluetype": "bool"});
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template2 = new hou.StringParmTemplate({name: "filters_control", label: "Filters", num_components: 1, default_value: ["set"], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.Regular, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "import loputils\nreturn loputils.createEditPropertiesControlMenu(kwargs, 'relationship')", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.ControlNextParameter});
			hou_parm_template2.setTags({"sidefx::look": "icon"});
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template2 = new hou.StringParmTemplate({name: "filters", label: "Filters", num_components: 1, default_value: [""], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.Regular, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal});
			hou_parm_template2.setConditional(hou.parmCondType.DisableWhen, "{ filters_control == block } { filters_control == none }");
			hou_parm_template2.setTags({"script_action": "import loputils\nloputils.selectPrimsInParm(kwargs, True,\n                           inputidx = -1)", "script_action_help": "Select primitives in the Scene Viewer or Scene Graph Tree pane.\nCtrl-click to select using the primitive picker dialog.\nShift-click to select using the primitive pattern editor.\nAlt-click to toggle movement of the display flag.", "script_action_icon": "BUTTONS_reselect", "usdvaluetype": "relationship"});
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template2 = new hou.StringParmTemplate({name: "portals_control", label: "Portals", num_components: 1, default_value: ["set"], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.Regular, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "import loputils\nreturn loputils.createEditPropertiesControlMenu(kwargs, 'relationship')", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.ControlNextParameter});
			hou_parm_template2.setTags({"sidefx::look": "icon"});
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template2 = new hou.StringParmTemplate({name: "portals", label: "Portals", num_components: 1, default_value: [""], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.Regular, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal});
			hou_parm_template2.setConditional(hou.parmCondType.DisableWhen, "{ portals_control == block } { portals_control == none }");
			hou_parm_template2.setTags({"script_action": "import loputils\nloputils.selectPrimsInParm(kwargs, True,\n                           inputidx = -1)\n", "script_action_help": "Select primitives in the Scene Viewer or Scene Graph Tree pane.\nCtrl-click to select using the primitive picker dialog.\nShift-click to select using the primitive pattern editor.\nAlt-click to toggle movement of the display flag.", "script_action_icon": "BUTTONS_reselect", "usdvaluetype": "relationship"});
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template2 = new hou.StringParmTemplate({name: "diffuse_control", label: "Diffuse", num_components: 1, default_value: ["set"], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.Regular, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "import loputils\nreturn loputils.createEditPropertiesControlMenu(kwargs, 'float')", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.ControlNextParameter});
			hou_parm_template2.setTags({"sidefx::look": "icon"});
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template2 = new hou.FloatParmTemplate({name: "diffuse", label: "Diffuse Multiplier", num_components: 1, default_value: [1], min: 0, max: 10, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.Base1});
			hou_parm_template2.setConditional(hou.parmCondType.DisableWhen, "{ diffuse_control == block } { diffuse_control == none }");
			hou_parm_template2.setTags({"usdvaluename": "inputs:diffuse", "usdvaluetype": "float"});
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template2 = new hou.StringParmTemplate({name: "specular_control", label: "Specular", num_components: 1, default_value: ["set"], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.Regular, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "import loputils\nreturn loputils.createEditPropertiesControlMenu(kwargs, 'float')", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.ControlNextParameter});
			hou_parm_template2.setTags({"sidefx::look": "icon"});
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template2 = new hou.FloatParmTemplate({name: "specular", label: "Specular Multiplier", num_components: 1, default_value: [1], min: 0, max: 10, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.Base1});
			hou_parm_template2.setConditional(hou.parmCondType.DisableWhen, "{ specular_control == block } { specular_control == none }");
			hou_parm_template2.setTags({"usdvaluename": "inputs:specular", "usdvaluetype": "float"});
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template2 = new hou.StringParmTemplate({name: "xn__houdiniguidescale_control_thb", label: "houdini:guidescale", num_components: 1, default_value: ["set"], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.Regular, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "import loputils\nreturn loputils.createEditPropertiesControlMenu(kwargs, 'float')", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.ControlNextParameter});
			hou_parm_template2.setTags({"sidefx::look": "icon"});
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template2 = new hou.FloatParmTemplate({name: "xn__houdiniguidescale_s3a", label: "Scale Guide Geometry", num_components: 1, default_value: [0], default_expression: ["1 / __import__('loputils').getMetersPerUnit(pwd())"], default_expression_language: [hou.scriptLanguage.Python], min: 0, max: 10, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.Base1});
			hou_parm_template2.setConditional(hou.parmCondType.DisableWhen, "{ xn__houdiniguidescale_control_thb == block } { xn__houdiniguidescale_control_thb == none }");
			hou_parm_template2.setTags({"usdvaluetype": "float"});
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template_group.append(hou_parm_template);
			hou_parm_template = new hou.FolderParmTemplate({name: "folder0_2", label: "Shadow", folder_type: hou.folderType.Tabs, default_value: 0, ends_tab_group: false});
			hou_parm_template2 = new hou.StringParmTemplate({name: "xn__shadowenable_control_n8a", label: "Enable", num_components: 1, default_value: ["none"], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.Regular, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "import loputils\nreturn loputils.createEditPropertiesControlMenu(kwargs, 'bool')", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.ControlNextParameter});
			hou_parm_template2.setTags({"sidefx::look": "icon"});
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template2 = new hou.ToggleParmTemplate({name: "xn__shadowenable_mva", label: "Enable", default_value: true});
			hou_parm_template2.setConditional(hou.parmCondType.DisableWhen, "{ xn__shadowenable_control_n8a == block } { xn__shadowenable_control_n8a == none }");
			hou_parm_template2.setTags({"usdapischema": "ShadowAPI", "usdvaluetype": "bool"});
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template2 = new hou.StringParmTemplate({name: "xn__shadowcolor_control_06a", label: "Color", num_components: 1, default_value: ["none"], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.Regular, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "import loputils\nreturn loputils.createEditPropertiesControlMenu(kwargs, 'color3f')", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.ControlNextParameter});
			hou_parm_template2.setTags({"sidefx::look": "icon"});
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template2 = new hou.FloatParmTemplate({name: "xn__shadowcolor_zta", label: "Color", num_components: 3, default_value: [0, 0, 0], min: 0, max: 1, min_is_strict: false, max_is_strict: false, look: hou.parmLook.ColorSquare, naming_scheme: hou.parmNamingScheme.RGBA});
			hou_parm_template2.setConditional(hou.parmCondType.DisableWhen, "{ xn__shadowcolor_control_06a == block } { xn__shadowcolor_control_06a == none }");
			hou_parm_template2.setTags({"colortype": "hsv", "usdapischema": "ShadowAPI", "usdvaluetype": "color3f"});
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template2 = new hou.StringParmTemplate({name: "xn__shadowdistance_control_wcb", label: "Distance", num_components: 1, default_value: ["none"], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.Regular, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "import loputils\nreturn loputils.createEditPropertiesControlMenu(kwargs, 'float')", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.ControlNextParameter});
			hou_parm_template2.setTags({"sidefx::look": "icon"});
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template2 = new hou.FloatParmTemplate({name: "xn__shadowdistance_vya", label: "Distance", num_components: 1, default_value: [1], min: 0, max: 10, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.Base1});
			hou_parm_template2.setConditional(hou.parmCondType.DisableWhen, "{ xn__shadowdistance_control_wcb == block } { xn__shadowdistance_control_wcb == none }");
			hou_parm_template2.setTags({"usdapischema": "ShadowAPI", "usdvaluetype": "float"});
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template_group.append(hou_parm_template);
			
            this.parmTemplateGroup = hou_parm_template_group;
            this.parmTemplateGroup.linkNode(this);
        }
    }
    hou.registerType('LOP/Lights/domelight',_hnt_LOP_domelight)
    return _hnt_LOP_domelight
}
        