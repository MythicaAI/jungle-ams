
export default function (hou) {
    class _hnt_SOP_feathernoise extends hou.extend(hou._HoudiniBase).with(hou._SubgraphMixin) {
        static is_root = false;
        static id = 'SOP/Character FX/Feathers/feathernoise';
        static category = '/SOP';
        static houdiniType = 'feathernoise';
        static title = 'Feather Noise';
        static icon = '/editor/assets/imgs/nodes/_hnt_SOP_feathernoise.svg';
        constructor() {
            super();
            this.flags['houdini_type'] = this.__proto__.constructor.houdiniType;
            
            const inputs = ['SOP', 'SOP', 'SOP'];
            const outputs = ['SOP', 'SOP', 'SOP'];

            for(var i=0;i<inputs.length;i++) this.addInput(''+i,inputs[i]);        
            for(var j=0;j<outputs.length;j++) this.addOutput(''+j,outputs[j]);
        }
        parmTemplatesInit() {
            let hou_parm_template_group = new hou.ParmTemplateGroup();
			this.parmTemplateGroup = hou_parm_template_group;
			let hou_parm_template = new hou.FloatParmTemplate({name: "amplitude", label: "Ampltitude", num_components: 1, default_value: [0.01], min: 0, max: 0.1, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Logarithmic, naming_scheme: hou.parmNamingScheme.Base1});
			hou_parm_template.setJoinWithNext(true);
			hou_parm_template.setScriptCallbackLanguage(hou.scriptLanguage.Python);
			hou_parm_template.setTags({"script_callback_language": "python"});
			hou_parm_template_group.append(hou_parm_template);
			hou_parm_template = new hou.MenuParmTemplate({name: "amplitudeoverride", label: "Ampltitude Override", menu_items: ["none", "curveattrib", "skinattrib", "texture", "textureprim"], menu_labels: ["No Override", "Guide Attribute", "Skin Attribute", "Texture", "Texture Primitive"], default_value: 0, icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal, menu_use_token: false, is_button_strip: false, strip_uses_icons: false});
			hou_parm_template.hideLabel(true);
			hou_parm_template.setJoinWithNext(true);
			hou_parm_template.setTags({"parmoverride_mainparm": "amplitude"});
			hou_parm_template_group.append(hou_parm_template);
			hou_parm_template = new hou.MenuParmTemplate({name: "amplitudeoptions", label: "Ampltitude Options", menu_items: ["fit", "ramp"], menu_labels: ["Fit", "Ramp"], default_value: 0, icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.StringToggle, menu_use_token: false, is_button_strip: true, strip_uses_icons: false});
			hou_parm_template.hideLabel(true);
			hou_parm_template.setTags({"parmoverride_mainparm": "amplitude"});
			hou_parm_template_group.append(hou_parm_template);
			hou_parm_template = new hou.FloatParmTemplate({name: "amplitudeinrange", label: "In Range", num_components: 2, default_value: [0, 1], min: 0, max: 10, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.Base1});
			hou_parm_template.setConditional(hou.parmCondType.DisableWhen, "{ amplitudeoverride == none }");
			hou_parm_template.setConditional(hou.parmCondType.HideWhen, "{ amplitudeoptions != 1 amplitudeoptions != 3 }");
			hou_parm_template.setJoinWithNext(true);
			hou_parm_template.setTags({"parmoverride_mainparm": "amplitude"});
			hou_parm_template_group.append(hou_parm_template);
			hou_parm_template = new hou.FloatParmTemplate({name: "amplitudeoutrange", label: "Out Range", num_components: 2, default_value: [0, 1], min: 0, max: 10, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.Base1});
			hou_parm_template.setConditional(hou.parmCondType.DisableWhen, "{ amplitudeoverride == none }");
			hou_parm_template.setConditional(hou.parmCondType.HideWhen, "{ amplitudeoptions != 1 amplitudeoptions != 3 }");
			hou_parm_template.setTags({"parmoverride_mainparm": "amplitude"});
			hou_parm_template_group.append(hou_parm_template);
			hou_parm_template = new hou.RampParmTemplate({name: "amplituderemapramp", label: "Ampltitude Remap Ramp", ramp_parm_type: hou.rampParmType.Float, default_value: 2, default_basis: null, color_type: null});
			hou_parm_template.setConditional(hou.parmCondType.HideWhen, "{ amplitudeoptions != 2 amplitudeoptions != 3 }");
			hou_parm_template.setTags({"parmoverride_mainparm": "amplitude"});
			hou_parm_template_group.append(hou_parm_template);
			hou_parm_template = new hou.StringParmTemplate({name: "amplitudecurveattrib", label: "Ampltitude Attrib", num_components: 1, default_value: ["amplitude"], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.Regular, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "import furtoolutils\n\ntry:\n    return furtoolutils.buildSkinPaintAttribMenu(\n            kwargs['node'], skininput=0, skinparmname=None,\n            attribSize=1)\nexcept:\n    return []", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.StringReplace});
			hou_parm_template.setConditional(hou.parmCondType.HideWhen, "{ amplitudeoverride != curveattrib }");
			hou_parm_template.setTags({"parmoverride_mainparm": "amplitude"});
			hou_parm_template_group.append(hou_parm_template);
			hou_parm_template = new hou.StringParmTemplate({name: "amplitudeattrib", label: "Ampltitude Attrib", num_components: 1, default_value: ["amplitude"], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.Regular, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "import furtoolutils\n\ntry:\n    return furtoolutils.buildSkinPaintAttribMenu(\n            kwargs['node'], skininput=1, skinparmname=None,\n            attribSize=1)\nexcept:\n    return []", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.StringReplace});
			hou_parm_template.setConditional(hou.parmCondType.HideWhen, "{ amplitudeoverride != skinattrib }");
			hou_parm_template.setTags({"parmoverride_mainparm": "amplitude", "script_action": "import furtoolutils\n\nfurtoolutils.paintSkinAttrib(\n    kwargs,\n    kwargs['parmtuple'][0].eval(),\n    1.0, 1,\n    skinparmname=None)", "script_action_help": "Paint Ampltitude Attrib", "script_action_icon": "SOP_paint"});
			hou_parm_template_group.append(hou_parm_template);
			hou_parm_template = new hou.StringParmTemplate({name: "amplitudetexture", label: "Ampltitude Texture", num_components: 1, default_value: [""], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.FileReference, file_type: hou.fileType.Image, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.StringReplace});
			hou_parm_template.setConditional(hou.parmCondType.HideWhen, "{ amplitudeoverride != texture }");
			hou_parm_template.setTags({"parmoverride_mainparm": "amplitude"});
			hou_parm_template_group.append(hou_parm_template);
			hou_parm_template = new hou.StringParmTemplate({name: "amplitudetextureprim", label: "Ampltitude Texture", num_components: 1, default_value: ["mask"], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.Regular, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "import terraintoolutils\n\nreturn terraintoolutils.buildNameMenu(kwargs['node'], input_num=2)", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.StringReplace});
			hou_parm_template.setConditional(hou.parmCondType.HideWhen, "{ amplitudeoverride != textureprim }");
			hou_parm_template.setJoinWithNext(true);
			hou_parm_template.setTags({"parmoverride_mainparm": "amplitude", "script_action": "import furtoolutils\n\nfurtoolutils.paintTextureMask(\n    kwargs,\n    kwargs['parmtuple'][0].eval(),\n    1.0, skininput=1,\n    skinparmname=None,\n    textureinput=2)", "script_action_help": "Paint Ampltitude Attrib Texture", "script_action_icon": "SOP_paint"});
			hou_parm_template_group.append(hou_parm_template);
			hou_parm_template = new hou.MenuParmTemplate({name: "amplitudeuvmode", label: "UV Mode", menu_items: ["skinuv", "featheruv"], menu_labels: ["Skin UV", "Feather UV"], default_value: 0, icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal, menu_use_token: false, is_button_strip: false, strip_uses_icons: false});
			hou_parm_template.setConditional(hou.parmCondType.HideWhen, "{ amplitudeoverride != textureprim }");
			hou_parm_template.hideLabel(true);
			hou_parm_template.setTags({"parmoverride_mainparm": "amplitude"});
			hou_parm_template_group.append(hou_parm_template);
			hou_parm_template = new hou.FloatParmTemplate({name: "amplitudenormal", label: "Amplitude Normal", num_components: 1, default_value: [1], min: 0, max: 1, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Logarithmic, naming_scheme: hou.parmNamingScheme.Base1});
			hou_parm_template.setJoinWithNext(true);
			hou_parm_template.setScriptCallbackLanguage(hou.scriptLanguage.Python);
			hou_parm_template.setTags({"script_callback_language": "python"});
			hou_parm_template_group.append(hou_parm_template);
			hou_parm_template = new hou.MenuParmTemplate({name: "amplitudenormaloverride", label: "Amplitude Normal Override", menu_items: ["none", "curveattrib", "skinattrib", "texture", "textureprim"], menu_labels: ["No Override", "Guide Attribute", "Skin Attribute", "Texture", "Texture Primitive"], default_value: 0, icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal, menu_use_token: false, is_button_strip: false, strip_uses_icons: false});
			hou_parm_template.hideLabel(true);
			hou_parm_template.setJoinWithNext(true);
			hou_parm_template.setTags({"parmoverride_mainparm": "amplitudenormal"});
			hou_parm_template_group.append(hou_parm_template);
			hou_parm_template = new hou.MenuParmTemplate({name: "amplitudenormaloptions", label: "Amplitude Normal Options", menu_items: ["fit", "ramp"], menu_labels: ["Fit", "Ramp"], default_value: 0, icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.StringToggle, menu_use_token: false, is_button_strip: true, strip_uses_icons: false});
			hou_parm_template.hideLabel(true);
			hou_parm_template.setTags({"parmoverride_mainparm": "amplitudenormal"});
			hou_parm_template_group.append(hou_parm_template);
			hou_parm_template = new hou.FloatParmTemplate({name: "amplitudenormalinrange", label: "In Range", num_components: 2, default_value: [0, 1], min: 0, max: 10, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.Base1});
			hou_parm_template.setConditional(hou.parmCondType.DisableWhen, "{ amplitudenormaloverride == none }");
			hou_parm_template.setConditional(hou.parmCondType.HideWhen, "{ amplitudenormaloptions != 1 amplitudenormaloptions != 3 }");
			hou_parm_template.setJoinWithNext(true);
			hou_parm_template.setTags({"parmoverride_mainparm": "amplitudenormal"});
			hou_parm_template_group.append(hou_parm_template);
			hou_parm_template = new hou.FloatParmTemplate({name: "amplitudenormaloutrange", label: "Out Range", num_components: 2, default_value: [0, 1], min: 0, max: 10, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.Base1});
			hou_parm_template.setConditional(hou.parmCondType.DisableWhen, "{ amplitudenormaloverride == none }");
			hou_parm_template.setConditional(hou.parmCondType.HideWhen, "{ amplitudenormaloptions != 1 amplitudenormaloptions != 3 }");
			hou_parm_template.setTags({"parmoverride_mainparm": "amplitudenormal"});
			hou_parm_template_group.append(hou_parm_template);
			hou_parm_template = new hou.RampParmTemplate({name: "amplitudenormalremapramp", label: "Amplitude Normal Remap Ramp", ramp_parm_type: hou.rampParmType.Float, default_value: 2, default_basis: null, color_type: null});
			hou_parm_template.setConditional(hou.parmCondType.HideWhen, "{ amplitudenormaloptions != 2 amplitudenormaloptions != 3 }");
			hou_parm_template.setTags({"parmoverride_mainparm": "amplitudenormal"});
			hou_parm_template_group.append(hou_parm_template);
			hou_parm_template = new hou.StringParmTemplate({name: "amplitudenormalcurveattrib", label: "Amplitude Normal Attrib", num_components: 1, default_value: ["amplitudenormal"], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.Regular, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "import furtoolutils\n\ntry:\n    return furtoolutils.buildSkinPaintAttribMenu(\n            kwargs['node'], skininput=0, skinparmname=None,\n            attribSize=1)\nexcept:\n    return []", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.StringReplace});
			hou_parm_template.setConditional(hou.parmCondType.HideWhen, "{ amplitudenormaloverride != curveattrib }");
			hou_parm_template.setTags({"parmoverride_mainparm": "amplitudenormal"});
			hou_parm_template_group.append(hou_parm_template);
			hou_parm_template = new hou.StringParmTemplate({name: "amplitudenormalattrib", label: "Amplitude Normal Attrib", num_components: 1, default_value: ["amplitudenormal"], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.Regular, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "import furtoolutils\n\ntry:\n    return furtoolutils.buildSkinPaintAttribMenu(\n            kwargs['node'], skininput=1, skinparmname=None,\n            attribSize=1)\nexcept:\n    return []", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.StringReplace});
			hou_parm_template.setConditional(hou.parmCondType.HideWhen, "{ amplitudenormaloverride != skinattrib }");
			hou_parm_template.setTags({"parmoverride_mainparm": "amplitudenormal", "script_action": "import furtoolutils\n\nfurtoolutils.paintSkinAttrib(\n    kwargs,\n    kwargs['parmtuple'][0].eval(),\n    1.0, 1,\n    skinparmname=None)", "script_action_help": "Paint Amplitude Normal Attrib", "script_action_icon": "SOP_paint"});
			hou_parm_template_group.append(hou_parm_template);
			hou_parm_template = new hou.StringParmTemplate({name: "amplitudenormaltexture", label: "Amplitude Normal Texture", num_components: 1, default_value: [""], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.FileReference, file_type: hou.fileType.Image, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.StringReplace});
			hou_parm_template.setConditional(hou.parmCondType.HideWhen, "{ amplitudenormaloverride != texture }");
			hou_parm_template.setTags({"parmoverride_mainparm": "amplitudenormal"});
			hou_parm_template_group.append(hou_parm_template);
			hou_parm_template = new hou.StringParmTemplate({name: "amplitudenormaltextureprim", label: "Amplitude Normal Texture", num_components: 1, default_value: ["mask"], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.Regular, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "import terraintoolutils\n\nreturn terraintoolutils.buildNameMenu(kwargs['node'], input_num=2)", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.StringReplace});
			hou_parm_template.setConditional(hou.parmCondType.HideWhen, "{ amplitudenormaloverride != textureprim }");
			hou_parm_template.setJoinWithNext(true);
			hou_parm_template.setTags({"parmoverride_mainparm": "amplitudenormal", "script_action": "import furtoolutils\n\nfurtoolutils.paintTextureMask(\n    kwargs,\n    kwargs['parmtuple'][0].eval(),\n    1.0, skininput=1,\n    skinparmname=None,\n    textureinput=2)", "script_action_help": "Paint Amplitude Normal Attrib Texture", "script_action_icon": "SOP_paint"});
			hou_parm_template_group.append(hou_parm_template);
			hou_parm_template = new hou.MenuParmTemplate({name: "amplitudenormaluvmode", label: "UV Mode", menu_items: ["skinuv", "featheruv"], menu_labels: ["Skin UV", "Feather UV"], default_value: 0, icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal, menu_use_token: false, is_button_strip: false, strip_uses_icons: false});
			hou_parm_template.setConditional(hou.parmCondType.HideWhen, "{ amplitudenormaloverride != textureprim }");
			hou_parm_template.hideLabel(true);
			hou_parm_template.setTags({"parmoverride_mainparm": "amplitudenormal"});
			hou_parm_template_group.append(hou_parm_template);
			hou_parm_template = new hou.FloatParmTemplate({name: "amplitudetangent", label: "Amplitude Tangent", num_components: 1, default_value: [1], min: 0, max: 1, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Logarithmic, naming_scheme: hou.parmNamingScheme.Base1});
			hou_parm_template.setJoinWithNext(true);
			hou_parm_template.setScriptCallbackLanguage(hou.scriptLanguage.Python);
			hou_parm_template.setTags({"script_callback_language": "python"});
			hou_parm_template_group.append(hou_parm_template);
			hou_parm_template = new hou.MenuParmTemplate({name: "amplitudetangentoverride", label: "Amplitude Tangent Override", menu_items: ["none", "curveattrib", "skinattrib", "texture", "textureprim"], menu_labels: ["No Override", "Guide Attribute", "Skin Attribute", "Texture", "Texture Primitive"], default_value: 0, icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal, menu_use_token: false, is_button_strip: false, strip_uses_icons: false});
			hou_parm_template.hideLabel(true);
			hou_parm_template.setJoinWithNext(true);
			hou_parm_template.setTags({"parmoverride_mainparm": "amplitudetangent"});
			hou_parm_template_group.append(hou_parm_template);
			hou_parm_template = new hou.MenuParmTemplate({name: "amplitudetangentoptions", label: "Amplitude Tangent Options", menu_items: ["fit", "ramp"], menu_labels: ["Fit", "Ramp"], default_value: 0, icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.StringToggle, menu_use_token: false, is_button_strip: true, strip_uses_icons: false});
			hou_parm_template.hideLabel(true);
			hou_parm_template.setTags({"parmoverride_mainparm": "amplitudetangent"});
			hou_parm_template_group.append(hou_parm_template);
			hou_parm_template = new hou.FloatParmTemplate({name: "amplitudetangentinrange", label: "In Range", num_components: 2, default_value: [0, 1], min: 0, max: 10, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.Base1});
			hou_parm_template.setConditional(hou.parmCondType.DisableWhen, "{ amplitudetangentoverride == none }");
			hou_parm_template.setConditional(hou.parmCondType.HideWhen, "{ amplitudetangentoptions != 1 amplitudetangentoptions != 3 }");
			hou_parm_template.setJoinWithNext(true);
			hou_parm_template.setTags({"parmoverride_mainparm": "amplitudetangent"});
			hou_parm_template_group.append(hou_parm_template);
			hou_parm_template = new hou.FloatParmTemplate({name: "amplitudetangentoutrange", label: "Out Range", num_components: 2, default_value: [0, 1], min: 0, max: 10, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.Base1});
			hou_parm_template.setConditional(hou.parmCondType.DisableWhen, "{ amplitudetangentoverride == none }");
			hou_parm_template.setConditional(hou.parmCondType.HideWhen, "{ amplitudetangentoptions != 1 amplitudetangentoptions != 3 }");
			hou_parm_template.setTags({"parmoverride_mainparm": "amplitudetangent"});
			hou_parm_template_group.append(hou_parm_template);
			hou_parm_template = new hou.RampParmTemplate({name: "amplitudetangentremapramp", label: "Amplitude Tangent Remap Ramp", ramp_parm_type: hou.rampParmType.Float, default_value: 2, default_basis: null, color_type: null});
			hou_parm_template.setConditional(hou.parmCondType.HideWhen, "{ amplitudetangentoptions != 2 amplitudetangentoptions != 3 }");
			hou_parm_template.setTags({"parmoverride_mainparm": "amplitudetangent"});
			hou_parm_template_group.append(hou_parm_template);
			hou_parm_template = new hou.StringParmTemplate({name: "amplitudetangentcurveattrib", label: "Amplitude Tangent Attrib", num_components: 1, default_value: ["amplitudetangent"], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.Regular, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "import furtoolutils\n\ntry:\n    return furtoolutils.buildSkinPaintAttribMenu(\n            kwargs['node'], skininput=0, skinparmname=None,\n            attribSize=1)\nexcept:\n    return []", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.StringReplace});
			hou_parm_template.setConditional(hou.parmCondType.HideWhen, "{ amplitudetangentoverride != curveattrib }");
			hou_parm_template.setTags({"parmoverride_mainparm": "amplitudetangent"});
			hou_parm_template_group.append(hou_parm_template);
			hou_parm_template = new hou.StringParmTemplate({name: "amplitudetangentattrib", label: "Amplitude Tangent Attrib", num_components: 1, default_value: ["amplitudetangent"], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.Regular, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "import furtoolutils\n\ntry:\n    return furtoolutils.buildSkinPaintAttribMenu(\n            kwargs['node'], skininput=1, skinparmname=None,\n            attribSize=1)\nexcept:\n    return []", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.StringReplace});
			hou_parm_template.setConditional(hou.parmCondType.HideWhen, "{ amplitudetangentoverride != skinattrib }");
			hou_parm_template.setTags({"parmoverride_mainparm": "amplitudetangent", "script_action": "import furtoolutils\n\nfurtoolutils.paintSkinAttrib(\n    kwargs,\n    kwargs['parmtuple'][0].eval(),\n    1.0, 1,\n    skinparmname=None)", "script_action_help": "Paint Amplitude Tangent Attrib", "script_action_icon": "SOP_paint"});
			hou_parm_template_group.append(hou_parm_template);
			hou_parm_template = new hou.StringParmTemplate({name: "amplitudetangenttexture", label: "Amplitude Tangent Texture", num_components: 1, default_value: [""], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.FileReference, file_type: hou.fileType.Image, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.StringReplace});
			hou_parm_template.setConditional(hou.parmCondType.HideWhen, "{ amplitudetangentoverride != texture }");
			hou_parm_template.setTags({"parmoverride_mainparm": "amplitudetangent"});
			hou_parm_template_group.append(hou_parm_template);
			hou_parm_template = new hou.StringParmTemplate({name: "amplitudetangenttextureprim", label: "Amplitude Tangent Texture", num_components: 1, default_value: ["mask"], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.Regular, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "import terraintoolutils\n\nreturn terraintoolutils.buildNameMenu(kwargs['node'], input_num=2)", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.StringReplace});
			hou_parm_template.setConditional(hou.parmCondType.HideWhen, "{ amplitudetangentoverride != textureprim }");
			hou_parm_template.setJoinWithNext(true);
			hou_parm_template.setTags({"parmoverride_mainparm": "amplitudetangent", "script_action": "import furtoolutils\n\nfurtoolutils.paintTextureMask(\n    kwargs,\n    kwargs['parmtuple'][0].eval(),\n    1.0, skininput=1,\n    skinparmname=None,\n    textureinput=2)", "script_action_help": "Paint Amplitude Tangent Attrib Texture", "script_action_icon": "SOP_paint"});
			hou_parm_template_group.append(hou_parm_template);
			hou_parm_template = new hou.MenuParmTemplate({name: "amplitudetangentuvmode", label: "UV Mode", menu_items: ["skinuv", "featheruv"], menu_labels: ["Skin UV", "Feather UV"], default_value: 0, icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal, menu_use_token: false, is_button_strip: false, strip_uses_icons: false});
			hou_parm_template.setConditional(hou.parmCondType.HideWhen, "{ amplitudetangentoverride != textureprim }");
			hou_parm_template.hideLabel(true);
			hou_parm_template.setTags({"parmoverride_mainparm": "amplitudetangent"});
			hou_parm_template_group.append(hou_parm_template);
			hou_parm_template = new hou.FloatParmTemplate({name: "amplitudebitangent", label: "Amplitude Bitangent", num_components: 1, default_value: [1], min: 0, max: 1, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Logarithmic, naming_scheme: hou.parmNamingScheme.Base1});
			hou_parm_template.setJoinWithNext(true);
			hou_parm_template.setScriptCallbackLanguage(hou.scriptLanguage.Python);
			hou_parm_template.setTags({"script_callback_language": "python"});
			hou_parm_template_group.append(hou_parm_template);
			hou_parm_template = new hou.MenuParmTemplate({name: "amplitudebitangentoverride", label: "Amplitude Bitangent Override", menu_items: ["none", "curveattrib", "skinattrib", "texture", "textureprim"], menu_labels: ["No Override", "Guide Attribute", "Skin Attribute", "Texture", "Texture Primitive"], default_value: 0, icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal, menu_use_token: false, is_button_strip: false, strip_uses_icons: false});
			hou_parm_template.hideLabel(true);
			hou_parm_template.setJoinWithNext(true);
			hou_parm_template.setTags({"parmoverride_mainparm": "amplitudebitangent"});
			hou_parm_template_group.append(hou_parm_template);
			hou_parm_template = new hou.MenuParmTemplate({name: "amplitudebitangentoptions", label: "Amplitude Bitangent Options", menu_items: ["fit", "ramp"], menu_labels: ["Fit", "Ramp"], default_value: 0, icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.StringToggle, menu_use_token: false, is_button_strip: true, strip_uses_icons: false});
			hou_parm_template.hideLabel(true);
			hou_parm_template.setTags({"parmoverride_mainparm": "amplitudebitangent"});
			hou_parm_template_group.append(hou_parm_template);
			hou_parm_template = new hou.FloatParmTemplate({name: "amplitudebitangentinrange", label: "In Range", num_components: 2, default_value: [0, 1], min: 0, max: 10, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.Base1});
			hou_parm_template.setConditional(hou.parmCondType.DisableWhen, "{ amplitudebitangentoverride == none }");
			hou_parm_template.setConditional(hou.parmCondType.HideWhen, "{ amplitudebitangentoptions != 1 amplitudebitangentoptions != 3 }");
			hou_parm_template.setJoinWithNext(true);
			hou_parm_template.setTags({"parmoverride_mainparm": "amplitudebitangent"});
			hou_parm_template_group.append(hou_parm_template);
			hou_parm_template = new hou.FloatParmTemplate({name: "amplitudebitangentoutrange", label: "Out Range", num_components: 2, default_value: [0, 1], min: 0, max: 10, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.Base1});
			hou_parm_template.setConditional(hou.parmCondType.DisableWhen, "{ amplitudebitangentoverride == none }");
			hou_parm_template.setConditional(hou.parmCondType.HideWhen, "{ amplitudebitangentoptions != 1 amplitudebitangentoptions != 3 }");
			hou_parm_template.setTags({"parmoverride_mainparm": "amplitudebitangent"});
			hou_parm_template_group.append(hou_parm_template);
			hou_parm_template = new hou.RampParmTemplate({name: "amplitudebitangentremapramp", label: "Amplitude Bitangent Remap Ramp", ramp_parm_type: hou.rampParmType.Float, default_value: 2, default_basis: null, color_type: null});
			hou_parm_template.setConditional(hou.parmCondType.HideWhen, "{ amplitudebitangentoptions != 2 amplitudebitangentoptions != 3 }");
			hou_parm_template.setTags({"parmoverride_mainparm": "amplitudebitangent"});
			hou_parm_template_group.append(hou_parm_template);
			hou_parm_template = new hou.StringParmTemplate({name: "amplitudebitangentcurveattrib", label: "Amplitude Bitangent Attrib", num_components: 1, default_value: ["amplitudebitangent"], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.Regular, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "import furtoolutils\n\ntry:\n    return furtoolutils.buildSkinPaintAttribMenu(\n            kwargs['node'], skininput=0, skinparmname=None,\n            attribSize=1)\nexcept:\n    return []", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.StringReplace});
			hou_parm_template.setConditional(hou.parmCondType.HideWhen, "{ amplitudebitangentoverride != curveattrib }");
			hou_parm_template.setTags({"parmoverride_mainparm": "amplitudebitangent"});
			hou_parm_template_group.append(hou_parm_template);
			hou_parm_template = new hou.StringParmTemplate({name: "amplitudebitangentattrib", label: "Amplitude Bitangent Attrib", num_components: 1, default_value: ["amplitudebitangent"], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.Regular, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "import furtoolutils\n\ntry:\n    return furtoolutils.buildSkinPaintAttribMenu(\n            kwargs['node'], skininput=1, skinparmname=None,\n            attribSize=1)\nexcept:\n    return []", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.StringReplace});
			hou_parm_template.setConditional(hou.parmCondType.HideWhen, "{ amplitudebitangentoverride != skinattrib }");
			hou_parm_template.setTags({"parmoverride_mainparm": "amplitudebitangent", "script_action": "import furtoolutils\n\nfurtoolutils.paintSkinAttrib(\n    kwargs,\n    kwargs['parmtuple'][0].eval(),\n    1.0, 1,\n    skinparmname=None)", "script_action_help": "Paint Amplitude Bitangent Attrib", "script_action_icon": "SOP_paint"});
			hou_parm_template_group.append(hou_parm_template);
			hou_parm_template = new hou.StringParmTemplate({name: "amplitudebitangenttexture", label: "Amplitude Bitangent Texture", num_components: 1, default_value: [""], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.FileReference, file_type: hou.fileType.Image, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.StringReplace});
			hou_parm_template.setConditional(hou.parmCondType.HideWhen, "{ amplitudebitangentoverride != texture }");
			hou_parm_template.setTags({"parmoverride_mainparm": "amplitudebitangent"});
			hou_parm_template_group.append(hou_parm_template);
			hou_parm_template = new hou.StringParmTemplate({name: "amplitudebitangenttextureprim", label: "Amplitude Bitangent Texture", num_components: 1, default_value: ["mask"], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.Regular, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "import terraintoolutils\n\nreturn terraintoolutils.buildNameMenu(kwargs['node'], input_num=2)", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.StringReplace});
			hou_parm_template.setConditional(hou.parmCondType.HideWhen, "{ amplitudebitangentoverride != textureprim }");
			hou_parm_template.setJoinWithNext(true);
			hou_parm_template.setTags({"parmoverride_mainparm": "amplitudebitangent", "script_action": "import furtoolutils\n\nfurtoolutils.paintTextureMask(\n    kwargs,\n    kwargs['parmtuple'][0].eval(),\n    1.0, skininput=1,\n    skinparmname=None,\n    textureinput=2)", "script_action_help": "Paint Amplitude Bitangent Attrib Texture", "script_action_icon": "SOP_paint"});
			hou_parm_template_group.append(hou_parm_template);
			hou_parm_template = new hou.MenuParmTemplate({name: "amplitudebitangentuvmode", label: "UV Mode", menu_items: ["skinuv", "featheruv"], menu_labels: ["Skin UV", "Feather UV"], default_value: 0, icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal, menu_use_token: false, is_button_strip: false, strip_uses_icons: false});
			hou_parm_template.setConditional(hou.parmCondType.HideWhen, "{ amplitudebitangentoverride != textureprim }");
			hou_parm_template.hideLabel(true);
			hou_parm_template.setTags({"parmoverride_mainparm": "amplitudebitangent"});
			hou_parm_template_group.append(hou_parm_template);
			hou_parm_template = new hou.FloatParmTemplate({name: "shaftoffset", label: "Shaft Offset", num_components: 1, default_value: [0], min: 0, max: 10, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.Base1});
			hou_parm_template.setJoinWithNext(true);
			hou_parm_template.setScriptCallbackLanguage(hou.scriptLanguage.Python);
			hou_parm_template.setTags({"script_callback_language": "python"});
			hou_parm_template_group.append(hou_parm_template);
			hou_parm_template = new hou.MenuParmTemplate({name: "shaftoffsetoverride", label: "Shaft Offset Override", menu_items: ["none", "curveattrib", "skinattrib", "texture", "textureprim"], menu_labels: ["No Override", "Guide Attribute", "Skin Attribute", "Texture", "Texture Primitive"], default_value: 0, icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal, menu_use_token: false, is_button_strip: false, strip_uses_icons: false});
			hou_parm_template.hideLabel(true);
			hou_parm_template.setJoinWithNext(true);
			hou_parm_template.setTags({"parmoverride_mainparm": "shaftoffset"});
			hou_parm_template_group.append(hou_parm_template);
			hou_parm_template = new hou.MenuParmTemplate({name: "shaftoffsetoptions", label: "Shaft Offset Options", menu_items: ["fit", "ramp"], menu_labels: ["Fit", "Ramp"], default_value: 0, icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.StringToggle, menu_use_token: false, is_button_strip: true, strip_uses_icons: false});
			hou_parm_template.hideLabel(true);
			hou_parm_template.setTags({"parmoverride_mainparm": "shaftoffset"});
			hou_parm_template_group.append(hou_parm_template);
			hou_parm_template = new hou.FloatParmTemplate({name: "shaftoffsetinrange", label: "In Range", num_components: 2, default_value: [0, 1], min: 0, max: 10, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.Base1});
			hou_parm_template.setConditional(hou.parmCondType.DisableWhen, "{ shaftoffsetoverride == none }");
			hou_parm_template.setConditional(hou.parmCondType.HideWhen, "{ shaftoffsetoptions != 1 shaftoffsetoptions != 3 }");
			hou_parm_template.setJoinWithNext(true);
			hou_parm_template.setTags({"parmoverride_mainparm": "shaftoffset"});
			hou_parm_template_group.append(hou_parm_template);
			hou_parm_template = new hou.FloatParmTemplate({name: "shaftoffsetoutrange", label: "Out Range", num_components: 2, default_value: [0, 1], min: 0, max: 10, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.Base1});
			hou_parm_template.setConditional(hou.parmCondType.DisableWhen, "{ shaftoffsetoverride == none }");
			hou_parm_template.setConditional(hou.parmCondType.HideWhen, "{ shaftoffsetoptions != 1 shaftoffsetoptions != 3 }");
			hou_parm_template.setTags({"parmoverride_mainparm": "shaftoffset"});
			hou_parm_template_group.append(hou_parm_template);
			hou_parm_template = new hou.RampParmTemplate({name: "shaftoffsetremapramp", label: "Shaft Offset Remap Ramp", ramp_parm_type: hou.rampParmType.Float, default_value: 2, default_basis: null, color_type: null});
			hou_parm_template.setConditional(hou.parmCondType.HideWhen, "{ shaftoffsetoptions != 2 shaftoffsetoptions != 3 }");
			hou_parm_template.setTags({"parmoverride_mainparm": "shaftoffset"});
			hou_parm_template_group.append(hou_parm_template);
			hou_parm_template = new hou.StringParmTemplate({name: "shaftoffsetcurveattrib", label: "Shaft Offset Attrib", num_components: 1, default_value: ["shaftoffset"], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.Regular, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "import furtoolutils\n\ntry:\n    return furtoolutils.buildSkinPaintAttribMenu(\n            kwargs['node'], skininput=0, skinparmname=None,\n            attribSize=1)\nexcept:\n    return []", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.StringReplace});
			hou_parm_template.setConditional(hou.parmCondType.HideWhen, "{ shaftoffsetoverride != curveattrib }");
			hou_parm_template.setTags({"parmoverride_mainparm": "shaftoffset"});
			hou_parm_template_group.append(hou_parm_template);
			hou_parm_template = new hou.StringParmTemplate({name: "shaftoffsetattrib", label: "Shaft Offset Attrib", num_components: 1, default_value: ["shaftoffset"], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.Regular, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "import furtoolutils\n\ntry:\n    return furtoolutils.buildSkinPaintAttribMenu(\n            kwargs['node'], skininput=1, skinparmname=None,\n            attribSize=1)\nexcept:\n    return []", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.StringReplace});
			hou_parm_template.setConditional(hou.parmCondType.HideWhen, "{ shaftoffsetoverride != skinattrib }");
			hou_parm_template.setTags({"parmoverride_mainparm": "shaftoffset", "script_action": "import furtoolutils\n\nfurtoolutils.paintSkinAttrib(\n    kwargs,\n    kwargs['parmtuple'][0].eval(),\n    1.0, 1,\n    skinparmname=None)", "script_action_help": "Paint Shaft Offset Attrib", "script_action_icon": "SOP_paint"});
			hou_parm_template_group.append(hou_parm_template);
			hou_parm_template = new hou.StringParmTemplate({name: "shaftoffsettexture", label: "Shaft Offset Texture", num_components: 1, default_value: [""], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.FileReference, file_type: hou.fileType.Image, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.StringReplace});
			hou_parm_template.setConditional(hou.parmCondType.HideWhen, "{ shaftoffsetoverride != texture }");
			hou_parm_template.setTags({"parmoverride_mainparm": "shaftoffset"});
			hou_parm_template_group.append(hou_parm_template);
			hou_parm_template = new hou.StringParmTemplate({name: "shaftoffsettextureprim", label: "Shaft Offset Texture", num_components: 1, default_value: ["mask"], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.Regular, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "import terraintoolutils\n\nreturn terraintoolutils.buildNameMenu(kwargs['node'], input_num=2)", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.StringReplace});
			hou_parm_template.setConditional(hou.parmCondType.HideWhen, "{ shaftoffsetoverride != textureprim }");
			hou_parm_template.setJoinWithNext(true);
			hou_parm_template.setTags({"parmoverride_mainparm": "shaftoffset", "script_action": "import furtoolutils\n\nfurtoolutils.paintTextureMask(\n    kwargs,\n    kwargs['parmtuple'][0].eval(),\n    1.0, skininput=1,\n    skinparmname=None,\n    textureinput=2)", "script_action_help": "Paint Shaft Offset Attrib Texture", "script_action_icon": "SOP_paint"});
			hou_parm_template_group.append(hou_parm_template);
			hou_parm_template = new hou.MenuParmTemplate({name: "shaftoffsetuvmode", label: "UV Mode", menu_items: ["skinuv", "featheruv"], menu_labels: ["Skin UV", "Feather UV"], default_value: 0, icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal, menu_use_token: false, is_button_strip: false, strip_uses_icons: false});
			hou_parm_template.setConditional(hou.parmCondType.HideWhen, "{ shaftoffsetoverride != textureprim }");
			hou_parm_template.hideLabel(true);
			hou_parm_template.setTags({"parmoverride_mainparm": "shaftoffset"});
			hou_parm_template_group.append(hou_parm_template);
			hou_parm_template = new hou.FloatParmTemplate({name: "falloff", label: "Falloff", num_components: 1, default_value: [1], min: 0, max: 10, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.Base1});
			hou_parm_template.setJoinWithNext(true);
			hou_parm_template.setScriptCallbackLanguage(hou.scriptLanguage.Python);
			hou_parm_template.setTags({"script_callback_language": "python"});
			hou_parm_template_group.append(hou_parm_template);
			hou_parm_template = new hou.MenuParmTemplate({name: "falloffoverride", label: "Falloff Override", menu_items: ["none", "curveattrib", "skinattrib", "texture", "textureprim"], menu_labels: ["No Override", "Guide Attribute", "Skin Attribute", "Texture", "Texture Primitive"], default_value: 0, icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal, menu_use_token: false, is_button_strip: false, strip_uses_icons: false});
			hou_parm_template.hideLabel(true);
			hou_parm_template.setJoinWithNext(true);
			hou_parm_template.setTags({"parmoverride_mainparm": "falloff"});
			hou_parm_template_group.append(hou_parm_template);
			hou_parm_template = new hou.MenuParmTemplate({name: "falloffoptions", label: "Falloff Options", menu_items: ["fit", "ramp"], menu_labels: ["Fit", "Ramp"], default_value: 0, icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.StringToggle, menu_use_token: false, is_button_strip: true, strip_uses_icons: false});
			hou_parm_template.hideLabel(true);
			hou_parm_template.setTags({"parmoverride_mainparm": "falloff"});
			hou_parm_template_group.append(hou_parm_template);
			hou_parm_template = new hou.FloatParmTemplate({name: "falloffinrange", label: "In Range", num_components: 2, default_value: [0, 1], min: 0, max: 10, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.Base1});
			hou_parm_template.setConditional(hou.parmCondType.DisableWhen, "{ falloffoverride == none }");
			hou_parm_template.setConditional(hou.parmCondType.HideWhen, "{ falloffoptions != 1 falloffoptions != 3 }");
			hou_parm_template.setJoinWithNext(true);
			hou_parm_template.setTags({"parmoverride_mainparm": "falloff"});
			hou_parm_template_group.append(hou_parm_template);
			hou_parm_template = new hou.FloatParmTemplate({name: "falloffoutrange", label: "Out Range", num_components: 2, default_value: [0, 1], min: 0, max: 10, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.Base1});
			hou_parm_template.setConditional(hou.parmCondType.DisableWhen, "{ falloffoverride == none }");
			hou_parm_template.setConditional(hou.parmCondType.HideWhen, "{ falloffoptions != 1 falloffoptions != 3 }");
			hou_parm_template.setTags({"parmoverride_mainparm": "falloff"});
			hou_parm_template_group.append(hou_parm_template);
			hou_parm_template = new hou.RampParmTemplate({name: "falloffremapramp", label: "Falloff Remap Ramp", ramp_parm_type: hou.rampParmType.Float, default_value: 2, default_basis: null, color_type: null});
			hou_parm_template.setConditional(hou.parmCondType.HideWhen, "{ falloffoptions != 2 falloffoptions != 3 }");
			hou_parm_template.setTags({"parmoverride_mainparm": "falloff"});
			hou_parm_template_group.append(hou_parm_template);
			hou_parm_template = new hou.StringParmTemplate({name: "falloffcurveattrib", label: "Falloff Attrib", num_components: 1, default_value: ["amplitude"], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.Regular, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "import furtoolutils\n\ntry:\n    return furtoolutils.buildSkinPaintAttribMenu(\n            kwargs['node'], skininput=0, skinparmname=None,\n            attribSize=1)\nexcept:\n    return []", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.StringReplace});
			hou_parm_template.setConditional(hou.parmCondType.HideWhen, "{ falloffoverride != curveattrib }");
			hou_parm_template.setTags({"parmoverride_mainparm": "falloff"});
			hou_parm_template_group.append(hou_parm_template);
			hou_parm_template = new hou.StringParmTemplate({name: "falloffattrib", label: "Falloff Attrib", num_components: 1, default_value: ["amplitude"], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.Regular, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "import furtoolutils\n\ntry:\n    return furtoolutils.buildSkinPaintAttribMenu(\n            kwargs['node'], skininput=1, skinparmname=None,\n            attribSize=1)\nexcept:\n    return []", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.StringReplace});
			hou_parm_template.setConditional(hou.parmCondType.HideWhen, "{ falloffoverride != skinattrib }");
			hou_parm_template.setTags({"parmoverride_mainparm": "falloff", "script_action": "import furtoolutils\n\nfurtoolutils.paintSkinAttrib(\n    kwargs,\n    kwargs['parmtuple'][0].eval(),\n    1.0, 1,\n    skinparmname=None)", "script_action_help": "Paint Falloff Attrib", "script_action_icon": "SOP_paint"});
			hou_parm_template_group.append(hou_parm_template);
			hou_parm_template = new hou.StringParmTemplate({name: "fallofftexture", label: "Falloff Texture", num_components: 1, default_value: [""], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.FileReference, file_type: hou.fileType.Image, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.StringReplace});
			hou_parm_template.setConditional(hou.parmCondType.HideWhen, "{ falloffoverride != texture }");
			hou_parm_template.setTags({"parmoverride_mainparm": "falloff"});
			hou_parm_template_group.append(hou_parm_template);
			hou_parm_template = new hou.StringParmTemplate({name: "fallofftextureprim", label: "Falloff Texture", num_components: 1, default_value: ["mask"], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.Regular, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "import terraintoolutils\n\nreturn terraintoolutils.buildNameMenu(kwargs['node'], input_num=2)", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.StringReplace});
			hou_parm_template.setConditional(hou.parmCondType.HideWhen, "{ falloffoverride != textureprim }");
			hou_parm_template.setJoinWithNext(true);
			hou_parm_template.setTags({"parmoverride_mainparm": "falloff", "script_action": "import furtoolutils\n\nfurtoolutils.paintTextureMask(\n    kwargs,\n    kwargs['parmtuple'][0].eval(),\n    1.0, skininput=1,\n    skinparmname=None,\n    textureinput=2)", "script_action_help": "Paint Falloff Attrib Texture", "script_action_icon": "SOP_paint"});
			hou_parm_template_group.append(hou_parm_template);
			hou_parm_template = new hou.MenuParmTemplate({name: "falloffuvmode", label: "UV Mode", menu_items: ["skinuv", "featheruv"], menu_labels: ["Skin UV", "Feather UV"], default_value: 0, icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal, menu_use_token: false, is_button_strip: false, strip_uses_icons: false});
			hou_parm_template.setConditional(hou.parmCondType.HideWhen, "{ falloffoverride != textureprim }");
			hou_parm_template.hideLabel(true);
			hou_parm_template.setTags({"parmoverride_mainparm": "falloff"});
			hou_parm_template_group.append(hou_parm_template);
			hou_parm_template = new hou.FloatParmTemplate({name: "shaftfreq", label: "Shaft Frequency", num_components: 1, default_value: [1], min: 0, max: 10, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.Base1});
			hou_parm_template.setJoinWithNext(true);
			hou_parm_template.setScriptCallbackLanguage(hou.scriptLanguage.Python);
			hou_parm_template.setTags({"script_callback_language": "python"});
			hou_parm_template_group.append(hou_parm_template);
			hou_parm_template = new hou.MenuParmTemplate({name: "shaftfreqoverride", label: "Shaft Frequency Override", menu_items: ["none", "curveattrib", "skinattrib", "texture", "textureprim"], menu_labels: ["No Override", "Guide Attribute", "Skin Attribute", "Texture", "Texture Primitive"], default_value: 0, icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal, menu_use_token: false, is_button_strip: false, strip_uses_icons: false});
			hou_parm_template.hideLabel(true);
			hou_parm_template.setJoinWithNext(true);
			hou_parm_template.setTags({"parmoverride_mainparm": "shaftfreq"});
			hou_parm_template_group.append(hou_parm_template);
			hou_parm_template = new hou.MenuParmTemplate({name: "shaftfreqoptions", label: "Shaft Frequency Options", menu_items: ["fit", "ramp"], menu_labels: ["Fit", "Ramp"], default_value: 0, icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.StringToggle, menu_use_token: false, is_button_strip: true, strip_uses_icons: false});
			hou_parm_template.hideLabel(true);
			hou_parm_template.setTags({"parmoverride_mainparm": "shaftfreq"});
			hou_parm_template_group.append(hou_parm_template);
			hou_parm_template = new hou.FloatParmTemplate({name: "shaftfreqinrange", label: "In Range", num_components: 2, default_value: [0, 1], min: 0, max: 10, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.Base1});
			hou_parm_template.setConditional(hou.parmCondType.DisableWhen, "{ shaftfreqoverride == none }");
			hou_parm_template.setConditional(hou.parmCondType.HideWhen, "{ shaftfreqoptions != 1 shaftfreqoptions != 3 }");
			hou_parm_template.setJoinWithNext(true);
			hou_parm_template.setTags({"parmoverride_mainparm": "shaftfreq"});
			hou_parm_template_group.append(hou_parm_template);
			hou_parm_template = new hou.FloatParmTemplate({name: "shaftfreqoutrange", label: "Out Range", num_components: 2, default_value: [0, 1], min: 0, max: 10, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.Base1});
			hou_parm_template.setConditional(hou.parmCondType.DisableWhen, "{ shaftfreqoverride == none }");
			hou_parm_template.setConditional(hou.parmCondType.HideWhen, "{ shaftfreqoptions != 1 shaftfreqoptions != 3 }");
			hou_parm_template.setTags({"parmoverride_mainparm": "shaftfreq"});
			hou_parm_template_group.append(hou_parm_template);
			hou_parm_template = new hou.RampParmTemplate({name: "shaftfreqremapramp", label: "Shaft Frequency Remap Ramp", ramp_parm_type: hou.rampParmType.Float, default_value: 2, default_basis: null, color_type: null});
			hou_parm_template.setConditional(hou.parmCondType.HideWhen, "{ shaftfreqoptions != 2 shaftfreqoptions != 3 }");
			hou_parm_template.setTags({"parmoverride_mainparm": "shaftfreq"});
			hou_parm_template_group.append(hou_parm_template);
			hou_parm_template = new hou.StringParmTemplate({name: "shaftfreqcurveattrib", label: "Shaft Frequency Attrib", num_components: 1, default_value: ["shaftfreq"], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.Regular, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "import furtoolutils\n\ntry:\n    return furtoolutils.buildSkinPaintAttribMenu(\n            kwargs['node'], skininput=0, skinparmname=None,\n            attribSize=1)\nexcept:\n    return []", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.StringReplace});
			hou_parm_template.setConditional(hou.parmCondType.HideWhen, "{ shaftfreqoverride != curveattrib }");
			hou_parm_template.setTags({"parmoverride_mainparm": "shaftfreq"});
			hou_parm_template_group.append(hou_parm_template);
			hou_parm_template = new hou.StringParmTemplate({name: "shaftfreqattrib", label: "Shaft Frequency Attrib", num_components: 1, default_value: ["shaftfreq"], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.Regular, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "import furtoolutils\n\ntry:\n    return furtoolutils.buildSkinPaintAttribMenu(\n            kwargs['node'], skininput=1, skinparmname=None,\n            attribSize=1)\nexcept:\n    return []", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.StringReplace});
			hou_parm_template.setConditional(hou.parmCondType.HideWhen, "{ shaftfreqoverride != skinattrib }");
			hou_parm_template.setTags({"parmoverride_mainparm": "shaftfreq", "script_action": "import furtoolutils\n\nfurtoolutils.paintSkinAttrib(\n    kwargs,\n    kwargs['parmtuple'][0].eval(),\n    1.0, 1,\n    skinparmname=None)", "script_action_help": "Paint Shaft Frequency Attrib", "script_action_icon": "SOP_paint"});
			hou_parm_template_group.append(hou_parm_template);
			hou_parm_template = new hou.StringParmTemplate({name: "shaftfreqtexture", label: "Shaft Frequency Texture", num_components: 1, default_value: [""], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.FileReference, file_type: hou.fileType.Image, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.StringReplace});
			hou_parm_template.setConditional(hou.parmCondType.HideWhen, "{ shaftfreqoverride != texture }");
			hou_parm_template.setTags({"parmoverride_mainparm": "shaftfreq"});
			hou_parm_template_group.append(hou_parm_template);
			hou_parm_template = new hou.StringParmTemplate({name: "shaftfreqtextureprim", label: "Shaft Frequency Texture", num_components: 1, default_value: ["mask"], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.Regular, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "import terraintoolutils\n\nreturn terraintoolutils.buildNameMenu(kwargs['node'], input_num=2)", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.StringReplace});
			hou_parm_template.setConditional(hou.parmCondType.HideWhen, "{ shaftfreqoverride != textureprim }");
			hou_parm_template.setJoinWithNext(true);
			hou_parm_template.setTags({"parmoverride_mainparm": "shaftfreq", "script_action": "import furtoolutils\n\nfurtoolutils.paintTextureMask(\n    kwargs,\n    kwargs['parmtuple'][0].eval(),\n    1.0, skininput=1,\n    skinparmname=None,\n    textureinput=2)", "script_action_help": "Paint Shaft Frequency Attrib Texture", "script_action_icon": "SOP_paint"});
			hou_parm_template_group.append(hou_parm_template);
			hou_parm_template = new hou.MenuParmTemplate({name: "shaftfrequvmode", label: "UV Mode", menu_items: ["skinuv", "featheruv"], menu_labels: ["Skin UV", "Feather UV"], default_value: 0, icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal, menu_use_token: false, is_button_strip: false, strip_uses_icons: false});
			hou_parm_template.setConditional(hou.parmCondType.HideWhen, "{ shaftfreqoverride != textureprim }");
			hou_parm_template.hideLabel(true);
			hou_parm_template.setTags({"parmoverride_mainparm": "shaftfreq"});
			hou_parm_template_group.append(hou_parm_template);
			hou_parm_template = new hou.FloatParmTemplate({name: "barbfreq", label: "Barb Frequency", num_components: 1, default_value: [1], min: 0, max: 10, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.Base1});
			hou_parm_template.setJoinWithNext(true);
			hou_parm_template.setScriptCallbackLanguage(hou.scriptLanguage.Python);
			hou_parm_template.setTags({"script_callback_language": "python"});
			hou_parm_template_group.append(hou_parm_template);
			hou_parm_template = new hou.MenuParmTemplate({name: "barbfreqoverride", label: "Barb Frequency Override", menu_items: ["none", "curveattrib", "skinattrib", "texture", "textureprim"], menu_labels: ["No Override", "Guide Attribute", "Skin Attribute", "Texture", "Texture Primitive"], default_value: 0, icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal, menu_use_token: false, is_button_strip: false, strip_uses_icons: false});
			hou_parm_template.hideLabel(true);
			hou_parm_template.setJoinWithNext(true);
			hou_parm_template.setTags({"parmoverride_mainparm": "barbfreq"});
			hou_parm_template_group.append(hou_parm_template);
			hou_parm_template = new hou.MenuParmTemplate({name: "barbfreqoptions", label: "Barb Frequency Options", menu_items: ["fit", "ramp"], menu_labels: ["Fit", "Ramp"], default_value: 0, icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.StringToggle, menu_use_token: false, is_button_strip: true, strip_uses_icons: false});
			hou_parm_template.hideLabel(true);
			hou_parm_template.setTags({"parmoverride_mainparm": "barbfreq"});
			hou_parm_template_group.append(hou_parm_template);
			hou_parm_template = new hou.FloatParmTemplate({name: "barbfreqinrange", label: "In Range", num_components: 2, default_value: [0, 1], min: 0, max: 10, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.Base1});
			hou_parm_template.setConditional(hou.parmCondType.DisableWhen, "{ barbfreqoverride == none }");
			hou_parm_template.setConditional(hou.parmCondType.HideWhen, "{ barbfreqoptions != 1 barbfreqoptions != 3 }");
			hou_parm_template.setJoinWithNext(true);
			hou_parm_template.setTags({"parmoverride_mainparm": "barbfreq"});
			hou_parm_template_group.append(hou_parm_template);
			hou_parm_template = new hou.FloatParmTemplate({name: "barbfreqoutrange", label: "Out Range", num_components: 2, default_value: [0, 1], min: 0, max: 10, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.Base1});
			hou_parm_template.setConditional(hou.parmCondType.DisableWhen, "{ barbfreqoverride == none }");
			hou_parm_template.setConditional(hou.parmCondType.HideWhen, "{ barbfreqoptions != 1 barbfreqoptions != 3 }");
			hou_parm_template.setTags({"parmoverride_mainparm": "barbfreq"});
			hou_parm_template_group.append(hou_parm_template);
			hou_parm_template = new hou.RampParmTemplate({name: "barbfreqremapramp", label: "Barb Frequency Remap Ramp", ramp_parm_type: hou.rampParmType.Float, default_value: 2, default_basis: null, color_type: null});
			hou_parm_template.setConditional(hou.parmCondType.HideWhen, "{ barbfreqoptions != 2 barbfreqoptions != 3 }");
			hou_parm_template.setTags({"parmoverride_mainparm": "barbfreq"});
			hou_parm_template_group.append(hou_parm_template);
			hou_parm_template = new hou.StringParmTemplate({name: "barbfreqcurveattrib", label: "Barb Frequency Attrib", num_components: 1, default_value: ["barbfreq"], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.Regular, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "import furtoolutils\n\ntry:\n    return furtoolutils.buildSkinPaintAttribMenu(\n            kwargs['node'], skininput=0, skinparmname=None,\n            attribSize=1)\nexcept:\n    return []", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.StringReplace});
			hou_parm_template.setConditional(hou.parmCondType.HideWhen, "{ barbfreqoverride != curveattrib }");
			hou_parm_template.setTags({"parmoverride_mainparm": "barbfreq"});
			hou_parm_template_group.append(hou_parm_template);
			hou_parm_template = new hou.StringParmTemplate({name: "barbfreqattrib", label: "Barb Frequency Attrib", num_components: 1, default_value: ["barbfreq"], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.Regular, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "import furtoolutils\n\ntry:\n    return furtoolutils.buildSkinPaintAttribMenu(\n            kwargs['node'], skininput=1, skinparmname=None,\n            attribSize=1)\nexcept:\n    return []", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.StringReplace});
			hou_parm_template.setConditional(hou.parmCondType.HideWhen, "{ barbfreqoverride != skinattrib }");
			hou_parm_template.setTags({"parmoverride_mainparm": "barbfreq", "script_action": "import furtoolutils\n\nfurtoolutils.paintSkinAttrib(\n    kwargs,\n    kwargs['parmtuple'][0].eval(),\n    1.0, 1,\n    skinparmname=None)", "script_action_help": "Paint Barb Frequency Attrib", "script_action_icon": "SOP_paint"});
			hou_parm_template_group.append(hou_parm_template);
			hou_parm_template = new hou.StringParmTemplate({name: "barbfreqtexture", label: "Barb Frequency Texture", num_components: 1, default_value: [""], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.FileReference, file_type: hou.fileType.Image, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.StringReplace});
			hou_parm_template.setConditional(hou.parmCondType.HideWhen, "{ barbfreqoverride != texture }");
			hou_parm_template.setTags({"parmoverride_mainparm": "barbfreq"});
			hou_parm_template_group.append(hou_parm_template);
			hou_parm_template = new hou.StringParmTemplate({name: "barbfreqtextureprim", label: "Barb Frequency Texture", num_components: 1, default_value: ["mask"], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.Regular, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "import terraintoolutils\n\nreturn terraintoolutils.buildNameMenu(kwargs['node'], input_num=2)", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.StringReplace});
			hou_parm_template.setConditional(hou.parmCondType.HideWhen, "{ barbfreqoverride != textureprim }");
			hou_parm_template.setJoinWithNext(true);
			hou_parm_template.setTags({"parmoverride_mainparm": "barbfreq", "script_action": "import furtoolutils\n\nfurtoolutils.paintTextureMask(\n    kwargs,\n    kwargs['parmtuple'][0].eval(),\n    1.0, skininput=1,\n    skinparmname=None,\n    textureinput=2)", "script_action_help": "Paint Barb Frequency Attrib Texture", "script_action_icon": "SOP_paint"});
			hou_parm_template_group.append(hou_parm_template);
			hou_parm_template = new hou.MenuParmTemplate({name: "barbfrequvmode", label: "UV Mode", menu_items: ["skinuv", "featheruv"], menu_labels: ["Skin UV", "Feather UV"], default_value: 0, icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal, menu_use_token: false, is_button_strip: false, strip_uses_icons: false});
			hou_parm_template.setConditional(hou.parmCondType.HideWhen, "{ barbfreqoverride != textureprim }");
			hou_parm_template.hideLabel(true);
			hou_parm_template.setTags({"parmoverride_mainparm": "barbfreq"});
			hou_parm_template_group.append(hou_parm_template);
			hou_parm_template = new hou.StringParmTemplate({name: "skinuvattrib", label: "Skin UV Attribute", num_components: 1, default_value: ["uv"], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.Regular, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal});
			hou_parm_template.setScriptCallbackLanguage(hou.scriptLanguage.Python);
			hou_parm_template.setTags({"script_callback_language": "python"});
			hou_parm_template_group.append(hou_parm_template);
			hou_parm_template = new hou.StringParmTemplate({name: "featheruvattrib", label: "Feather UV Attribute", num_components: 1, default_value: ["uv"], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.Regular, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal});
			hou_parm_template.setScriptCallbackLanguage(hou.scriptLanguage.Python);
			hou_parm_template.setTags({"script_callback_language": "python"});
			hou_parm_template_group.append(hou_parm_template);
			
            this.parmTemplateGroup = hou_parm_template_group;
            this.parmTemplateGroup.linkNode(this);
        }
    }
    hou.registerType('SOP/Character FX/Feathers/feathernoise',_hnt_SOP_feathernoise)
    return _hnt_SOP_feathernoise
}
        