
export default function (hou) {
    class _hnt_OBJECT_three_point_light extends hou.extend(hou._HoudiniBase).with(hou._SubgraphMixin) {
        static is_root = false;
        static id = 'OBJECT/Other/three_point_light';
        static category = '/OBJECT';
        static houdiniType = 'three_point_light';
        static title = 'Three Point Light';
        static icon = '/editor/assets/imgs/nodes/_hnt_OBJECT_three_point_light.svg';
        constructor() {
            super();
            this.flags['houdini_type'] = this.__proto__.constructor.houdiniType;
            
            const inputs = ['OBJECT'];
            const outputs = ['OBJECT'];

            for(var i=0;i<inputs.length;i++) this.addInput(''+i,inputs[i]);        
            for(var j=0;j<outputs.length;j++) this.addOutput(''+j,outputs[j]);
        }
        parmTemplatesInit() {
            let hou_parm_template_group = new hou.ParmTemplateGroup();
			this.parmTemplateGroup = hou_parm_template_group;
			let hou_parm_template = new hou.FolderParmTemplate({name: "stdswitcher3", label: "Transform", folder_type: hou.folderType.Tabs, default_value: 0, ends_tab_group: false});
			let hou_parm_template2 = new hou.MenuParmTemplate({name: "xOrd", label: "Transform Order", menu_items: ["srt", "str", "rst", "rts", "tsr", "trs"], menu_labels: ["Scale Rot Trans", "Scale Trans Rot", "Rot Scale Trans", "Rot Trans Scale", "Trans Scale Rot", "Trans Rot Scale"], default_value: 0, icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal, menu_use_token: false, is_button_strip: false, strip_uses_icons: false});
			hou_parm_template2.setJoinWithNext(true);
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template2 = new hou.MenuParmTemplate({name: "rOrd", label: "Rotate Order", menu_items: ["xyz", "xzy", "yxz", "yzx", "zxy", "zyx"], menu_labels: ["Rx Ry Rz", "Rx Rz Ry", "Ry Rx Rz", "Ry Rz Rx", "Rz Rx Ry", "Rz Ry Rx"], default_value: 0, icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal, menu_use_token: false, is_button_strip: false, strip_uses_icons: false});
			hou_parm_template2.hideLabel(true);
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template2 = new hou.FloatParmTemplate({name: "t", label: "Translate", num_components: 3, default_value: [0, 0, 0], min: 0, max: 10, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.XYZW});
			hou_parm_template2.setTags({"autoscope": "1111111111111111111111111111111", "script_action": "import objecttoolutils\nobjecttoolutils.matchTransform(kwargs, 0)", "script_action_help": "Select an object to match the translation with.", "script_action_icon": "BUTTONS_match_transform"});
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template2 = new hou.FloatParmTemplate({name: "r", label: "Rotate", num_components: 3, default_value: [0, 0, 0], min: 0, max: 360, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.XYZW});
			hou_parm_template2.setTags({"autoscope": "1111111111111111111111111111111", "script_action": "import objecttoolutils\nobjecttoolutils.matchTransform(kwargs, 1)", "script_action_help": "Select an object to match the rotation with.", "script_action_icon": "BUTTONS_match_rotation"});
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template2 = new hou.FloatParmTemplate({name: "s", label: "Scale", num_components: 3, default_value: [1, 1, 1], min: 0, max: 10, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.XYZW});
			hou_parm_template2.setTags({"autoscope": "1111111111111111111111111111111", "script_action": "import objecttoolutils\nobjecttoolutils.matchTransform(kwargs, 2)", "script_action_help": "Select an object to match the scale with.", "script_action_icon": "BUTTONS_match_scale"});
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template2 = new hou.FloatParmTemplate({name: "p", label: "Pivot Translate", num_components: 3, default_value: [0, 0, 0], min: 0, max: 10, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.XYZW});
			hou_parm_template2.setTags({"script_action": "import objecttoolutils\nobjecttoolutils.matchTransform(kwargs, 3)", "script_action_help": "Select an object to match the pivot with.", "script_action_icon": "BUTTONS_match_pivot"});
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template2 = new hou.FloatParmTemplate({name: "pr", label: "Pivot Rotate", num_components: 3, default_value: [0, 0, 0], min: 0, max: 10, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.XYZW});
			hou_parm_template2.setTags({"script_action": "import objecttoolutils\nobjecttoolutils.matchTransform(kwargs, 4)", "script_action_help": "Select an object to match the pivot rotation with.", "script_action_icon": "BUTTONS_match_pivot_rotation"});
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template2 = new hou.FloatParmTemplate({name: "scale", label: "Uniform Scale", num_components: 1, default_value: [1], min: 0, max: 10, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.Base1});
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template2 = new hou.MenuParmTemplate({name: "pre_xform", label: "Modify Pre-Transform", menu_items: ["clean", "cleantrans", "cleanrot", "cleanscales", "extract", "reset"], menu_labels: ["Clean Transform", "Clean Translates", "Clean Rotates", "Clean Scales", "Extract Pre-transform", "Reset Pre-transform"], default_value: 0, icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.StringReplace, menu_use_token: false, is_button_strip: false, strip_uses_icons: false});
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template2 = new hou.ToggleParmTemplate({name: "keeppos", label: "Keep Position When Parenting", default_value: false});
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template2 = new hou.ToggleParmTemplate({name: "childcomp", label: "Child Compensation", default_value: false});
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template2 = new hou.ToggleParmTemplate({name: "constraints_on", label: "Enable Constraints", default_value: false});
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template2 = new hou.StringParmTemplate({name: "constraints_path", label: "Constraints", num_components: 1, default_value: [""], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.NodeReference, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal});
			hou_parm_template2.setConditional(hou.parmCondType.HideWhen, "{ constraints_on == 0 }");
			hou_parm_template2.setTags({"opfilter": "!!CHOP", "oprelative": ".", "script_action": "import objecttoolutils\nobjecttoolutils.constraintsMenu(kwargs)", "script_action_help": "", "script_action_icon": "BUTTONS_add_constraints"});
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template2 = new hou.StringParmTemplate({name: "lookatpath", label: "Look At", num_components: 1, default_value: [""], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.NodeReference, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal});
			hou_parm_template2.hide(true);
			hou_parm_template2.setTags({"opfilter": "!!OBJ!!", "oprelative": "."});
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template2 = new hou.StringParmTemplate({name: "lookup", label: "Look At Up Vector", num_components: 1, default_value: ["on"], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.Regular, menu_items: ["off", "on", "quat", "pos", "obj"], menu_labels: ["Don't Use Up Vector", "Use Up Vector", "Use Quaternions", "Use Global Position", "Use Up Object"], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal});
			hou_parm_template2.hide(true);
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template2 = new hou.StringParmTemplate({name: "lookupobjpath", label: "Look Up Object", num_components: 1, default_value: [""], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.NodeReference, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal});
			hou_parm_template2.hide(true);
			hou_parm_template2.setTags({"opfilter": "!!OBJ!!", "oprelative": "."});
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template2 = new hou.StringParmTemplate({name: "pathobjpath", label: "Path Object", num_components: 1, default_value: [""], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.NodeReference, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal});
			hou_parm_template2.hide(true);
			hou_parm_template2.setTags({"opfilter": "!!SOP!!", "oprelative": "."});
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template2 = new hou.FloatParmTemplate({name: "roll", label: "Roll", num_components: 1, default_value: [0], min: null, max: 360, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Angle, naming_scheme: hou.parmNamingScheme.Base1});
			hou_parm_template2.hide(true);
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template2 = new hou.FloatParmTemplate({name: "pos", label: "Position", num_components: 1, default_value: [0], min: 0, max: 10, min_is_strict: true, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.Base1});
			hou_parm_template2.hide(true);
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template2 = new hou.MenuParmTemplate({name: "uparmtype", label: "Parameterization", menu_items: ["uniform", "arc"], menu_labels: ["Uniform", "Arc Length"], default_value: 1, icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal, menu_use_token: false, is_button_strip: false, strip_uses_icons: false});
			hou_parm_template2.hide(true);
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template2 = new hou.IntParmTemplate({name: "pathorient", label: "Orient Along Path", num_components: 1, default_value: [1], min: 0, max: 1, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.Base1, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal, menu_use_token: false});
			hou_parm_template2.hide(true);
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template2 = new hou.FloatParmTemplate({name: "up", label: "Orient Up Vector", num_components: 3, default_value: [0, 1, 0], min: 0, max: 10, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Vector, naming_scheme: hou.parmNamingScheme.XYZW});
			hou_parm_template2.hide(true);
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template2 = new hou.FloatParmTemplate({name: "bank", label: "Auto-Bank factor", num_components: 1, default_value: [0], min: null, max: 1, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.Base1});
			hou_parm_template2.hide(true);
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template_group.append(hou_parm_template);
			hou_parm_template = new hou.FolderParmTemplate({name: "stdswitcher3_1", label: "Lights", folder_type: hou.folderType.Tabs, default_value: 0, ends_tab_group: false});
			hou_parm_template2 = new hou.StringParmTemplate({name: "categories", label: "Categories", num_components: 1, default_value: [""], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.Regular, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal});
			hou_parm_template2.setTags({"autoscope": "0000000000000000", "spare_category": "Shading"});
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template2 = new hou.StringParmTemplate({name: "lookat_camera", label: "Look At Camera", num_components: 1, default_value: [""], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.NodeReference, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal});
			hou_parm_template2.setTags({"autoscope": "0000000000000000", "opfilter": "!!OBJ!!", "oprelative": "."});
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template2 = new hou.StringParmTemplate({name: "lookup_camera", label: "Camera Up Vector", num_components: 1, default_value: ["on"], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.Regular, menu_items: ["off", "on", "quat"], menu_labels: ["Don't use up vector", "Use up vector", "Use quaternions"], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal});
			hou_parm_template2.setConditional(hou.parmCondType.DisableWhen, "{ lookat_camera == \\\"\\\" }");
			hou_parm_template2.setTags({"autoscope": "0000000000000000"});
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template2 = new hou.ToggleParmTemplate({name: "azimuth_only", label: "Use Only Camera Azimuth", default_value: false});
			hou_parm_template2.setConditional(hou.parmCondType.DisableWhen, "{ lookat_camera == \\\"\\\" }");
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template2 = new hou.ToggleParmTemplate({name: "light_enable", label: "Lights Enabled", default_value: true});
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template2 = new hou.ToggleParmTemplate({name: "use_look_at_target", label: "Use lights look-at target", default_value: false});
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template2 = new hou.FloatParmTemplate({name: "look_at_target", label: "Lights Look At", num_components: 3, default_value: [0, 0, 0], min: null, max: 1, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.XYZW});
			hou_parm_template2.setConditional(hou.parmCondType.DisableWhen, "{ use_look_at_target == 0 }");
			hou_parm_template2.setTags({"autoscope": "1110000000000000"});
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template2 = new hou.FolderParmTemplate({name: "folder0", label: "Key Light", folder_type: hou.folderType.Tabs, default_value: 0, ends_tab_group: false});
			let hou_parm_template3 = new hou.ToggleParmTemplate({name: "key_light_light_enable", label: "Light Enabled", default_value: true, default_expression: "on", default_expression_language: hou.scriptLanguage.Hscript});
			hou_parm_template3.setConditional(hou.parmCondType.DisableWhen, "{ light_enable == 0 }");
			hou_parm_template3.setTags({"autoscope": "0000000000000000"});
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template3 = new hou.ToggleParmTemplate({name: "show_key_direction", label: "Show Direction Manipulator", default_value: true});
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template3 = new hou.FloatParmTemplate({name: "key_direction_r", label: "Direction To Light", num_components: 3, default_value: [null, 125, 0], min: 0, max: 360, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.XYZW});
			hou_parm_template3.setTags({"autoscope": "1110000000000000"});
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template3 = new hou.FloatParmTemplate({name: "key_light_l_t", label: "Translate", num_components: 3, default_value: [0, 0, 10], min: null, max: 1, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.XYZW});
			hou_parm_template3.setTags({"autoscope": "1110000000000000"});
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template3 = new hou.FloatParmTemplate({name: "key_light_l_r", label: "Rotate", num_components: 3, default_value: [0, 0, 0], min: 0, max: 360, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.XYZW});
			hou_parm_template3.setTags({"autoscope": "1110000000000000"});
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template3 = new hou.FolderParmTemplate({name: "key_light_folder0", label: "Light", folder_type: hou.folderType.Tabs, default_value: 0, ends_tab_group: false});
			let hou_parm_template4 = new hou.MenuParmTemplate({name: "key_light_light_type", label: "Light Type", menu_items: ["point", "spot", "distant"], menu_labels: ["Point Light", "Spot Light", "Distant Light"], default_value: 2, icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal, menu_use_token: false, is_button_strip: false, strip_uses_icons: false});
			hou_parm_template4.setConditional(hou.parmCondType.DisableWhen, "{ key_light_light_enable == 0 } { light_enable == 0 }");
			hou_parm_template4.setTags({"autoscope": "0000000000000000"});
			hou_parm_template3.addParmTemplate(hou_parm_template4);
			hou_parm_template4 = new hou.FloatParmTemplate({name: "key_light_light_color", label: "Light Color", num_components: 3, default_value: [1, 1, 1], min: 0, max: 1, min_is_strict: false, max_is_strict: false, look: hou.parmLook.ColorSquare, naming_scheme: hou.parmNamingScheme.RGBA});
			hou_parm_template4.setConditional(hou.parmCondType.DisableWhen, "{ key_light_light_enable == 0 } { light_enable == 0 }");
			hou_parm_template4.setTags({"autoscope": "0000000000000000"});
			hou_parm_template3.addParmTemplate(hou_parm_template4);
			hou_parm_template4 = new hou.FloatParmTemplate({name: "key_light_light_intensity", label: "Light Intensity", num_components: 1, default_value: [1], min: 0, max: 10, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.Base1});
			hou_parm_template4.setConditional(hou.parmCondType.DisableWhen, "{ key_light_light_enable == 0 } { light_enable == 0 }");
			hou_parm_template4.setTags({"autoscope": "1000000000000000"});
			hou_parm_template3.addParmTemplate(hou_parm_template4);
			hou_parm_template4 = new hou.ToggleParmTemplate({name: "key_light_light_contribdiff", label: "Diffuse contribution", default_value: true, default_expression: "on", default_expression_language: hou.scriptLanguage.Hscript});
			hou_parm_template4.setConditional(hou.parmCondType.DisableWhen, "{ key_light_light_enable == 0 } { light_enable == 0 }");
			hou_parm_template4.setTags({"autoscope": "0000000000000000"});
			hou_parm_template3.addParmTemplate(hou_parm_template4);
			hou_parm_template4 = new hou.ToggleParmTemplate({name: "key_light_light_contribspec", label: "Specular contribution", default_value: true, default_expression: "on", default_expression_language: hou.scriptLanguage.Hscript});
			hou_parm_template4.setConditional(hou.parmCondType.DisableWhen, "{ key_light_light_enable == 0 } { light_enable == 0 }");
			hou_parm_template4.setTags({"autoscope": "0000000000000000"});
			hou_parm_template3.addParmTemplate(hou_parm_template4);
			hou_parm_template4 = new hou.FolderParmTemplate({name: "key_light_folder2", label: "Spot Light Options", folder_type: hou.folderType.Tabs, default_value: 0, ends_tab_group: false});
			let hou_parm_template5 = new hou.FloatParmTemplate({name: "key_light_coneangle", label: "Cone Angle", num_components: 1, default_value: [45], min: 0, max: 180, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Angle, naming_scheme: hou.parmNamingScheme.Base1});
			hou_parm_template5.setConditional(hou.parmCondType.DisableWhen, "{ key_light_light_type != spot }");
			hou_parm_template5.setTags({"autoscope": "0000000000000000"});
			hou_parm_template4.addParmTemplate(hou_parm_template5);
			hou_parm_template5 = new hou.FloatParmTemplate({name: "key_light_conedelta", label: "Cone Delta", num_components: 1, default_value: [10], min: 0, max: 180, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Angle, naming_scheme: hou.parmNamingScheme.Base1});
			hou_parm_template5.setConditional(hou.parmCondType.DisableWhen, "{ key_light_light_type != spot }");
			hou_parm_template5.setTags({"autoscope": "0000000000000000"});
			hou_parm_template4.addParmTemplate(hou_parm_template5);
			hou_parm_template5 = new hou.FloatParmTemplate({name: "key_light_coneroll", label: "Cone Rolloff", num_components: 1, default_value: [1], min: 0.001, max: 10, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.Base1});
			hou_parm_template5.setConditional(hou.parmCondType.DisableWhen, "{ key_light_light_type != spot }");
			hou_parm_template5.setTags({"autoscope": "0000000000000000"});
			hou_parm_template4.addParmTemplate(hou_parm_template5);
			hou_parm_template5 = new hou.StringParmTemplate({name: "key_light_projmap", label: "Projection Map", num_components: 1, default_value: [""], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.FileReference, file_type: hou.fileType.Image, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.StringReplace});
			hou_parm_template5.setTags({"autoscope": "0000000000000000"});
			hou_parm_template4.addParmTemplate(hou_parm_template5);
			hou_parm_template5 = new hou.ToggleParmTemplate({name: "key_light_light_conefov", label: "Use cone angle for field of view", default_value: true, default_expression: "on", default_expression_language: hou.scriptLanguage.Hscript});
			hou_parm_template5.setConditional(hou.parmCondType.DisableWhen, "{ key_light_light_type != spot }");
			hou_parm_template5.setTags({"autoscope": "0000000000000000"});
			hou_parm_template4.addParmTemplate(hou_parm_template5);
			hou_parm_template5 = new hou.FloatParmTemplate({name: "key_light_light_fov", label: "Projection Angle", num_components: 1, default_value: [45], min: 0.05, max: 90, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.Base1});
			hou_parm_template5.setConditional(hou.parmCondType.DisableWhen, "{ key_light_light_conefov != 0 key_light_light_type == spot } { key_light_light_type == distant }");
			hou_parm_template5.setTags({"autoscope": "0000000000000000"});
			hou_parm_template4.addParmTemplate(hou_parm_template5);
			hou_parm_template5 = new hou.FloatParmTemplate({name: "key_light_orthowidth", label: "Orthographic Width", num_components: 1, default_value: [2], min: 1, max: 10, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.Base1});
			hou_parm_template5.setConditional(hou.parmCondType.DisableWhen, "{ key_light_light_type != distant }");
			hou_parm_template5.setTags({"autoscope": "0000000000000000"});
			hou_parm_template4.addParmTemplate(hou_parm_template5);
			hou_parm_template5 = new hou.ToggleParmTemplate({name: "key_light_clampprojmap", label: "Clamp Projected Map To Frustum", default_value: false, default_expression: "off", default_expression_language: hou.scriptLanguage.Hscript});
			hou_parm_template5.setConditional(hou.parmCondType.DisableWhen, "{ key_light_projmap == \\\"\\\" }");
			hou_parm_template5.setTags({"autoscope": "0000000000000000"});
			hou_parm_template4.addParmTemplate(hou_parm_template5);
			hou_parm_template3.addParmTemplate(hou_parm_template4);
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template3 = new hou.FolderParmTemplate({name: "key_light_folder0_1", label: "Shadows", folder_type: hou.folderType.Tabs, default_value: 0, ends_tab_group: false});
			hou_parm_template4 = new hou.MenuParmTemplate({name: "key_light_shadow_type", label: "Shadow Type", menu_items: ["off", "raytrace", "depthmap"], menu_labels: ["No Shadows", "Ray-Traced Shadows", "Depth Map Shadows"], default_value: 1, icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal, menu_use_token: false, is_button_strip: false, strip_uses_icons: false});
			hou_parm_template4.setTags({"autoscope": "0000000000000000"});
			hou_parm_template3.addParmTemplate(hou_parm_template4);
			hou_parm_template4 = new hou.StringParmTemplate({name: "key_light_shadowmask", label: "Shadow Mask", num_components: 1, default_value: ["*"], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.NodeReferenceList, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal});
			hou_parm_template4.setConditional(hou.parmCondType.DisableWhen, "{ key_light_shadow_type == off }");
			hou_parm_template4.setTags({"autoscope": "0000000000000000", "opfilter": "!!OBJ/GEOMETRY!!", "oprelative": "/obj"});
			hou_parm_template3.addParmTemplate(hou_parm_template4);
			hou_parm_template4 = new hou.FloatParmTemplate({name: "key_light_shadow_bias", label: "Shadow Bias", num_components: 1, default_value: [0.05], min: 0, max: 1, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.Base1});
			hou_parm_template4.setConditional(hou.parmCondType.DisableWhen, "{ key_light_shadow_type == off }");
			hou_parm_template4.setTags({"autoscope": "0000000000000000"});
			hou_parm_template3.addParmTemplate(hou_parm_template4);
			hou_parm_template4 = new hou.FloatParmTemplate({name: "key_light_shadow_intensity", label: "Shadow Intensity", num_components: 1, default_value: [1], min: 0, max: 10, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.Base1});
			hou_parm_template4.setConditional(hou.parmCondType.DisableWhen, "{ key_light_shadow_type == off }");
			hou_parm_template4.setTags({"autoscope": "0000000000000000"});
			hou_parm_template3.addParmTemplate(hou_parm_template4);
			hou_parm_template4 = new hou.FloatParmTemplate({name: "key_light_shadow_quality", label: "Shadow Quality", num_components: 1, default_value: [1], min: 0.1, max: 10, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.Base1});
			hou_parm_template4.setConditional(hou.parmCondType.DisableWhen, "{ key_light_shadow_type != depthmap }");
			hou_parm_template4.setTags({"autoscope": "0000000000000000"});
			hou_parm_template3.addParmTemplate(hou_parm_template4);
			hou_parm_template4 = new hou.FloatParmTemplate({name: "key_light_shadow_softness", label: "Shadow Softness", num_components: 1, default_value: [1], min: 0, max: 1, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.Base1});
			hou_parm_template4.setConditional(hou.parmCondType.DisableWhen, "{ key_light_shadow_type != depthmap }");
			hou_parm_template4.setTags({"autoscope": "0000000000000000"});
			hou_parm_template3.addParmTemplate(hou_parm_template4);
			hou_parm_template4 = new hou.FloatParmTemplate({name: "key_light_shadow_blur", label: "Shadow Blur", num_components: 1, default_value: [0], min: 0, max: 1, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.Base1});
			hou_parm_template4.setConditional(hou.parmCondType.DisableWhen, "{ key_light_shadow_type != depthmap }");
			hou_parm_template4.setTags({"autoscope": "0000000000000000"});
			hou_parm_template3.addParmTemplate(hou_parm_template4);
			hou_parm_template4 = new hou.ToggleParmTemplate({name: "key_light_shadow_transparent", label: "Transparent Shadows", default_value: true, default_expression: "on", default_expression_language: hou.scriptLanguage.Hscript});
			hou_parm_template4.setConditional(hou.parmCondType.DisableWhen, "{ key_light_shadow_type == off }");
			hou_parm_template4.setTags({"autoscope": "0000000000000000"});
			hou_parm_template3.addParmTemplate(hou_parm_template4);
			hou_parm_template4 = new hou.FolderParmTemplate({name: "key_light_folder5_1", label: "Depth Map Options", folder_type: hou.folderType.Tabs, default_value: 0, ends_tab_group: false});
			hou_parm_template5 = new hou.ToggleParmTemplate({name: "key_light_render_shadowmap", label: "Auto-generate Shadow Map", default_value: true, default_expression: "on", default_expression_language: hou.scriptLanguage.Hscript});
			hou_parm_template5.setConditional(hou.parmCondType.DisableWhen, "{ key_light_shadow_type != depthmap }");
			hou_parm_template5.setTags({"autoscope": "0000000000000000"});
			hou_parm_template4.addParmTemplate(hou_parm_template5);
			hou_parm_template5 = new hou.LabelParmTemplate({name: "labelparm", label: "Field Of View", column_labels: ["See spot light options (in light tab) for view controls"]});
			hou_parm_template5.setTags({"autoscope": "0000000000000000"});
			hou_parm_template4.addParmTemplate(hou_parm_template5);
			hou_parm_template5 = new hou.StringParmTemplate({name: "key_light_shadowmap_file", label: "Shadow Map", num_components: 1, default_value: ["$HIP/$OS-key.rat"], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.FileReference, file_type: hou.fileType.Image, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.StringReplace});
			hou_parm_template5.setConditional(hou.parmCondType.DisableWhen, "{ key_light_shadow_type != depthmap }");
			hou_parm_template5.setTags({"autoscope": "0000000000000000"});
			hou_parm_template4.addParmTemplate(hou_parm_template5);
			hou_parm_template5 = new hou.IntParmTemplate({name: "key_light_res", label: "Resolution", num_components: 2, default_value: [512, 512], min: null, max: 1, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.XYZW, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal, menu_use_token: false});
			hou_parm_template5.setConditional(hou.parmCondType.DisableWhen, "{ key_light_shadow_type != depthmap }");
			hou_parm_template5.setJoinWithNext(true);
			hou_parm_template5.setTags({"autoscope": "0000000000000000", "spare_category": "View"});
			hou_parm_template4.addParmTemplate(hou_parm_template5);
			hou_parm_template5 = new hou.MenuParmTemplate({name: "key_light_shadowmap_resMenu", label: "Choose Resolution", menu_items: ["128", "256", "512", "1024", "4096"], menu_labels: ["Tiny (128x128)", "Small (256x256)", "Normal (512x512)", "Large (1024x1024)", "Huge (4096)"], default_value: 4, icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Mini, menu_use_token: false, is_button_strip: false, strip_uses_icons: false});
			hou_parm_template5.setConditional(hou.parmCondType.DisableWhen, "{ key_light_shadow_type != depthmap }");
			hou_parm_template5.hideLabel(true);
			hou_parm_template5.setTags({"autoscope": "0000000000000000", "spare_category": "View"});
			hou_parm_template4.addParmTemplate(hou_parm_template5);
			hou_parm_template5 = new hou.IntParmTemplate({name: "key_light_shadowmap_samples", label: "Pixel Samples", num_components: 2, default_value: [1, 1], min: 1, max: 32, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.XYZW, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal, menu_use_token: false});
			hou_parm_template5.setConditional(hou.parmCondType.DisableWhen, "{ key_light_shadow_type != depthmap } { key_light_shadow_transparent != 1 }");
			hou_parm_template5.setTags({"autoscope": "0000000000000000"});
			hou_parm_template4.addParmTemplate(hou_parm_template5);
			hou_parm_template5 = new hou.FloatParmTemplate({name: "key_light_near", label: "Near Clipping", num_components: 1, default_value: [0.01], min: 0, max: 10, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.Base1});
			hou_parm_template5.setTags({"autoscope": "0000000000000000", "spare_category": "View"});
			hou_parm_template4.addParmTemplate(hou_parm_template5);
			hou_parm_template5 = new hou.FloatParmTemplate({name: "key_light_far", label: "Far Clipping", num_components: 1, default_value: [1000], min: 0, max: 10, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.Base1});
			hou_parm_template5.setTags({"autoscope": "0000000000000000", "spare_category": "View"});
			hou_parm_template4.addParmTemplate(hou_parm_template5);
			hou_parm_template5 = new hou.ToggleParmTemplate({name: "key_light_allowmotionblur", label: "Depth Map Motion Blur", default_value: false, default_expression: "off", default_expression_language: hou.scriptLanguage.Hscript});
			hou_parm_template5.setConditional(hou.parmCondType.DisableWhen, "{ key_light_shadow_type != depthmap }");
			hou_parm_template5.setTags({"autoscope": "0000000000000000"});
			hou_parm_template4.addParmTemplate(hou_parm_template5);
			hou_parm_template3.addParmTemplate(hou_parm_template4);
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template2 = new hou.FolderParmTemplate({name: "folder0_1", label: "Fill Light", folder_type: hou.folderType.Tabs, default_value: 0, ends_tab_group: false});
			hou_parm_template3 = new hou.ToggleParmTemplate({name: "fill_light_light_enable", label: "Light Enabled", default_value: true, default_expression: "on", default_expression_language: hou.scriptLanguage.Hscript});
			hou_parm_template3.setConditional(hou.parmCondType.DisableWhen, "{ light_enable == 0 }");
			hou_parm_template3.setTags({"autoscope": "0000000000000000"});
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template3 = new hou.ToggleParmTemplate({name: "show_fill_direction", label: "Show Direction Manipulator", default_value: true});
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template3 = new hou.FloatParmTemplate({name: "fill_direction_r", label: "Direction To Light", num_components: 3, default_value: [null, null, 0], min: 0, max: 360, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.XYZW});
			hou_parm_template3.setTags({"autoscope": "1110000000000000"});
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template3 = new hou.FloatParmTemplate({name: "fill_light_l_t", label: "Translate", num_components: 3, default_value: [0, 0, 10], min: null, max: 1, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.XYZW});
			hou_parm_template3.setTags({"autoscope": "1110000000000000"});
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template3 = new hou.FloatParmTemplate({name: "fill_light_l_r", label: "Rotate", num_components: 3, default_value: [0, 0, 0], min: 0, max: 360, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.XYZW});
			hou_parm_template3.setTags({"autoscope": "1110000000000000"});
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template3 = new hou.FolderParmTemplate({name: "fill_light_folder0", label: "Light", folder_type: hou.folderType.Tabs, default_value: 0, ends_tab_group: false});
			hou_parm_template4 = new hou.MenuParmTemplate({name: "fill_light_light_type", label: "Light Type", menu_items: ["point", "spot", "distant", "area"], menu_labels: ["Point Light", "Spot Light", "Distant Light", "Area Light"], default_value: 2, icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal, menu_use_token: false, is_button_strip: false, strip_uses_icons: false});
			hou_parm_template4.setConditional(hou.parmCondType.DisableWhen, "{ fill_light_light_enable == 0 } { light_enable == 0 }");
			hou_parm_template4.setTags({"autoscope": "0000000000000000"});
			hou_parm_template3.addParmTemplate(hou_parm_template4);
			hou_parm_template4 = new hou.FloatParmTemplate({name: "fill_light_light_color", label: "Light Color", num_components: 3, default_value: [0.3, 0.3, 0.3], min: 0, max: 1, min_is_strict: false, max_is_strict: false, look: hou.parmLook.ColorSquare, naming_scheme: hou.parmNamingScheme.RGBA});
			hou_parm_template4.setConditional(hou.parmCondType.DisableWhen, "{ fill_light_light_enable == 0 } { light_enable == 0 }");
			hou_parm_template4.setTags({"autoscope": "0000000000000000"});
			hou_parm_template3.addParmTemplate(hou_parm_template4);
			hou_parm_template4 = new hou.FloatParmTemplate({name: "fill_light_light_intensity", label: "Light Intensity", num_components: 1, default_value: [1], min: 0, max: 10, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.Base1});
			hou_parm_template4.setConditional(hou.parmCondType.DisableWhen, "{ fill_light_light_enable == 0 } { light_enable == 0 }");
			hou_parm_template4.setTags({"autoscope": "1000000000000000"});
			hou_parm_template3.addParmTemplate(hou_parm_template4);
			hou_parm_template4 = new hou.ToggleParmTemplate({name: "fill_light_light_contribdiff", label: "Diffuse contribution", default_value: true, default_expression: "on", default_expression_language: hou.scriptLanguage.Hscript});
			hou_parm_template4.setConditional(hou.parmCondType.DisableWhen, "{ fill_light_light_enable == 0 } { light_enable == 0 }");
			hou_parm_template4.setTags({"autoscope": "0000000000000000"});
			hou_parm_template3.addParmTemplate(hou_parm_template4);
			hou_parm_template4 = new hou.ToggleParmTemplate({name: "fill_light_light_contribspec", label: "Specular contribution", default_value: false, default_expression: "off", default_expression_language: hou.scriptLanguage.Hscript});
			hou_parm_template4.setConditional(hou.parmCondType.DisableWhen, "{ fill_light_light_enable == 0 } { light_enable == 0 }");
			hou_parm_template4.setTags({"autoscope": "0000000000000000"});
			hou_parm_template3.addParmTemplate(hou_parm_template4);
			hou_parm_template4 = new hou.FolderParmTemplate({name: "fill_light_folder2", label: "Spot Light Options", folder_type: hou.folderType.Tabs, default_value: 0, ends_tab_group: false});
			hou_parm_template5 = new hou.FloatParmTemplate({name: "fill_light_coneangle", label: "Cone Angle", num_components: 1, default_value: [45], min: 0, max: 180, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Angle, naming_scheme: hou.parmNamingScheme.Base1});
			hou_parm_template5.setConditional(hou.parmCondType.DisableWhen, "{ fill_light_light_type != spot }");
			hou_parm_template5.setTags({"autoscope": "0000000000000000"});
			hou_parm_template4.addParmTemplate(hou_parm_template5);
			hou_parm_template5 = new hou.FloatParmTemplate({name: "fill_light_conedelta", label: "Cone Delta", num_components: 1, default_value: [10], min: 0, max: 180, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Angle, naming_scheme: hou.parmNamingScheme.Base1});
			hou_parm_template5.setConditional(hou.parmCondType.DisableWhen, "{ fill_light_light_type != spot }");
			hou_parm_template5.setTags({"autoscope": "0000000000000000"});
			hou_parm_template4.addParmTemplate(hou_parm_template5);
			hou_parm_template5 = new hou.FloatParmTemplate({name: "fill_light_coneroll", label: "Cone Rolloff", num_components: 1, default_value: [1], min: 0.001, max: 10, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.Base1});
			hou_parm_template5.setConditional(hou.parmCondType.DisableWhen, "{ fill_light_light_type != spot }");
			hou_parm_template5.setTags({"autoscope": "0000000000000000"});
			hou_parm_template4.addParmTemplate(hou_parm_template5);
			hou_parm_template5 = new hou.StringParmTemplate({name: "fill_light_projmap", label: "Projection Map", num_components: 1, default_value: [""], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.FileReference, file_type: hou.fileType.Image, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.StringReplace});
			hou_parm_template5.setTags({"autoscope": "0000000000000000"});
			hou_parm_template4.addParmTemplate(hou_parm_template5);
			hou_parm_template5 = new hou.ToggleParmTemplate({name: "fill_light_light_conefov", label: "Use cone angle for field of view", default_value: true, default_expression: "on", default_expression_language: hou.scriptLanguage.Hscript});
			hou_parm_template5.setConditional(hou.parmCondType.DisableWhen, "{ fill_light_light_type != spot }");
			hou_parm_template5.setTags({"autoscope": "0000000000000000"});
			hou_parm_template4.addParmTemplate(hou_parm_template5);
			hou_parm_template5 = new hou.FloatParmTemplate({name: "fill_light_light_fov", label: "Projection Angle", num_components: 1, default_value: [45], min: 0.05, max: 90, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.Base1});
			hou_parm_template5.setConditional(hou.parmCondType.DisableWhen, "{ fill_light_light_conefov != 0 fill_light_light_type == spot } { fill_light_light_type == distant }");
			hou_parm_template5.setTags({"autoscope": "0000000000000000"});
			hou_parm_template4.addParmTemplate(hou_parm_template5);
			hou_parm_template5 = new hou.FloatParmTemplate({name: "fill_light_orthowidth", label: "Orthographic Width", num_components: 1, default_value: [2], min: 1, max: 10, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.Base1});
			hou_parm_template5.setConditional(hou.parmCondType.DisableWhen, "{ fill_light_light_type != distant }");
			hou_parm_template5.setTags({"autoscope": "0000000000000000"});
			hou_parm_template4.addParmTemplate(hou_parm_template5);
			hou_parm_template5 = new hou.ToggleParmTemplate({name: "fill_light_clampprojmap", label: "Clamp Projected Map To Frustum", default_value: false, default_expression: "off", default_expression_language: hou.scriptLanguage.Hscript});
			hou_parm_template5.setConditional(hou.parmCondType.DisableWhen, "{ fill_light_projmap == \\\"\\\" }");
			hou_parm_template5.setTags({"autoscope": "0000000000000000"});
			hou_parm_template4.addParmTemplate(hou_parm_template5);
			hou_parm_template3.addParmTemplate(hou_parm_template4);
			hou_parm_template4 = new hou.FolderParmTemplate({name: "fill_light_folder2_1", label: "Area Light Options", folder_type: hou.folderType.Tabs, default_value: 0, ends_tab_group: false});
			hou_parm_template5 = new hou.MenuParmTemplate({name: "fill_light_areashape", label: "Area Shape", menu_items: ["line", "grid", "disk", "sphere", "geo", "env"], menu_labels: ["Line/Tube", "Grid", "Disk", "Sphere", "Geometry", "Environment (Deprecated)"], default_value: 1, icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal, menu_use_token: false, is_button_strip: false, strip_uses_icons: false});
			hou_parm_template5.setConditional(hou.parmCondType.DisableWhen, "{ fill_light_light_type != area }");
			hou_parm_template5.setTags({"autoscope": "0000000000000000"});
			hou_parm_template4.addParmTemplate(hou_parm_template5);
			hou_parm_template5 = new hou.IntParmTemplate({name: "fill_light_areasamples", label: "Area Samples", num_components: 1, default_value: [16], min: 1, max: 64, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.Base1, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal, menu_use_token: false});
			hou_parm_template5.setConditional(hou.parmCondType.DisableWhen, "{ fill_light_light_type != area }");
			hou_parm_template5.setTags({"autoscope": "0000000000000000"});
			hou_parm_template4.addParmTemplate(hou_parm_template5);
			hou_parm_template5 = new hou.FloatParmTemplate({name: "fill_light_areasize", label: "Area Size", num_components: 1, default_value: [1], min: 0, max: 10, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.Base1});
			hou_parm_template5.setConditional(hou.parmCondType.DisableWhen, "{ fill_light_light_type != area }");
			hou_parm_template5.setTags({"autoscope": "0000000000000000"});
			hou_parm_template4.addParmTemplate(hou_parm_template5);
			hou_parm_template5 = new hou.ToggleParmTemplate({name: "fill_light_areacosine", label: "Cosine Falloff", default_value: true, default_expression: "on", default_expression_language: hou.scriptLanguage.Hscript});
			hou_parm_template5.setConditional(hou.parmCondType.DisableWhen, "{ fill_light_light_type != area } { fill_light_areashape == env }");
			hou_parm_template5.setTags({"autoscope": "0000000000000000"});
			hou_parm_template4.addParmTemplate(hou_parm_template5);
			hou_parm_template5 = new hou.ToggleParmTemplate({name: "fill_light_areasingle", label: "Single Sided", default_value: false, default_expression: "off", default_expression_language: hou.scriptLanguage.Hscript});
			hou_parm_template5.setConditional(hou.parmCondType.DisableWhen, "{ fill_light_light_type != area } { fill_light_areashape == env }");
			hou_parm_template5.setTags({"autoscope": "0000000000000000"});
			hou_parm_template4.addParmTemplate(hou_parm_template5);
			hou_parm_template5 = new hou.ToggleParmTemplate({name: "fill_light_areafullsphere", label: "Use full sphere for environment", default_value: false, default_expression: "off", default_expression_language: hou.scriptLanguage.Hscript});
			hou_parm_template5.setConditional(hou.parmCondType.DisableWhen, "{ fill_light_light_type != area } { fill_light_areashape != env }");
			hou_parm_template5.setTags({"autoscope": "0000000000000000"});
			hou_parm_template4.addParmTemplate(hou_parm_template5);
			hou_parm_template5 = new hou.ToggleParmTemplate({name: "fill_light_areausemap", label: "Use Area Map", default_value: false, default_expression: "off", default_expression_language: hou.scriptLanguage.Hscript});
			hou_parm_template5.setConditional(hou.parmCondType.DisableWhen, "{ fill_light_light_type != area } { fill_light_areashape != env }");
			hou_parm_template5.setTags({"autoscope": "0000000000000000"});
			hou_parm_template4.addParmTemplate(hou_parm_template5);
			hou_parm_template5 = new hou.StringParmTemplate({name: "fill_light_areamap", label: "Area Map", num_components: 1, default_value: [""], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.FileReference, file_type: hou.fileType.Image, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.StringReplace});
			hou_parm_template5.setConditional(hou.parmCondType.DisableWhen, "{ fill_light_light_type != area } { fill_light_areashape != env } { fill_light_areausemap == 0 }");
			hou_parm_template5.setTags({"autoscope": "0000000000000000"});
			hou_parm_template4.addParmTemplate(hou_parm_template5);
			hou_parm_template3.addParmTemplate(hou_parm_template4);
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template3 = new hou.FolderParmTemplate({name: "fill_light_folder0_1", label: "Shadows", folder_type: hou.folderType.Tabs, default_value: 0, ends_tab_group: false});
			hou_parm_template4 = new hou.MenuParmTemplate({name: "fill_light_shadow_type", label: "Shadow Type", menu_items: ["off", "raytrace", "depthmap"], menu_labels: ["No Shadows", "Ray-Traced Shadows", "Depth Map Shadows"], default_value: 0, icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal, menu_use_token: false, is_button_strip: false, strip_uses_icons: false});
			hou_parm_template4.setTags({"autoscope": "0000000000000000"});
			hou_parm_template3.addParmTemplate(hou_parm_template4);
			hou_parm_template4 = new hou.StringParmTemplate({name: "fill_light_shadowmask", label: "Shadow Mask", num_components: 1, default_value: ["*"], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.NodeReferenceList, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal});
			hou_parm_template4.setConditional(hou.parmCondType.DisableWhen, "{ fill_light_shadow_type == off }");
			hou_parm_template4.setTags({"autoscope": "0000000000000000", "opfilter": "!!OBJ/GEOMETRY!!", "oprelative": "/obj"});
			hou_parm_template3.addParmTemplate(hou_parm_template4);
			hou_parm_template4 = new hou.FloatParmTemplate({name: "fill_light_shadow_bias", label: "Shadow Bias", num_components: 1, default_value: [0.05], min: 0, max: 1, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.Base1});
			hou_parm_template4.setConditional(hou.parmCondType.DisableWhen, "{ fill_light_shadow_type == off }");
			hou_parm_template4.setTags({"autoscope": "0000000000000000"});
			hou_parm_template3.addParmTemplate(hou_parm_template4);
			hou_parm_template4 = new hou.FloatParmTemplate({name: "fill_light_shadow_intensity", label: "Shadow Intensity", num_components: 1, default_value: [1], min: 0, max: 10, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.Base1});
			hou_parm_template4.setConditional(hou.parmCondType.DisableWhen, "{ fill_light_shadow_type == off }");
			hou_parm_template4.setTags({"autoscope": "0000000000000000"});
			hou_parm_template3.addParmTemplate(hou_parm_template4);
			hou_parm_template4 = new hou.FloatParmTemplate({name: "fill_light_shadow_quality", label: "Shadow Quality", num_components: 1, default_value: [1], min: 0.1, max: 10, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.Base1});
			hou_parm_template4.setConditional(hou.parmCondType.DisableWhen, "{ fill_light_shadow_type != depthmap }");
			hou_parm_template4.setTags({"autoscope": "0000000000000000"});
			hou_parm_template3.addParmTemplate(hou_parm_template4);
			hou_parm_template4 = new hou.FloatParmTemplate({name: "fill_light_shadow_softness", label: "Shadow Softness", num_components: 1, default_value: [1], min: 0, max: 1, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.Base1});
			hou_parm_template4.setConditional(hou.parmCondType.DisableWhen, "{ fill_light_shadow_type != depthmap }");
			hou_parm_template4.setTags({"autoscope": "0000000000000000"});
			hou_parm_template3.addParmTemplate(hou_parm_template4);
			hou_parm_template4 = new hou.FloatParmTemplate({name: "fill_light_shadow_blur", label: "Shadow Blur", num_components: 1, default_value: [0], min: 0, max: 1, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.Base1});
			hou_parm_template4.setConditional(hou.parmCondType.DisableWhen, "{ fill_light_shadow_type != depthmap }");
			hou_parm_template4.setTags({"autoscope": "0000000000000000"});
			hou_parm_template3.addParmTemplate(hou_parm_template4);
			hou_parm_template4 = new hou.ToggleParmTemplate({name: "fill_light_shadow_transparent", label: "Transparent Shadows", default_value: true, default_expression: "on", default_expression_language: hou.scriptLanguage.Hscript});
			hou_parm_template4.setConditional(hou.parmCondType.DisableWhen, "{ fill_light_shadow_type == off }");
			hou_parm_template4.setTags({"autoscope": "0000000000000000"});
			hou_parm_template3.addParmTemplate(hou_parm_template4);
			hou_parm_template4 = new hou.FolderParmTemplate({name: "fill_light_folder5_1", label: "Depth Map Options", folder_type: hou.folderType.Tabs, default_value: 0, ends_tab_group: false});
			hou_parm_template5 = new hou.ToggleParmTemplate({name: "fill_light_render_shadowmap", label: "Auto-generate Shadow Map", default_value: true, default_expression: "on", default_expression_language: hou.scriptLanguage.Hscript});
			hou_parm_template5.setConditional(hou.parmCondType.DisableWhen, "{ fill_light_shadow_type != depthmap }");
			hou_parm_template5.setTags({"autoscope": "0000000000000000"});
			hou_parm_template4.addParmTemplate(hou_parm_template5);
			hou_parm_template5 = new hou.LabelParmTemplate({name: "labelparm2", label: "Field Of View", column_labels: ["See spot light options (in light tab) for view controls"]});
			hou_parm_template5.setTags({"autoscope": "0000000000000000"});
			hou_parm_template4.addParmTemplate(hou_parm_template5);
			hou_parm_template5 = new hou.StringParmTemplate({name: "fill_light_shadowmap_file", label: "Shadow Map", num_components: 1, default_value: ["$HIP/$OS-fill.rat"], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.FileReference, file_type: hou.fileType.Image, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.StringReplace});
			hou_parm_template5.setConditional(hou.parmCondType.DisableWhen, "{ fill_light_shadow_type != depthmap }");
			hou_parm_template5.setTags({"autoscope": "0000000000000000"});
			hou_parm_template4.addParmTemplate(hou_parm_template5);
			hou_parm_template5 = new hou.IntParmTemplate({name: "fill_light_res", label: "Resolution", num_components: 2, default_value: [512, 512], min: null, max: 1, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.XYZW, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal, menu_use_token: false});
			hou_parm_template5.setConditional(hou.parmCondType.DisableWhen, "{ fill_light_shadow_type != depthmap }");
			hou_parm_template5.setJoinWithNext(true);
			hou_parm_template5.setTags({"autoscope": "0000000000000000", "spare_category": "View"});
			hou_parm_template4.addParmTemplate(hou_parm_template5);
			hou_parm_template5 = new hou.MenuParmTemplate({name: "fill_light_shadowmap_resMenu", label: "Choose Resolution", menu_items: ["128", "256", "512", "1024", "4096"], menu_labels: ["Tiny (128x128)", "Small (256x256)", "Normal (512x512)", "Large (1024x1024)", "Huge (4096)"], default_value: 4, icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Mini, menu_use_token: false, is_button_strip: false, strip_uses_icons: false});
			hou_parm_template5.setConditional(hou.parmCondType.DisableWhen, "{ fill_light_shadow_type != depthmap }");
			hou_parm_template5.hideLabel(true);
			hou_parm_template5.setTags({"autoscope": "0000000000000000", "spare_category": "View"});
			hou_parm_template4.addParmTemplate(hou_parm_template5);
			hou_parm_template5 = new hou.IntParmTemplate({name: "fill_light_shadowmap_samples", label: "Pixel Samples", num_components: 2, default_value: [1, 1], min: 1, max: 32, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.XYZW, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal, menu_use_token: false});
			hou_parm_template5.setConditional(hou.parmCondType.DisableWhen, "{ fill_light_shadow_type != depthmap } { fill_light_shadow_transparent != 1 }");
			hou_parm_template5.setTags({"autoscope": "0000000000000000"});
			hou_parm_template4.addParmTemplate(hou_parm_template5);
			hou_parm_template5 = new hou.FloatParmTemplate({name: "fill_light_near", label: "Near Clipping", num_components: 1, default_value: [0.01], min: 0, max: 10, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.Base1});
			hou_parm_template5.setTags({"autoscope": "0000000000000000", "spare_category": "View"});
			hou_parm_template4.addParmTemplate(hou_parm_template5);
			hou_parm_template5 = new hou.FloatParmTemplate({name: "fill_light_far", label: "Far Clipping", num_components: 1, default_value: [1000], min: 0, max: 10, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.Base1});
			hou_parm_template5.setTags({"autoscope": "0000000000000000", "spare_category": "View"});
			hou_parm_template4.addParmTemplate(hou_parm_template5);
			hou_parm_template5 = new hou.ToggleParmTemplate({name: "fill_light_allowmotionblur", label: "Depth Map Motion Blur", default_value: false, default_expression: "off", default_expression_language: hou.scriptLanguage.Hscript});
			hou_parm_template5.setConditional(hou.parmCondType.DisableWhen, "{ fill_light_shadow_type != depthmap }");
			hou_parm_template5.setTags({"autoscope": "0000000000000000"});
			hou_parm_template4.addParmTemplate(hou_parm_template5);
			hou_parm_template3.addParmTemplate(hou_parm_template4);
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template2 = new hou.FolderParmTemplate({name: "folder0_2", label: "Rim Light", folder_type: hou.folderType.Tabs, default_value: 0, ends_tab_group: false});
			hou_parm_template3 = new hou.ToggleParmTemplate({name: "rim_light_light_enable", label: "Light Enabled", default_value: true, default_expression: "on", default_expression_language: hou.scriptLanguage.Hscript});
			hou_parm_template3.setConditional(hou.parmCondType.DisableWhen, "{ light_enable == 0 }");
			hou_parm_template3.setTags({"autoscope": "0000000000000000"});
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template3 = new hou.ToggleParmTemplate({name: "show_rim_direction", label: "Show Direction Manipulator", default_value: true});
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template3 = new hou.FloatParmTemplate({name: "rim_direction_r", label: "Direction To Light", num_components: 3, default_value: [null, null, 0], min: 0, max: 360, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.XYZW});
			hou_parm_template3.setTags({"autoscope": "1110000000000000"});
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template3 = new hou.FloatParmTemplate({name: "rim_light_l_t", label: "Translate", num_components: 3, default_value: [0, 0, 10], min: null, max: 1, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.XYZW});
			hou_parm_template3.setTags({"autoscope": "1110000000000000"});
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template3 = new hou.FloatParmTemplate({name: "rim_light_l_r", label: "Rotate", num_components: 3, default_value: [0, 0, 0], min: 0, max: 360, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.XYZW});
			hou_parm_template3.setTags({"autoscope": "1110000000000000"});
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template3 = new hou.FolderParmTemplate({name: "rim_light_folder0", label: "Light", folder_type: hou.folderType.Tabs, default_value: 0, ends_tab_group: false});
			hou_parm_template4 = new hou.MenuParmTemplate({name: "rim_light_light_type", label: "Light Type", menu_items: ["point", "spot", "distant", "area"], menu_labels: ["Point Light", "Spot Light", "Distant Light", "Area Light"], default_value: 2, icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal, menu_use_token: false, is_button_strip: false, strip_uses_icons: false});
			hou_parm_template4.setConditional(hou.parmCondType.DisableWhen, "{ rim_light_light_enable == 0 } { light_enable == 0 }");
			hou_parm_template4.setTags({"autoscope": "0000000000000000"});
			hou_parm_template3.addParmTemplate(hou_parm_template4);
			hou_parm_template4 = new hou.FloatParmTemplate({name: "rim_light_light_color", label: "Light Color", num_components: 3, default_value: [0.8, 0.8, 0.8], min: 0, max: 1, min_is_strict: false, max_is_strict: false, look: hou.parmLook.ColorSquare, naming_scheme: hou.parmNamingScheme.RGBA});
			hou_parm_template4.setConditional(hou.parmCondType.DisableWhen, "{ rim_light_light_enable == 0 } { light_enable == 0 }");
			hou_parm_template4.setTags({"autoscope": "0000000000000000"});
			hou_parm_template3.addParmTemplate(hou_parm_template4);
			hou_parm_template4 = new hou.FloatParmTemplate({name: "rim_light_light_intensity", label: "Light Intensity", num_components: 1, default_value: [1], min: 0, max: 10, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.Base1});
			hou_parm_template4.setConditional(hou.parmCondType.DisableWhen, "{ rim_light_light_enable == 0 } { light_enable == 0 }");
			hou_parm_template4.setTags({"autoscope": "1000000000000000"});
			hou_parm_template3.addParmTemplate(hou_parm_template4);
			hou_parm_template4 = new hou.ToggleParmTemplate({name: "rim_light_light_contribdiff", label: "Diffuse contribution", default_value: false, default_expression: "off", default_expression_language: hou.scriptLanguage.Hscript});
			hou_parm_template4.setConditional(hou.parmCondType.DisableWhen, "{ rim_light_light_enable == 0 } { light_enable == 0 }");
			hou_parm_template4.setTags({"autoscope": "0000000000000000"});
			hou_parm_template3.addParmTemplate(hou_parm_template4);
			hou_parm_template4 = new hou.ToggleParmTemplate({name: "rim_light_light_contribspec", label: "Specular contribution", default_value: true, default_expression: "on", default_expression_language: hou.scriptLanguage.Hscript});
			hou_parm_template4.setConditional(hou.parmCondType.DisableWhen, "{ rim_light_light_enable == 0 } { light_enable == 0 }");
			hou_parm_template4.setTags({"autoscope": "0000000000000000"});
			hou_parm_template3.addParmTemplate(hou_parm_template4);
			hou_parm_template4 = new hou.FolderParmTemplate({name: "rim_light_folder2", label: "Spot Light Options", folder_type: hou.folderType.Tabs, default_value: 0, ends_tab_group: false});
			hou_parm_template5 = new hou.FloatParmTemplate({name: "rim_light_coneangle", label: "Cone Angle", num_components: 1, default_value: [45], min: 0, max: 180, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Angle, naming_scheme: hou.parmNamingScheme.Base1});
			hou_parm_template5.setConditional(hou.parmCondType.DisableWhen, "{ rim_light_light_type != spot }");
			hou_parm_template5.setTags({"autoscope": "0000000000000000"});
			hou_parm_template4.addParmTemplate(hou_parm_template5);
			hou_parm_template5 = new hou.FloatParmTemplate({name: "rim_light_conedelta", label: "Cone Delta", num_components: 1, default_value: [10], min: 0, max: 180, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Angle, naming_scheme: hou.parmNamingScheme.Base1});
			hou_parm_template5.setConditional(hou.parmCondType.DisableWhen, "{ rim_light_light_type != spot }");
			hou_parm_template5.setTags({"autoscope": "0000000000000000"});
			hou_parm_template4.addParmTemplate(hou_parm_template5);
			hou_parm_template5 = new hou.FloatParmTemplate({name: "rim_light_coneroll", label: "Cone Rolloff", num_components: 1, default_value: [1], min: 0.001, max: 10, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.Base1});
			hou_parm_template5.setConditional(hou.parmCondType.DisableWhen, "{ rim_light_light_type != spot }");
			hou_parm_template5.setTags({"autoscope": "0000000000000000"});
			hou_parm_template4.addParmTemplate(hou_parm_template5);
			hou_parm_template5 = new hou.StringParmTemplate({name: "rim_light_projmap", label: "Projection Map", num_components: 1, default_value: [""], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.FileReference, file_type: hou.fileType.Image, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.StringReplace});
			hou_parm_template5.setTags({"autoscope": "0000000000000000"});
			hou_parm_template4.addParmTemplate(hou_parm_template5);
			hou_parm_template5 = new hou.ToggleParmTemplate({name: "rim_light_light_conefov", label: "Use cone angle for field of view", default_value: true, default_expression: "on", default_expression_language: hou.scriptLanguage.Hscript});
			hou_parm_template5.setConditional(hou.parmCondType.DisableWhen, "{ rim_light_light_type != spot }");
			hou_parm_template5.setTags({"autoscope": "0000000000000000"});
			hou_parm_template4.addParmTemplate(hou_parm_template5);
			hou_parm_template5 = new hou.FloatParmTemplate({name: "rim_light_light_fov", label: "Projection Angle", num_components: 1, default_value: [45], min: 0.05, max: 90, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.Base1});
			hou_parm_template5.setConditional(hou.parmCondType.DisableWhen, "{ rim_light_light_conefov != 0 rim_light_light_type == spot } { rim_light_light_type == distant }");
			hou_parm_template5.setTags({"autoscope": "0000000000000000"});
			hou_parm_template4.addParmTemplate(hou_parm_template5);
			hou_parm_template5 = new hou.FloatParmTemplate({name: "rim_light_orthowidth", label: "Orthographic Width", num_components: 1, default_value: [2], min: 1, max: 10, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.Base1});
			hou_parm_template5.setConditional(hou.parmCondType.DisableWhen, "{ rim_light_light_type != distant }");
			hou_parm_template5.setTags({"autoscope": "0000000000000000"});
			hou_parm_template4.addParmTemplate(hou_parm_template5);
			hou_parm_template5 = new hou.ToggleParmTemplate({name: "rim_light_clampprojmap", label: "Clamp Projected Map To Frustum", default_value: false, default_expression: "off", default_expression_language: hou.scriptLanguage.Hscript});
			hou_parm_template5.setConditional(hou.parmCondType.DisableWhen, "{ rim_light_projmap == \\\"\\\" }");
			hou_parm_template5.setTags({"autoscope": "0000000000000000"});
			hou_parm_template4.addParmTemplate(hou_parm_template5);
			hou_parm_template3.addParmTemplate(hou_parm_template4);
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template3 = new hou.FolderParmTemplate({name: "rim_light_folder0_1", label: "Shadows", folder_type: hou.folderType.Tabs, default_value: 0, ends_tab_group: false});
			hou_parm_template4 = new hou.MenuParmTemplate({name: "rim_light_shadow_type", label: "Shadow Type", menu_items: ["off", "raytrace", "depthmap"], menu_labels: ["No Shadows", "Ray-Traced Shadows", "Depth Map Shadows"], default_value: 0, icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal, menu_use_token: false, is_button_strip: false, strip_uses_icons: false});
			hou_parm_template4.setTags({"autoscope": "0000000000000000"});
			hou_parm_template3.addParmTemplate(hou_parm_template4);
			hou_parm_template4 = new hou.StringParmTemplate({name: "rim_light_shadowmask", label: "Shadow Mask", num_components: 1, default_value: ["*"], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.NodeReferenceList, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal});
			hou_parm_template4.setConditional(hou.parmCondType.DisableWhen, "{ rim_light_shadow_type == off }");
			hou_parm_template4.setTags({"autoscope": "0000000000000000", "opfilter": "!!OBJ/GEOMETRY!!", "oprelative": "/obj"});
			hou_parm_template3.addParmTemplate(hou_parm_template4);
			hou_parm_template4 = new hou.FloatParmTemplate({name: "rim_light_shadow_bias", label: "Shadow Bias", num_components: 1, default_value: [0.05], min: 0, max: 1, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.Base1});
			hou_parm_template4.setConditional(hou.parmCondType.DisableWhen, "{ rim_light_shadow_type == off }");
			hou_parm_template4.setTags({"autoscope": "0000000000000000"});
			hou_parm_template3.addParmTemplate(hou_parm_template4);
			hou_parm_template4 = new hou.FloatParmTemplate({name: "rim_light_shadow_intensity", label: "Shadow Intensity", num_components: 1, default_value: [1], min: 0, max: 10, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.Base1});
			hou_parm_template4.setConditional(hou.parmCondType.DisableWhen, "{ rim_light_shadow_type == off }");
			hou_parm_template4.setTags({"autoscope": "0000000000000000"});
			hou_parm_template3.addParmTemplate(hou_parm_template4);
			hou_parm_template4 = new hou.FloatParmTemplate({name: "rim_light_shadow_quality", label: "Shadow Quality", num_components: 1, default_value: [1], min: 0.1, max: 10, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.Base1});
			hou_parm_template4.setConditional(hou.parmCondType.DisableWhen, "{ rim_light_shadow_type != depthmap }");
			hou_parm_template4.setTags({"autoscope": "0000000000000000"});
			hou_parm_template3.addParmTemplate(hou_parm_template4);
			hou_parm_template4 = new hou.FloatParmTemplate({name: "rim_light_shadow_softness", label: "Shadow Softness", num_components: 1, default_value: [1], min: 0, max: 1, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.Base1});
			hou_parm_template4.setConditional(hou.parmCondType.DisableWhen, "{ rim_light_shadow_type != depthmap }");
			hou_parm_template4.setTags({"autoscope": "0000000000000000"});
			hou_parm_template3.addParmTemplate(hou_parm_template4);
			hou_parm_template4 = new hou.FloatParmTemplate({name: "rim_light_shadow_blur", label: "Shadow Blur", num_components: 1, default_value: [0], min: 0, max: 1, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.Base1});
			hou_parm_template4.setConditional(hou.parmCondType.DisableWhen, "{ rim_light_shadow_type != depthmap }");
			hou_parm_template4.setTags({"autoscope": "0000000000000000"});
			hou_parm_template3.addParmTemplate(hou_parm_template4);
			hou_parm_template4 = new hou.ToggleParmTemplate({name: "rim_light_shadow_transparent", label: "Transparent Shadows", default_value: true, default_expression: "on", default_expression_language: hou.scriptLanguage.Hscript});
			hou_parm_template4.setConditional(hou.parmCondType.DisableWhen, "{ rim_light_shadow_type == off }");
			hou_parm_template4.setTags({"autoscope": "0000000000000000"});
			hou_parm_template3.addParmTemplate(hou_parm_template4);
			hou_parm_template4 = new hou.FolderParmTemplate({name: "rim_light_folder5_1", label: "Depth Map Options", folder_type: hou.folderType.Tabs, default_value: 0, ends_tab_group: false});
			hou_parm_template5 = new hou.ToggleParmTemplate({name: "rim_light_render_shadowmap", label: "Auto-generate Shadow Map", default_value: true, default_expression: "on", default_expression_language: hou.scriptLanguage.Hscript});
			hou_parm_template5.setConditional(hou.parmCondType.DisableWhen, "{ rim_light_shadow_type != depthmap }");
			hou_parm_template5.setTags({"autoscope": "0000000000000000"});
			hou_parm_template4.addParmTemplate(hou_parm_template5);
			hou_parm_template5 = new hou.LabelParmTemplate({name: "labelparm3", label: "Field Of View", column_labels: ["See spot light options (in light tab) for view controls"]});
			hou_parm_template5.setTags({"autoscope": "0000000000000000"});
			hou_parm_template4.addParmTemplate(hou_parm_template5);
			hou_parm_template5 = new hou.StringParmTemplate({name: "rim_light_shadowmap_file", label: "Shadow Map", num_components: 1, default_value: ["$HIP/$OS-rim.rat"], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.FileReference, file_type: hou.fileType.Image, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.StringReplace});
			hou_parm_template5.setConditional(hou.parmCondType.DisableWhen, "{ rim_light_shadow_type != depthmap }");
			hou_parm_template5.setTags({"autoscope": "0000000000000000"});
			hou_parm_template4.addParmTemplate(hou_parm_template5);
			hou_parm_template5 = new hou.IntParmTemplate({name: "rim_light_res", label: "Resolution", num_components: 2, default_value: [512, 512], min: null, max: 1, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.XYZW, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal, menu_use_token: false});
			hou_parm_template5.setConditional(hou.parmCondType.DisableWhen, "{ rim_light_shadow_type != depthmap }");
			hou_parm_template5.setJoinWithNext(true);
			hou_parm_template5.setTags({"autoscope": "0000000000000000", "spare_category": "View"});
			hou_parm_template4.addParmTemplate(hou_parm_template5);
			hou_parm_template5 = new hou.MenuParmTemplate({name: "rim_light_shadowmap_resMenu", label: "Choose Resolution", menu_items: ["128", "256", "512", "1024", "4096"], menu_labels: ["Tiny (128x128)", "Small (256x256)", "Normal (512x512)", "Large (1024x1024)", "Huge (4096)"], default_value: 4, icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Mini, menu_use_token: false, is_button_strip: false, strip_uses_icons: false});
			hou_parm_template5.setConditional(hou.parmCondType.DisableWhen, "{ rim_light_shadow_type != depthmap }");
			hou_parm_template5.hideLabel(true);
			hou_parm_template5.setTags({"autoscope": "0000000000000000", "spare_category": "View"});
			hou_parm_template4.addParmTemplate(hou_parm_template5);
			hou_parm_template5 = new hou.IntParmTemplate({name: "rim_light_shadowmap_samples", label: "Pixel Samples", num_components: 2, default_value: [1, 1], min: 1, max: 32, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.XYZW, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal, menu_use_token: false});
			hou_parm_template5.setConditional(hou.parmCondType.DisableWhen, "{ rim_light_shadow_type != depthmap } { rim_light_shadow_transparent != 1 }");
			hou_parm_template5.setTags({"autoscope": "0000000000000000"});
			hou_parm_template4.addParmTemplate(hou_parm_template5);
			hou_parm_template5 = new hou.FloatParmTemplate({name: "rim_light_near", label: "Near Clipping", num_components: 1, default_value: [0.01], min: 0, max: 10, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.Base1});
			hou_parm_template5.setTags({"autoscope": "0000000000000000", "spare_category": "View"});
			hou_parm_template4.addParmTemplate(hou_parm_template5);
			hou_parm_template5 = new hou.FloatParmTemplate({name: "rim_light_far", label: "Far Clipping", num_components: 1, default_value: [1000], min: 0, max: 10, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.Base1});
			hou_parm_template5.setTags({"autoscope": "0000000000000000", "spare_category": "View"});
			hou_parm_template4.addParmTemplate(hou_parm_template5);
			hou_parm_template5 = new hou.ToggleParmTemplate({name: "rim_light_allowmotionblur", label: "Depth Map Motion Blur", default_value: false, default_expression: "off", default_expression_language: hou.scriptLanguage.Hscript});
			hou_parm_template5.setConditional(hou.parmCondType.DisableWhen, "{ rim_light_shadow_type != depthmap }");
			hou_parm_template5.setTags({"autoscope": "0000000000000000"});
			hou_parm_template4.addParmTemplate(hou_parm_template5);
			hou_parm_template3.addParmTemplate(hou_parm_template4);
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template2 = new hou.FolderParmTemplate({name: "folder0_3", label: "Bounce Light", folder_type: hou.folderType.Tabs, default_value: 0, ends_tab_group: false});
			hou_parm_template3 = new hou.ToggleParmTemplate({name: "bounce_light_light_enable", label: "Light Enabled", default_value: false, default_expression: "off", default_expression_language: hou.scriptLanguage.Hscript});
			hou_parm_template3.setConditional(hou.parmCondType.DisableWhen, "{ light_enable == 0 }");
			hou_parm_template3.setTags({"autoscope": "0000000000000000"});
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template3 = new hou.ToggleParmTemplate({name: "show_bounce_direction", label: "Show Direction Manipulator", default_value: true});
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template3 = new hou.FloatParmTemplate({name: "bounce_direction_r", label: "Direction To Light", num_components: 3, default_value: [75, 180, 0], min: 0, max: 360, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.XYZW});
			hou_parm_template3.setTags({"autoscope": "1110000000000000"});
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template3 = new hou.FloatParmTemplate({name: "bounce_light_l_t", label: "Translate", num_components: 3, default_value: [0, 0, 5], min: null, max: 1, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.XYZW});
			hou_parm_template3.setTags({"autoscope": "1110000000000000"});
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template3 = new hou.FloatParmTemplate({name: "bounce_light_l_r", label: "Rotate", num_components: 3, default_value: [0, 0, 0], min: 0, max: 360, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.XYZW});
			hou_parm_template3.setTags({"autoscope": "1110000000000000"});
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template3 = new hou.FolderParmTemplate({name: "bounce_light_folder0", label: "Light", folder_type: hou.folderType.Tabs, default_value: 0, ends_tab_group: false});
			hou_parm_template4 = new hou.MenuParmTemplate({name: "bounce_light_light_type", label: "Light Type", menu_items: ["point", "spot", "distant", "area"], menu_labels: ["Point Light", "Spot Light", "Distant Light", "Area Light"], default_value: 2, icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal, menu_use_token: false, is_button_strip: false, strip_uses_icons: false});
			hou_parm_template4.setConditional(hou.parmCondType.DisableWhen, "{ bounce_light_light_enable == 0 } { light_enable == 0 }");
			hou_parm_template4.setTags({"autoscope": "0000000000000000"});
			hou_parm_template3.addParmTemplate(hou_parm_template4);
			hou_parm_template4 = new hou.FloatParmTemplate({name: "bounce_light_light_color", label: "Light Color", num_components: 3, default_value: [0.3, 0.3, 0.3], min: 0, max: 1, min_is_strict: false, max_is_strict: false, look: hou.parmLook.ColorSquare, naming_scheme: hou.parmNamingScheme.RGBA});
			hou_parm_template4.setConditional(hou.parmCondType.DisableWhen, "{ bounce_light_light_enable == 0 } { light_enable == 0 }");
			hou_parm_template4.setTags({"autoscope": "0000000000000000"});
			hou_parm_template3.addParmTemplate(hou_parm_template4);
			hou_parm_template4 = new hou.FloatParmTemplate({name: "bounce_light_light_intensity", label: "Light Intensity", num_components: 1, default_value: [1], min: 0, max: 10, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.Base1});
			hou_parm_template4.setConditional(hou.parmCondType.DisableWhen, "{ bounce_light_light_enable == 0 } { light_enable == 0 }");
			hou_parm_template4.setTags({"autoscope": "1000000000000000"});
			hou_parm_template3.addParmTemplate(hou_parm_template4);
			hou_parm_template4 = new hou.ToggleParmTemplate({name: "bounce_light_light_contribdiff", label: "Diffuse contribution", default_value: true, default_expression: "on", default_expression_language: hou.scriptLanguage.Hscript});
			hou_parm_template4.setConditional(hou.parmCondType.DisableWhen, "{ bounce_light_light_enable == 0 } { light_enable == 0 }");
			hou_parm_template4.setTags({"autoscope": "0000000000000000"});
			hou_parm_template3.addParmTemplate(hou_parm_template4);
			hou_parm_template4 = new hou.ToggleParmTemplate({name: "bounce_light_light_contribspec", label: "Specular contribution", default_value: false, default_expression: "off", default_expression_language: hou.scriptLanguage.Hscript});
			hou_parm_template4.setConditional(hou.parmCondType.DisableWhen, "{ bounce_light_light_enable == 0 } { light_enable == 0 }");
			hou_parm_template4.setTags({"autoscope": "0000000000000000"});
			hou_parm_template3.addParmTemplate(hou_parm_template4);
			hou_parm_template4 = new hou.MenuParmTemplate({name: "bounce_light_atten_type", label: "Attenuation", menu_items: ["none", "half", "physical", "quadratic"], menu_labels: ["No Attenuation", "Half Distance Attenuation", "Physically Correct", "Quadratic"], default_value: 3, icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal, menu_use_token: false, is_button_strip: false, strip_uses_icons: false});
			hou_parm_template4.setConditional(hou.parmCondType.DisableWhen, "{ bounce_light_light_enable == 0 } { light_enable == 0 }");
			hou_parm_template4.setTags({"autoscope": "0000000000000000"});
			hou_parm_template3.addParmTemplate(hou_parm_template4);
			hou_parm_template4 = new hou.FloatParmTemplate({name: "bounce_light_atten_dist", label: "Attenuation Distance", num_components: 1, default_value: [5], min: 0.01, max: 1000000.0, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.Base1});
			hou_parm_template4.setConditional(hou.parmCondType.DisableWhen, "{ bounce_light_atten_type != half }");
			hou_parm_template4.setTags({"autoscope": "0000000000000000"});
			hou_parm_template3.addParmTemplate(hou_parm_template4);
			hou_parm_template4 = new hou.FloatParmTemplate({name: "bounce_light_atten_0", label: "Constant Coefficient", num_components: 1, default_value: [0], min: 0, max: 10, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.Base1});
			hou_parm_template4.setConditional(hou.parmCondType.DisableWhen, "{ bounce_light_atten_type != quadratic }");
			hou_parm_template4.setTags({"autoscope": "0000000000000000"});
			hou_parm_template3.addParmTemplate(hou_parm_template4);
			hou_parm_template4 = new hou.FloatParmTemplate({name: "bounce_light_atten_1", label: "Linear Coefficient", num_components: 1, default_value: [1], min: 0, max: 10, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.Base1});
			hou_parm_template4.setConditional(hou.parmCondType.DisableWhen, "{ bounce_light_atten_type != quadratic }");
			hou_parm_template4.setTags({"autoscope": "0000000000000000"});
			hou_parm_template3.addParmTemplate(hou_parm_template4);
			hou_parm_template4 = new hou.FloatParmTemplate({name: "bounce_light_atten_2", label: "Quadric Coefficient", num_components: 1, default_value: [0], min: 0, max: 10, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.Base1});
			hou_parm_template4.setConditional(hou.parmCondType.DisableWhen, "{ bounce_light_atten_type != quadratic }");
			hou_parm_template4.setTags({"autoscope": "0000000000000000"});
			hou_parm_template3.addParmTemplate(hou_parm_template4);
			hou_parm_template4 = new hou.FolderParmTemplate({name: "bounce_light_folder2", label: "Spot Light Options", folder_type: hou.folderType.Tabs, default_value: 0, ends_tab_group: false});
			hou_parm_template5 = new hou.FloatParmTemplate({name: "bounce_light_coneangle", label: "Cone Angle", num_components: 1, default_value: [45], min: 0, max: 180, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Angle, naming_scheme: hou.parmNamingScheme.Base1});
			hou_parm_template5.setConditional(hou.parmCondType.DisableWhen, "{ bounce_light_light_type != spot }");
			hou_parm_template5.setTags({"autoscope": "0000000000000000"});
			hou_parm_template4.addParmTemplate(hou_parm_template5);
			hou_parm_template5 = new hou.FloatParmTemplate({name: "bounce_light_conedelta", label: "Cone Delta", num_components: 1, default_value: [10], min: 0, max: 180, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Angle, naming_scheme: hou.parmNamingScheme.Base1});
			hou_parm_template5.setConditional(hou.parmCondType.DisableWhen, "{ bounce_light_light_type != spot }");
			hou_parm_template5.setTags({"autoscope": "0000000000000000"});
			hou_parm_template4.addParmTemplate(hou_parm_template5);
			hou_parm_template5 = new hou.FloatParmTemplate({name: "bounce_light_coneroll", label: "Cone Rolloff", num_components: 1, default_value: [1], min: 0.001, max: 10, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.Base1});
			hou_parm_template5.setConditional(hou.parmCondType.DisableWhen, "{ bounce_light_light_type != spot }");
			hou_parm_template5.setTags({"autoscope": "0000000000000000"});
			hou_parm_template4.addParmTemplate(hou_parm_template5);
			hou_parm_template5 = new hou.StringParmTemplate({name: "bounce_light_projmap", label: "Projection Map", num_components: 1, default_value: [""], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.FileReference, file_type: hou.fileType.Image, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.StringReplace});
			hou_parm_template5.setTags({"autoscope": "0000000000000000"});
			hou_parm_template4.addParmTemplate(hou_parm_template5);
			hou_parm_template5 = new hou.ToggleParmTemplate({name: "bounce_light_light_conefov", label: "Use cone angle for field of view", default_value: true, default_expression: "on", default_expression_language: hou.scriptLanguage.Hscript});
			hou_parm_template5.setConditional(hou.parmCondType.DisableWhen, "{ bounce_light_light_type != spot }");
			hou_parm_template5.setTags({"autoscope": "0000000000000000"});
			hou_parm_template4.addParmTemplate(hou_parm_template5);
			hou_parm_template5 = new hou.FloatParmTemplate({name: "bounce_light_light_fov", label: "Projection Angle", num_components: 1, default_value: [45], min: 0.05, max: 90, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.Base1});
			hou_parm_template5.setConditional(hou.parmCondType.DisableWhen, "{ bounce_light_light_conefov != 0 bounce_light_light_type == spot } { bounce_light_light_type == distant }");
			hou_parm_template5.setTags({"autoscope": "0000000000000000"});
			hou_parm_template4.addParmTemplate(hou_parm_template5);
			hou_parm_template5 = new hou.FloatParmTemplate({name: "bounce_light_orthowidth", label: "Orthographic Width", num_components: 1, default_value: [2], min: 1, max: 10, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.Base1});
			hou_parm_template5.setConditional(hou.parmCondType.DisableWhen, "{ bounce_light_light_type != distant }");
			hou_parm_template5.setTags({"autoscope": "0000000000000000"});
			hou_parm_template4.addParmTemplate(hou_parm_template5);
			hou_parm_template5 = new hou.ToggleParmTemplate({name: "bounce_light_clampprojmap", label: "Clamp Projected Map To Frustum", default_value: false, default_expression: "off", default_expression_language: hou.scriptLanguage.Hscript});
			hou_parm_template5.setConditional(hou.parmCondType.DisableWhen, "{ bounce_light_projmap == \\\"\\\" }");
			hou_parm_template5.setTags({"autoscope": "0000000000000000"});
			hou_parm_template4.addParmTemplate(hou_parm_template5);
			hou_parm_template3.addParmTemplate(hou_parm_template4);
			hou_parm_template4 = new hou.FolderParmTemplate({name: "bounce_light_folder2_1", label: "Area Light Options", folder_type: hou.folderType.Tabs, default_value: 0, ends_tab_group: false});
			hou_parm_template5 = new hou.MenuParmTemplate({name: "bounce_light_areashape", label: "Area Shape", menu_items: ["line", "grid", "disk", "sphere", "geo", "env"], menu_labels: ["Line/Tube", "Grid", "Disk", "Sphere", "Geometry", "Environment (Deprecated)"], default_value: 1, icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal, menu_use_token: false, is_button_strip: false, strip_uses_icons: false});
			hou_parm_template5.setConditional(hou.parmCondType.DisableWhen, "{ bounce_light_light_type != area }");
			hou_parm_template5.setTags({"autoscope": "0000000000000000"});
			hou_parm_template4.addParmTemplate(hou_parm_template5);
			hou_parm_template5 = new hou.IntParmTemplate({name: "bounce_light_areasamples", label: "Area Samples", num_components: 1, default_value: [16], min: 1, max: 64, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.Base1, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal, menu_use_token: false});
			hou_parm_template5.setConditional(hou.parmCondType.DisableWhen, "{ bounce_light_light_type != area }");
			hou_parm_template5.setTags({"autoscope": "0000000000000000"});
			hou_parm_template4.addParmTemplate(hou_parm_template5);
			hou_parm_template5 = new hou.FloatParmTemplate({name: "bounce_light_areasize", label: "Area Size", num_components: 1, default_value: [1], min: 0, max: 10, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.Base1});
			hou_parm_template5.setConditional(hou.parmCondType.DisableWhen, "{ bounce_light_light_type != area }");
			hou_parm_template5.setTags({"autoscope": "0000000000000000"});
			hou_parm_template4.addParmTemplate(hou_parm_template5);
			hou_parm_template5 = new hou.ToggleParmTemplate({name: "bounce_light_areacosine", label: "Cosine Falloff", default_value: true, default_expression: "on", default_expression_language: hou.scriptLanguage.Hscript});
			hou_parm_template5.setConditional(hou.parmCondType.DisableWhen, "{ bounce_light_light_type != area } { bounce_light_areashape == env }");
			hou_parm_template5.setTags({"autoscope": "0000000000000000"});
			hou_parm_template4.addParmTemplate(hou_parm_template5);
			hou_parm_template5 = new hou.ToggleParmTemplate({name: "bounce_light_areasingle", label: "Single Sided", default_value: false, default_expression: "off", default_expression_language: hou.scriptLanguage.Hscript});
			hou_parm_template5.setConditional(hou.parmCondType.DisableWhen, "{ bounce_light_light_type != area } { bounce_light_areashape == env }");
			hou_parm_template5.setTags({"autoscope": "0000000000000000"});
			hou_parm_template4.addParmTemplate(hou_parm_template5);
			hou_parm_template5 = new hou.ToggleParmTemplate({name: "bounce_light_areafullsphere", label: "Use full sphere for environment", default_value: false, default_expression: "off", default_expression_language: hou.scriptLanguage.Hscript});
			hou_parm_template5.setConditional(hou.parmCondType.DisableWhen, "{ bounce_light_light_type != area } { bounce_light_areashape != env }");
			hou_parm_template5.setTags({"autoscope": "0000000000000000"});
			hou_parm_template4.addParmTemplate(hou_parm_template5);
			hou_parm_template5 = new hou.ToggleParmTemplate({name: "bounce_light_areausemap", label: "Use Area Map", default_value: false, default_expression: "off", default_expression_language: hou.scriptLanguage.Hscript});
			hou_parm_template5.setConditional(hou.parmCondType.DisableWhen, "{ bounce_light_light_type != area } { bounce_light_areashape != env }");
			hou_parm_template5.setTags({"autoscope": "0000000000000000"});
			hou_parm_template4.addParmTemplate(hou_parm_template5);
			hou_parm_template5 = new hou.StringParmTemplate({name: "bounce_light_areamap", label: "Area Map", num_components: 1, default_value: [""], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.FileReference, file_type: hou.fileType.Image, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.StringReplace});
			hou_parm_template5.setConditional(hou.parmCondType.DisableWhen, "{ bounce_light_light_type != area } { bounce_light_areashape != env } { bounce_light_areausemap == 0 }");
			hou_parm_template5.setTags({"autoscope": "0000000000000000"});
			hou_parm_template4.addParmTemplate(hou_parm_template5);
			hou_parm_template3.addParmTemplate(hou_parm_template4);
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template3 = new hou.FolderParmTemplate({name: "bounce_light_folder0_1", label: "Shadows", folder_type: hou.folderType.Tabs, default_value: 0, ends_tab_group: false});
			hou_parm_template4 = new hou.MenuParmTemplate({name: "bounce_light_shadow_type", label: "Shadow Type", menu_items: ["off", "raytrace", "depthmap"], menu_labels: ["No Shadows", "Ray-Traced Shadows", "Depth Map Shadows"], default_value: 1, icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal, menu_use_token: false, is_button_strip: false, strip_uses_icons: false});
			hou_parm_template4.setTags({"autoscope": "0000000000000000"});
			hou_parm_template3.addParmTemplate(hou_parm_template4);
			hou_parm_template4 = new hou.StringParmTemplate({name: "bounce_light_shadowmask", label: "Shadow Mask", num_components: 1, default_value: ["*"], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.NodeReferenceList, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal});
			hou_parm_template4.setConditional(hou.parmCondType.DisableWhen, "{ bounce_light_shadow_type == off }");
			hou_parm_template4.setTags({"autoscope": "0000000000000000", "opfilter": "!!OBJ/GEOMETRY!!", "oprelative": "/obj"});
			hou_parm_template3.addParmTemplate(hou_parm_template4);
			hou_parm_template4 = new hou.FloatParmTemplate({name: "bounce_light_shadow_bias", label: "Shadow Bias", num_components: 1, default_value: [0.05], min: 0, max: 1, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.Base1});
			hou_parm_template4.setConditional(hou.parmCondType.DisableWhen, "{ bounce_light_shadow_type == off }");
			hou_parm_template4.setTags({"autoscope": "0000000000000000"});
			hou_parm_template3.addParmTemplate(hou_parm_template4);
			hou_parm_template4 = new hou.FloatParmTemplate({name: "bounce_light_shadow_intensity", label: "Shadow Intensity", num_components: 1, default_value: [1], min: 0, max: 10, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.Base1});
			hou_parm_template4.setConditional(hou.parmCondType.DisableWhen, "{ bounce_light_shadow_type == off }");
			hou_parm_template4.setTags({"autoscope": "0000000000000000"});
			hou_parm_template3.addParmTemplate(hou_parm_template4);
			hou_parm_template4 = new hou.FloatParmTemplate({name: "bounce_light_shadow_quality", label: "Shadow Quality", num_components: 1, default_value: [1], min: 0.1, max: 10, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.Base1});
			hou_parm_template4.setConditional(hou.parmCondType.DisableWhen, "{ bounce_light_shadow_type != depthmap }");
			hou_parm_template4.setTags({"autoscope": "0000000000000000"});
			hou_parm_template3.addParmTemplate(hou_parm_template4);
			hou_parm_template4 = new hou.FloatParmTemplate({name: "bounce_light_shadow_softness", label: "Shadow Softness", num_components: 1, default_value: [1], min: 0, max: 1, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.Base1});
			hou_parm_template4.setConditional(hou.parmCondType.DisableWhen, "{ bounce_light_shadow_type != depthmap }");
			hou_parm_template4.setTags({"autoscope": "0000000000000000"});
			hou_parm_template3.addParmTemplate(hou_parm_template4);
			hou_parm_template4 = new hou.FloatParmTemplate({name: "bounce_light_shadow_blur", label: "Shadow Blur", num_components: 1, default_value: [0], min: 0, max: 1, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.Base1});
			hou_parm_template4.setConditional(hou.parmCondType.DisableWhen, "{ bounce_light_shadow_type != depthmap }");
			hou_parm_template4.setTags({"autoscope": "0000000000000000"});
			hou_parm_template3.addParmTemplate(hou_parm_template4);
			hou_parm_template4 = new hou.ToggleParmTemplate({name: "bounce_light_shadow_transparent", label: "Transparent Shadows", default_value: true, default_expression: "on", default_expression_language: hou.scriptLanguage.Hscript});
			hou_parm_template4.setConditional(hou.parmCondType.DisableWhen, "{ bounce_light_shadow_type == off }");
			hou_parm_template4.setTags({"autoscope": "0000000000000000"});
			hou_parm_template3.addParmTemplate(hou_parm_template4);
			hou_parm_template4 = new hou.FolderParmTemplate({name: "bounce_light_folder5_1", label: "Depth Map Options", folder_type: hou.folderType.Tabs, default_value: 0, ends_tab_group: false});
			hou_parm_template5 = new hou.ToggleParmTemplate({name: "bounce_light_render_shadowmap", label: "Auto-generate Shadow Map", default_value: true, default_expression: "on", default_expression_language: hou.scriptLanguage.Hscript});
			hou_parm_template5.setConditional(hou.parmCondType.DisableWhen, "{ bounce_light_shadow_type != depthmap }");
			hou_parm_template5.setTags({"autoscope": "0000000000000000"});
			hou_parm_template4.addParmTemplate(hou_parm_template5);
			hou_parm_template5 = new hou.LabelParmTemplate({name: "labelparm4", label: "Field Of View", column_labels: ["See spot light options (in light tab) for view controls"]});
			hou_parm_template5.setTags({"autoscope": "0000000000000000"});
			hou_parm_template4.addParmTemplate(hou_parm_template5);
			hou_parm_template5 = new hou.StringParmTemplate({name: "bounce_light_shadowmap_file", label: "Shadow Map", num_components: 1, default_value: ["$HIP/$OS-bounce.rat"], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.FileReference, file_type: hou.fileType.Image, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.StringReplace});
			hou_parm_template5.setConditional(hou.parmCondType.DisableWhen, "{ bounce_light_shadow_type != depthmap }");
			hou_parm_template5.setTags({"autoscope": "0000000000000000"});
			hou_parm_template4.addParmTemplate(hou_parm_template5);
			hou_parm_template5 = new hou.IntParmTemplate({name: "bounce_light_res", label: "Resolution", num_components: 2, default_value: [512, 512], min: null, max: 1, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.XYZW, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal, menu_use_token: false});
			hou_parm_template5.setConditional(hou.parmCondType.DisableWhen, "{ bounce_light_shadow_type != depthmap }");
			hou_parm_template5.setJoinWithNext(true);
			hou_parm_template5.setTags({"autoscope": "0000000000000000", "spare_category": "View"});
			hou_parm_template4.addParmTemplate(hou_parm_template5);
			hou_parm_template5 = new hou.MenuParmTemplate({name: "bounce_light_shadowmap_resMenu", label: "Choose Resolution", menu_items: ["128", "256", "512", "1024", "4096"], menu_labels: ["Tiny (128x128)", "Small (256x256)", "Normal (512x512)", "Large (1024x1024)", "Huge (4096)"], default_value: 4, icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Mini, menu_use_token: false, is_button_strip: false, strip_uses_icons: false});
			hou_parm_template5.setConditional(hou.parmCondType.DisableWhen, "{ bounce_light_shadow_type != depthmap }");
			hou_parm_template5.hideLabel(true);
			hou_parm_template5.setTags({"autoscope": "0000000000000000", "spare_category": "View"});
			hou_parm_template4.addParmTemplate(hou_parm_template5);
			hou_parm_template5 = new hou.IntParmTemplate({name: "bounce_light_shadowmap_samples", label: "Pixel Samples", num_components: 2, default_value: [1, 1], min: 1, max: 32, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.XYZW, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal, menu_use_token: false});
			hou_parm_template5.setConditional(hou.parmCondType.DisableWhen, "{ bounce_light_shadow_type != depthmap } { bounce_light_shadow_transparent != 1 }");
			hou_parm_template5.setTags({"autoscope": "0000000000000000"});
			hou_parm_template4.addParmTemplate(hou_parm_template5);
			hou_parm_template5 = new hou.FloatParmTemplate({name: "bounce_light_near", label: "Near Clipping", num_components: 1, default_value: [0.01], min: 0, max: 10, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.Base1});
			hou_parm_template5.setTags({"autoscope": "0000000000000000", "spare_category": "View"});
			hou_parm_template4.addParmTemplate(hou_parm_template5);
			hou_parm_template5 = new hou.FloatParmTemplate({name: "bounce_light_far", label: "Far Clipping", num_components: 1, default_value: [1000], min: 0, max: 10, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.Base1});
			hou_parm_template5.setTags({"autoscope": "0000000000000000", "spare_category": "View"});
			hou_parm_template4.addParmTemplate(hou_parm_template5);
			hou_parm_template5 = new hou.ToggleParmTemplate({name: "bounce_light_allowmotionblur", label: "Depth Map Motion Blur", default_value: false, default_expression: "off", default_expression_language: hou.scriptLanguage.Hscript});
			hou_parm_template5.setConditional(hou.parmCondType.DisableWhen, "{ bounce_light_shadow_type != depthmap }");
			hou_parm_template5.setTags({"autoscope": "0000000000000000"});
			hou_parm_template4.addParmTemplate(hou_parm_template5);
			hou_parm_template3.addParmTemplate(hou_parm_template4);
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template_group.append(hou_parm_template);
			hou_parm_template = new hou.FolderParmTemplate({name: "stdswitcher3_2", label: "Subnet", folder_type: hou.folderType.Tabs, default_value: 0, ends_tab_group: false});
			hou_parm_template2 = new hou.StringParmTemplate({name: "label1", label: "Input #1 Label", num_components: 1, default_value: ["Sub-Network Input #1"], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.Regular, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal});
			hou_parm_template2.hide(true);
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template2 = new hou.StringParmTemplate({name: "label2", label: "Input #2 Label", num_components: 1, default_value: ["Sub-Network Input #2"], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.Regular, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal});
			hou_parm_template2.hide(true);
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template2 = new hou.StringParmTemplate({name: "label3", label: "Input #3 Label", num_components: 1, default_value: ["Sub-Network Input #3"], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.Regular, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal});
			hou_parm_template2.hide(true);
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template2 = new hou.StringParmTemplate({name: "label4", label: "Input #4 Label", num_components: 1, default_value: ["Sub-Network Input #4"], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.Regular, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal});
			hou_parm_template2.hide(true);
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template2 = new hou.ToggleParmTemplate({name: "tdisplay", label: "Display", default_value: false});
			hou_parm_template2.hideLabel(true);
			hou_parm_template2.setJoinWithNext(true);
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template2 = new hou.IntParmTemplate({name: "display", label: "Display", num_components: 1, default_value: [1], min: 0, max: 1, min_is_strict: true, max_is_strict: true, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.Base1, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal, menu_use_token: false});
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template2 = new hou.StringParmTemplate({name: "outputobj", label: "Output Transform", num_components: 1, default_value: ["_input1_obj_"], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.NodeReference, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal});
			hou_parm_template2.setTags({"oprelative": "."});
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template2 = new hou.StringParmTemplate({name: "visibleobjects", label: "Visible Children", num_components: 1, default_value: ["*"], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.NodeReferenceList, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.StringReplace});
			hou_parm_template2.setTags({"opfilter": "!!OBJ/SubnetObjects!!", "oprelative": "."});
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template2 = new hou.ToggleParmTemplate({name: "picking", label: "Viewport Selecting Enabled", default_value: true});
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template2 = new hou.StringParmTemplate({name: "pickscript", label: "Select Script", num_components: 1, default_value: [""], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.FileReference, file_type: hou.fileType.Any, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.StringReplace});
			hou_parm_template2.setTags({"filechooser_mode": "read"});
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template2 = new hou.ToggleParmTemplate({name: "caching", label: "Cache Object Transform", default_value: true});
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template2 = new hou.ToggleParmTemplate({name: "use_dcolor", label: "Set Wireframe Color", default_value: true});
			hou_parm_template2.hide(true);
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template2 = new hou.FloatParmTemplate({name: "dcolor", label: "Wireframe Color", num_components: 3, default_value: [1, 1, 1], min: 0, max: 1, min_is_strict: true, max_is_strict: true, look: hou.parmLook.ColorSquare, naming_scheme: hou.parmNamingScheme.RGBA});
			hou_parm_template2.hide(true);
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template_group.append(hou_parm_template);
			
            this.parmTemplateGroup = hou_parm_template_group;
            this.parmTemplateGroup.linkNode(this);
        }
    }
    hou.registerType('OBJECT/Other/three_point_light',_hnt_OBJECT_three_point_light)
    return _hnt_OBJECT_three_point_light
}
        