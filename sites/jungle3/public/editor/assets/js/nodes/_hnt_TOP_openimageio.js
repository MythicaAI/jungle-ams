
export default function (hou) {
    class _hnt_TOP_openimageio extends hou._HoudiniBase {
        static is_root = false;
        static id = 'TOP/Images/openimageio';
        static category = '/TOP';
        static houdiniType = 'openimageio';
        static title = 'OpenImageIO';
        static icon = '/editor/assets/imgs/nodes/_hnt_TOP_openimageio.svg';
        constructor() {
            super();
            this.flags['houdini_type'] = this.__proto__.constructor.houdiniType;
            
            const inputs = ['TOP'];
            const outputs = ['TOP'];

            for(var i=0;i<inputs.length;i++) this.addInput(''+i,inputs[i]);        
            for(var j=0;j<outputs.length;j++) this.addOutput(''+j,outputs[j]);
        }
        parmTemplatesInit() {
            let hou_parm_template_group = new hou.ParmTemplateGroup();
			this.parmTemplateGroup = hou_parm_template_group;
			let hou_parm_template = new hou.FolderParmTemplate({name: "toptabs3", label: "Node", folder_type: hou.folderType.Tabs, default_value: 0, ends_tab_group: false});
			let hou_parm_template2 = new hou.FolderParmTemplate({name: "folder6", label: "Work Items", folder_type: hou.folderType.Collapsible, default_value: 0, ends_tab_group: false});
			hou_parm_template2.setTags({"group_type": "collapsible"});
			let hou_parm_template3 = new hou.MenuParmTemplate({name: "pdg_workitemgeneration", label: "Generate When", menu_items: [], menu_labels: [], default_value: 2, icon_names: [], item_generator_script: "import pdg\nreturn pdg.generateWhenMenu()", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal, menu_use_token: true, is_button_strip: false, strip_uses_icons: false});
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template3 = new hou.MenuParmTemplate({name: "pdg_cachemode", label: "Cache Mode", menu_items: [], menu_labels: [], default_value: 0, icon_names: [], item_generator_script: "import pdg\nreturn pdg.cacheModeMenu()", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal, menu_use_token: true, is_button_strip: false, strip_uses_icons: false});
			hou_parm_template3.setTags({"autoscope": "0000000000000000"});
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template3 = new hou.MenuParmTemplate({name: "pdg_cooktype", label: "Cook Type", menu_items: ["1", "2", "3"], menu_labels: ["In-Process", "Out-of-Process", "Service"], default_value: 2, icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal, menu_use_token: true, is_button_strip: false, strip_uses_icons: false});
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template3 = new hou.MenuParmTemplate({name: "pdg_useserviceblock", label: "Run on Service Block", menu_items: ["0", "1", "2"], menu_labels: ["Never", "If Service Name Matches", "Always"], default_value: 1, icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal, menu_use_token: false, is_button_strip: false, strip_uses_icons: false});
			hou_parm_template3.setConditional(hou.parmCondType.DisableWhen, "{ pdg_cooktype != 3 }");
			hou_parm_template3.setScriptCallbackLanguage(hou.scriptLanguage.Python);
			hou_parm_template3.setTags({"script_callback_language": "python"});
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template3 = new hou.StringParmTemplate({name: "pdg_servicename", label: "Service Name", num_components: 1, default_value: ["pythonscript"], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.Regular, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "from top import serviceutil\nreturn serviceutil.serviceNamesMenu(kwargs['node'])", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.StringReplace});
			hou_parm_template3.setConditional(hou.parmCondType.DisableWhen, "{ pdg_cooktype != 3 }");
			hou_parm_template3.setScriptCallbackLanguage(hou.scriptLanguage.Python);
			hou_parm_template3.setTags({"script_callback_language": "python"});
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template3 = new hou.SeparatorParmTemplate({name: "sepparm"});
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template3 = new hou.MenuParmTemplate({name: "batchmode", label: "Batch Mode", menu_items: ["0", "1"], menu_labels: ["Off", "All Items in One Batch"], default_value: 0, icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal, menu_use_token: false, is_button_strip: false, strip_uses_icons: false});
			hou_parm_template3.setScriptCallbackLanguage(hou.scriptLanguage.Python);
			hou_parm_template3.setTags({"script_callback_language": "python"});
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template3 = new hou.MenuParmTemplate({name: "cookwhen", label: "Cook Batch When", menu_items: ["0", "1"], menu_labels: ["All Items are Ready", "First Item is Ready"], default_value: 0, icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal, menu_use_token: false, is_button_strip: false, strip_uses_icons: false});
			hou_parm_template3.setConditional(hou.parmCondType.DisableWhen, "{ batchmode == 0 }");
			hou_parm_template3.setScriptCallbackLanguage(hou.scriptLanguage.Python);
			hou_parm_template3.setTags({"script_callback_language": "python"});
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template2 = new hou.FolderParmTemplate({name: "folder2", label: "Input", folder_type: hou.folderType.Collapsible, default_value: 0, ends_tab_group: false});
			hou_parm_template2.setConditional(hou.parmCondType.DisableWhen, "{ enablecustomargs == 1 }");
			hou_parm_template2.setTags({"group_type": "collapsible"});
			hou_parm_template3 = new hou.MenuParmTemplate({name: "inputsource", label: "Input Source", menu_items: ["0", "1"], menu_labels: ["Upstream Output Files", "Custom File Path"], default_value: 0, icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal, menu_use_token: false, is_button_strip: false, strip_uses_icons: false});
			hou_parm_template3.setScriptCallbackLanguage(hou.scriptLanguage.Python);
			hou_parm_template3.setTags({"script_callback": "", "script_callback_language": "python"});
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template3 = new hou.StringParmTemplate({name: "inputfiletag", label: "File Tag", num_components: 1, default_value: ["file/image"], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.Regular, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal});
			hou_parm_template3.setConditional(hou.parmCondType.HideWhen, "{ inputsource != 0 }");
			hou_parm_template3.setScriptCallbackLanguage(hou.scriptLanguage.Python);
			hou_parm_template3.setTags({"script_callback": "", "script_callback_language": "python"});
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template3 = new hou.StringParmTemplate({name: "inputfilepath", label: "File Path", num_components: 1, default_value: ["`@pdg_input`"], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.FileReference, file_type: hou.fileType.Any, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.StringReplace});
			hou_parm_template3.setConditional(hou.parmCondType.HideWhen, "{ inputsource != 1 }");
			hou_parm_template3.setScriptCallbackLanguage(hou.scriptLanguage.Python);
			hou_parm_template3.setTags({"script_callback": "", "script_callback_language": "python"});
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template3 = new hou.MenuParmTemplate({name: "inputsort", label: "Sort Input Files By", menu_items: ["0", "1"], menu_labels: ["None", "Natural Filename"], default_value: 0, icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal, menu_use_token: false, is_button_strip: false, strip_uses_icons: false});
			hou_parm_template3.setScriptCallbackLanguage(hou.scriptLanguage.Python);
			hou_parm_template3.setTags({"script_callback_language": "python"});
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template2 = new hou.FolderParmTemplate({name: "folder3", label: "Output", folder_type: hou.folderType.Collapsible, default_value: 0, ends_tab_group: false});
			hou_parm_template2.setConditional(hou.parmCondType.DisableWhen, "{ enablecustomargs == 1 }");
			hou_parm_template2.setTags({"group_type": "collapsible"});
			hou_parm_template3 = new hou.StringParmTemplate({name: "outputfilepath", label: "Output File Path", num_components: 1, default_value: ["$HIP/images/$HIPNAME.$OS.`@pdg_index`.png"], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.FileReference, file_type: hou.fileType.Any, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.StringReplace});
			hou_parm_template3.setScriptCallbackLanguage(hou.scriptLanguage.Python);
			hou_parm_template3.setTags({"script_callback": "", "script_callback_language": "python"});
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template3 = new hou.StringParmTemplate({name: "outputfiletag", label: "File Tag", num_components: 1, default_value: ["file/image"], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.Regular, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal});
			hou_parm_template3.setScriptCallbackLanguage(hou.scriptLanguage.Python);
			hou_parm_template3.setTags({"script_callback_language": "python"});
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template2 = new hou.FolderParmTemplate({name: "folder9", label: "Image Processing", folder_type: hou.folderType.Collapsible, default_value: 0, ends_tab_group: false});
			hou_parm_template2.setConditional(hou.parmCondType.DisableWhen, "{ enablecustomargs == 1 }");
			hou_parm_template2.setTags({"group_type": "collapsible"});
			hou_parm_template3 = new hou.MenuParmTemplate({name: "operation", label: "Operation", menu_items: ["0", "1", "2", "3", "6", "9", "10", "11"], menu_labels: ["None", "Color Convert", "Color Map", "Resize", "Mosaic", "Text and Shape", "Color Transform", "Custom"], default_value: 0, icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal, menu_use_token: true, is_button_strip: false, strip_uses_icons: false});
			hou_parm_template3.setTags({"autoscope": "0000000000000000"});
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template3 = new hou.FolderParmTemplate({name: "folder0", label: "Color Convert", folder_type: hou.folderType.Simple, default_value: 0, ends_tab_group: false});
			hou_parm_template3.setTags({"group_type": "simple", "sidefx::look": "blank"});
			hou_parm_template3.setTabConditional(hou.parmCondType.HideWhen, "{ operation != 1 }");
			let hou_parm_template4 = new hou.StringParmTemplate({name: "inputcolorspace", label: "Input Color Space", num_components: 1, default_value: [""], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.Regular, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "import toolutils\nimport hou\n\nCUSTOM_FILE = 1\n\ncolorconfigfile = hou.parm('./colorconfigfiletype').eval()\n\nif colorconfigfile == CUSTOM_FILE:\n    return []\nelse:\n    menu = toolutils.ocioColorSpaceMenuList()\n    return menu", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.StringReplace});
			hou_parm_template4.setConditional(hou.parmCondType.DisableWhen, "{ enablecolorconvert == 0 }");
			hou_parm_template4.setScriptCallbackLanguage(hou.scriptLanguage.Python);
			hou_parm_template4.setTags({"script_callback_language": "python"});
			hou_parm_template3.addParmTemplate(hou_parm_template4);
			hou_parm_template4 = new hou.StringParmTemplate({name: "outputcolorspace", label: "Output Color Space", num_components: 1, default_value: [""], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.Regular, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "import toolutils\nimport hou\n\nCUSTOM_FILE = 1\n\ncolorconfigfile = hou.parm('./colorconfigfiletype').eval()\n\nif colorconfigfile == CUSTOM_FILE:\n    return []\nelse:\n    menu = toolutils.ocioColorSpaceMenuList()\n    return menu", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.StringReplace});
			hou_parm_template4.setConditional(hou.parmCondType.DisableWhen, "{ enablecolorconvert == 0 }");
			hou_parm_template4.setScriptCallbackLanguage(hou.scriptLanguage.Python);
			hou_parm_template4.setTags({"script_callback_language": "python"});
			hou_parm_template3.addParmTemplate(hou_parm_template4);
			hou_parm_template4 = new hou.MenuParmTemplate({name: "colorconfigfiletype", label: "Color Config Source", menu_items: ["0", "1"], menu_labels: ["Houdini Configuration", "Custom File Path"], default_value: 0, icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal, menu_use_token: false, is_button_strip: false, strip_uses_icons: false});
			hou_parm_template4.setScriptCallbackLanguage(hou.scriptLanguage.Python);
			hou_parm_template4.setTags({"script_callback_language": "python"});
			hou_parm_template3.addParmTemplate(hou_parm_template4);
			hou_parm_template4 = new hou.StringParmTemplate({name: "customcolorconfig", label: "Custom Config File", num_components: 1, default_value: ["$HFS/packages/ocio/cg-config-v1.0.0_aces-v1.3_ocio-v2.1.ocio"], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.FileReference, file_type: hou.fileType.Any, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.StringReplace});
			hou_parm_template4.setConditional(hou.parmCondType.DisableWhen, "{ colorconfigfiletype == 0 }");
			hou_parm_template4.setTags({"filechooser_pattern": ""});
			hou_parm_template3.addParmTemplate(hou_parm_template4);
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template3 = new hou.FolderParmTemplate({name: "folder1", label: "Color Map", folder_type: hou.folderType.Simple, default_value: 0, ends_tab_group: false});
			hou_parm_template3.setTags({"group_type": "simple", "sidefx::look": "blank"});
			hou_parm_template3.setTabConditional(hou.parmCondType.HideWhen, "{ operation != 2 }");
			hou_parm_template4 = new hou.StringParmTemplate({name: "colormapname", label: "Color Map Name", num_components: 1, default_value: ["viridis"], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.Regular, menu_items: ["magma", "inferno", "plasma", "viridis", "turbo", "blue-red", "spectrum", "heat"], menu_labels: ["magma", "inferno", "plasma", "viridis", "turbo", "blue-red", "spectrum", "heat"], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.StringReplace});
			hou_parm_template4.setConditional(hou.parmCondType.DisableWhen, "{ enablecolormap == 0 }");
			hou_parm_template3.addParmTemplate(hou_parm_template4);
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template3 = new hou.FolderParmTemplate({name: "folder7", label: "Resize", folder_type: hou.folderType.Simple, default_value: 0, ends_tab_group: false});
			hou_parm_template3.setTags({"group_type": "simple", "sidefx::look": "blank"});
			hou_parm_template3.setTabConditional(hou.parmCondType.HideWhen, "{ operation != 3 }");
			hou_parm_template4 = new hou.MenuParmTemplate({name: "resizetype", label: "Resize Type", menu_items: ["0", "1"], menu_labels: ["Absolute (Pixels)", "Relative (Percent)"], default_value: 0, icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal, menu_use_token: false, is_button_strip: false, strip_uses_icons: false});
			hou_parm_template3.addParmTemplate(hou_parm_template4);
			hou_parm_template4 = new hou.IntParmTemplate({name: "resizewidthpixels", label: "Resize Width Pixels", num_components: 1, default_value: [64], min: 0, max: 1000, min_is_strict: true, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.Base1, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal, menu_use_token: false});
			hou_parm_template4.setConditional(hou.parmCondType.DisableWhen, "{ resizetype != 0 }");
			hou_parm_template4.setConditional(hou.parmCondType.HideWhen, "{ resizetype != 0 }");
			hou_parm_template4.setScriptCallbackLanguage(hou.scriptLanguage.Python);
			hou_parm_template4.setTags({"script_callback_language": "python"});
			hou_parm_template3.addParmTemplate(hou_parm_template4);
			hou_parm_template4 = new hou.IntParmTemplate({name: "resizeheightpixels", label: "Resize Height Pixels", num_components: 1, default_value: [64], min: 0, max: 1000, min_is_strict: true, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.Base1, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal, menu_use_token: false});
			hou_parm_template4.setConditional(hou.parmCondType.DisableWhen, "{ resizetype != 0 }");
			hou_parm_template4.setConditional(hou.parmCondType.HideWhen, "{ resizetype != 0 }");
			hou_parm_template4.setScriptCallbackLanguage(hou.scriptLanguage.Python);
			hou_parm_template4.setTags({"script_callback_language": "python"});
			hou_parm_template3.addParmTemplate(hou_parm_template4);
			hou_parm_template4 = new hou.FloatParmTemplate({name: "resizewidthpercent", label: "Resize Width Percent", num_components: 1, default_value: [100], min: 0, max: 300, min_is_strict: true, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.Base1});
			hou_parm_template4.setConditional(hou.parmCondType.DisableWhen, "{ resizetype != 1 }");
			hou_parm_template4.setConditional(hou.parmCondType.HideWhen, "{ resizetype != 1 }");
			hou_parm_template4.setScriptCallbackLanguage(hou.scriptLanguage.Python);
			hou_parm_template4.setTags({"script_callback_language": "python"});
			hou_parm_template3.addParmTemplate(hou_parm_template4);
			hou_parm_template4 = new hou.FloatParmTemplate({name: "resizeheightpercent", label: "Resize Height Percent", num_components: 1, default_value: [100], min: 0, max: 300, min_is_strict: true, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.Base1});
			hou_parm_template4.setConditional(hou.parmCondType.DisableWhen, "{ resizetype != 1 }");
			hou_parm_template4.setConditional(hou.parmCondType.HideWhen, "{ resizetype != 1 }");
			hou_parm_template4.setScriptCallbackLanguage(hou.scriptLanguage.Python);
			hou_parm_template4.setTags({"script_callback_language": "python"});
			hou_parm_template3.addParmTemplate(hou_parm_template4);
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template3 = new hou.FolderParmTemplate({name: "folder13", label: "Mosaic", folder_type: hou.folderType.Simple, default_value: 0, ends_tab_group: false});
			hou_parm_template3.setTags({"group_type": "simple", "sidefx::look": "blank"});
			hou_parm_template3.setTabConditional(hou.parmCondType.HideWhen, "{ operation != 6 }");
			hou_parm_template4 = new hou.IntParmTemplate({name: "mosaicnumtiles", label: "Number of Tiles", num_components: 2, default_value: [2, 2], min: 1, max: 10, min_is_strict: true, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.XYZW, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal, menu_use_token: false});
			hou_parm_template4.setScriptCallbackLanguage(hou.scriptLanguage.Python);
			hou_parm_template4.setTags({"script_callback_language": "python"});
			hou_parm_template3.addParmTemplate(hou_parm_template4);
			hou_parm_template4 = new hou.ToggleParmTemplate({name: "enablemosaictilesize", label: "Enable Tile Size Override", default_value: false});
			hou_parm_template4.hideLabel(true);
			hou_parm_template4.setJoinWithNext(true);
			hou_parm_template4.setScriptCallbackLanguage(hou.scriptLanguage.Python);
			hou_parm_template4.setTags({"script_callback_language": "python"});
			hou_parm_template3.addParmTemplate(hou_parm_template4);
			hou_parm_template4 = new hou.IntParmTemplate({name: "mosaictilesize", label: "Tile Size", num_components: 2, default_value: [320, 240], min: 1, max: 1000, min_is_strict: true, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.XYZW, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal, menu_use_token: false});
			hou_parm_template4.setConditional(hou.parmCondType.DisableWhen, "{ enablemosaictilesize == 0 }");
			hou_parm_template4.setScriptCallbackLanguage(hou.scriptLanguage.Python);
			hou_parm_template4.setTags({"script_callback_language": "python"});
			hou_parm_template3.addParmTemplate(hou_parm_template4);
			hou_parm_template4 = new hou.ToggleParmTemplate({name: "enablemosaicpadding", label: "Enable Tile Padding", default_value: false});
			hou_parm_template4.hideLabel(true);
			hou_parm_template4.setJoinWithNext(true);
			hou_parm_template4.setScriptCallbackLanguage(hou.scriptLanguage.Python);
			hou_parm_template4.setTags({"script_callback_language": "python"});
			hou_parm_template3.addParmTemplate(hou_parm_template4);
			hou_parm_template4 = new hou.IntParmTemplate({name: "mosaicpadding", label: "Padding", num_components: 1, default_value: [10], min: 0, max: 50, min_is_strict: true, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.Base1, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal, menu_use_token: false});
			hou_parm_template4.setConditional(hou.parmCondType.DisableWhen, "{ enablemosaicpadding == 0 }");
			hou_parm_template4.setScriptCallbackLanguage(hou.scriptLanguage.Python);
			hou_parm_template4.setTags({"script_callback_language": "python"});
			hou_parm_template3.addParmTemplate(hou_parm_template4);
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template3 = new hou.FolderParmTemplate({name: "multitextandshapes", label: "Text and Shapes", folder_type: hou.folderType.MultiparmBlock, default_value: 0, ends_tab_group: false});
			hou_parm_template3.setConditional(hou.parmCondType.DisableWhen, "{ operation != 9 }");
			hou_parm_template3.setConditional(hou.parmCondType.HideWhen, "{ operation != 9 }");
			hou_parm_template4 = new hou.MenuParmTemplate({name: "suboperation#", label: "Type", menu_items: ["4", "5", "7", "8"], menu_labels: ["Text", "Box", "Line", "Point"], default_value: 3, icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal, menu_use_token: true, is_button_strip: false, strip_uses_icons: false});
			hou_parm_template4.setTags({"autoscope": "0000000000000000"});
			hou_parm_template3.addParmTemplate(hou_parm_template4);
			hou_parm_template4 = new hou.FolderParmTemplate({name: "folder21_#", label: "Text", folder_type: hou.folderType.Simple, default_value: 0, ends_tab_group: false});
			hou_parm_template4.setTags({"group_type": "simple", "sidefx::look": "blank"});
			hou_parm_template4.setTabConditional(hou.parmCondType.HideWhen, "{ suboperation# != 4 }");
			let hou_parm_template5 = new hou.FolderParmTemplate({name: "folder16_#", label: "Parameters", folder_type: hou.folderType.Collapsible, default_value: 0, ends_tab_group: false});
			hou_parm_template5.setTags({"group_default": "1", "group_type": "collapsible"});
			let hou_parm_template6 = new hou.FolderParmTemplate({name: "folder14_#_2", label: "Layout", folder_type: hou.folderType.Collapsible, default_value: 0, ends_tab_group: false});
			hou_parm_template6.setTags({"group_type": "collapsible"});
			let hou_parm_template7 = new hou.MenuParmTemplate({name: "textpostype#", label: "Units", menu_items: ["0", "1"], menu_labels: ["Absolute (Pixels)", "Relative (Percent)"], default_value: 1, icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal, menu_use_token: false, is_button_strip: false, strip_uses_icons: false});
			hou_parm_template6.addParmTemplate(hou_parm_template7);
			hou_parm_template7 = new hou.IntParmTemplate({name: "textpos#", label: "Position (Pixels)", num_components: 2, default_value: [0, 0], min: null, max: 1, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.XYZW, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal, menu_use_token: false});
			hou_parm_template7.setConditional(hou.parmCondType.HideWhen, "{ textpostype# != 0 }");
			hou_parm_template7.setScriptCallbackLanguage(hou.scriptLanguage.Python);
			hou_parm_template7.setTags({"script_callback_language": "python"});
			hou_parm_template6.addParmTemplate(hou_parm_template7);
			hou_parm_template7 = new hou.FloatParmTemplate({name: "textpospercent#", label: "Position (Percent)", num_components: 2, default_value: [5, 95], min: null, max: 1, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.XYZW});
			hou_parm_template7.setConditional(hou.parmCondType.HideWhen, "{ textpostype# != 1 }");
			hou_parm_template7.setScriptCallbackLanguage(hou.scriptLanguage.Python);
			hou_parm_template7.setTags({"script_callback_language": "python"});
			hou_parm_template6.addParmTemplate(hou_parm_template7);
			hou_parm_template7 = new hou.MenuParmTemplate({name: "textxalign#", label: "Text X-Align", menu_items: ["0", "1", "2"], menu_labels: ["Left", "Right", "Center"], default_value: 0, icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal, menu_use_token: false, is_button_strip: false, strip_uses_icons: false});
			hou_parm_template6.addParmTemplate(hou_parm_template7);
			hou_parm_template7 = new hou.MenuParmTemplate({name: "textyalign#", label: "Text Y-Align", menu_items: ["0", "1", "2", "3"], menu_labels: ["Base", "Top", "Bottom", "Center"], default_value: 0, icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal, menu_use_token: false, is_button_strip: false, strip_uses_icons: false});
			hou_parm_template6.addParmTemplate(hou_parm_template7);
			hou_parm_template5.addParmTemplate(hou_parm_template6);
			hou_parm_template6 = new hou.FolderParmTemplate({name: "folder15_#_2", label: "Style", folder_type: hou.folderType.Collapsible, default_value: 0, ends_tab_group: false});
			hou_parm_template6.setTags({"group_type": "collapsible"});
			hou_parm_template7 = new hou.IntParmTemplate({name: "textsize#", label: "Text Size", num_components: 1, default_value: [30], min: 0, max: 100, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.Base1, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal, menu_use_token: false});
			hou_parm_template7.setScriptCallbackLanguage(hou.scriptLanguage.Python);
			hou_parm_template7.setTags({"script_callback_language": "python"});
			hou_parm_template6.addParmTemplate(hou_parm_template7);
			hou_parm_template7 = new hou.IntParmTemplate({name: "textshadowsize#", label: "Text Shadow Size", num_components: 1, default_value: [2], min: 0, max: 10, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.Base1, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal, menu_use_token: false});
			hou_parm_template7.setScriptCallbackLanguage(hou.scriptLanguage.Python);
			hou_parm_template7.setTags({"script_callback_language": "python"});
			hou_parm_template6.addParmTemplate(hou_parm_template7);
			hou_parm_template7 = new hou.FloatParmTemplate({name: "textcolor#", label: "Text Color", num_components: 4, default_value: [1, 1, 1, 1], min: 0, max: 1, min_is_strict: false, max_is_strict: false, look: hou.parmLook.ColorSquare, naming_scheme: hou.parmNamingScheme.RGBA});
			hou_parm_template7.setScriptCallbackLanguage(hou.scriptLanguage.Python);
			hou_parm_template7.setTags({"script_callback_language": "python"});
			hou_parm_template6.addParmTemplate(hou_parm_template7);
			hou_parm_template7 = new hou.ToggleParmTemplate({name: "enabletextfont#", label: "Enable Text Font", default_value: true});
			hou_parm_template7.hideLabel(true);
			hou_parm_template7.setJoinWithNext(true);
			hou_parm_template7.setScriptCallbackLanguage(hou.scriptLanguage.Python);
			hou_parm_template7.setTags({"script_callback_language": "python"});
			hou_parm_template6.addParmTemplate(hou_parm_template7);
			hou_parm_template7 = new hou.StringParmTemplate({name: "textfontfile#", label: "Font File", num_components: 1, default_value: ["$HFS/houdini/fonts/Lato-Bold.ttf"], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.Regular, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "import os\nhfs = os.environ['HFS']\nfonts = os.listdir(f'{hfs}/houdini/fonts/')\nmenu = []\nfor font in sorted(fonts):\n    menu.append(f'$HFS/houdini/fonts/{font}')\n    menu.append(font)\nreturn menu", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.StringReplace});
			hou_parm_template7.setConditional(hou.parmCondType.DisableWhen, "{ enabletextfont == 0 }");
			hou_parm_template7.setScriptCallbackLanguage(hou.scriptLanguage.Python);
			hou_parm_template7.setTags({"script_callback_language": "python"});
			hou_parm_template6.addParmTemplate(hou_parm_template7);
			hou_parm_template5.addParmTemplate(hou_parm_template6);
			hou_parm_template6 = new hou.StringParmTemplate({name: "text#", label: "Text", num_components: 1, default_value: [""], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.Regular, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal});
			hou_parm_template6.setScriptCallbackLanguage(hou.scriptLanguage.Python);
			hou_parm_template6.setTags({"editor": "1", "editorlines": "5-40", "script_callback_language": "python"});
			hou_parm_template5.addParmTemplate(hou_parm_template6);
			hou_parm_template4.addParmTemplate(hou_parm_template5);
			hou_parm_template3.addParmTemplate(hou_parm_template4);
			hou_parm_template4 = new hou.FolderParmTemplate({name: "folder22_#", label: "Box", folder_type: hou.folderType.Simple, default_value: 0, ends_tab_group: false});
			hou_parm_template4.setTags({"group_type": "simple", "sidefx::look": "blank"});
			hou_parm_template4.setTabConditional(hou.parmCondType.HideWhen, "{ suboperation# != 5 }");
			hou_parm_template5 = new hou.FolderParmTemplate({name: "folder16_#_2", label: "Parameters", folder_type: hou.folderType.Collapsible, default_value: 0, ends_tab_group: false});
			hou_parm_template5.setTags({"group_default": "1", "group_type": "collapsible"});
			hou_parm_template6 = new hou.MenuParmTemplate({name: "boxpostype#", label: "Position Type", menu_items: ["0", "1"], menu_labels: ["Absolute (Pixels)", "Relative (Percent)"], default_value: 0, icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal, menu_use_token: false, is_button_strip: false, strip_uses_icons: false});
			hou_parm_template5.addParmTemplate(hou_parm_template6);
			hou_parm_template6 = new hou.IntParmTemplate({name: "box1pos#", label: "Corner 1 Position (Pixels)", num_components: 2, default_value: [0, 0], min: null, max: 1, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.XYZW, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal, menu_use_token: false});
			hou_parm_template6.setConditional(hou.parmCondType.HideWhen, "{ boxpostype# != 0 }");
			hou_parm_template6.setScriptCallbackLanguage(hou.scriptLanguage.Python);
			hou_parm_template6.setTags({"script_callback_language": "python"});
			hou_parm_template5.addParmTemplate(hou_parm_template6);
			hou_parm_template6 = new hou.IntParmTemplate({name: "box2pos#", label: "Corner 2 Position (Pixels)", num_components: 2, default_value: [0, 0], min: null, max: 1, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.XYZW, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal, menu_use_token: false});
			hou_parm_template6.setConditional(hou.parmCondType.HideWhen, "{ boxpostype# != 0 }");
			hou_parm_template6.setScriptCallbackLanguage(hou.scriptLanguage.Python);
			hou_parm_template6.setTags({"script_callback_language": "python"});
			hou_parm_template5.addParmTemplate(hou_parm_template6);
			hou_parm_template6 = new hou.FloatParmTemplate({name: "box1pospercent#", label: "Corner 1 Position (Percent)", num_components: 2, default_value: [0, 0], min: null, max: 1, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.XYZW});
			hou_parm_template6.setConditional(hou.parmCondType.HideWhen, "{ boxpostype# != 1 }");
			hou_parm_template6.setScriptCallbackLanguage(hou.scriptLanguage.Python);
			hou_parm_template6.setTags({"script_callback_language": "python"});
			hou_parm_template5.addParmTemplate(hou_parm_template6);
			hou_parm_template6 = new hou.FloatParmTemplate({name: "box2pospercent#", label: "Corner 2 Position (Percent)", num_components: 2, default_value: [0, 0], min: null, max: 1, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.XYZW});
			hou_parm_template6.setConditional(hou.parmCondType.HideWhen, "{ boxpostype# != 1 }");
			hou_parm_template6.setScriptCallbackLanguage(hou.scriptLanguage.Python);
			hou_parm_template6.setTags({"script_callback_language": "python"});
			hou_parm_template5.addParmTemplate(hou_parm_template6);
			hou_parm_template6 = new hou.FloatParmTemplate({name: "boxcolor#", label: "Box Color", num_components: 4, default_value: [1, 1, 1, 1], min: 0, max: 1, min_is_strict: false, max_is_strict: false, look: hou.parmLook.ColorSquare, naming_scheme: hou.parmNamingScheme.RGBA});
			hou_parm_template6.setScriptCallbackLanguage(hou.scriptLanguage.Python);
			hou_parm_template6.setTags({"script_callback_language": "python"});
			hou_parm_template5.addParmTemplate(hou_parm_template6);
			hou_parm_template6 = new hou.ToggleParmTemplate({name: "boxfilltoggle#", label: "Fill Box", default_value: true});
			hou_parm_template6.setScriptCallbackLanguage(hou.scriptLanguage.Python);
			hou_parm_template6.setTags({"script_callback_language": "python"});
			hou_parm_template5.addParmTemplate(hou_parm_template6);
			hou_parm_template4.addParmTemplate(hou_parm_template5);
			hou_parm_template3.addParmTemplate(hou_parm_template4);
			hou_parm_template4 = new hou.FolderParmTemplate({name: "folder24_#", label: "Line", folder_type: hou.folderType.Simple, default_value: 0, ends_tab_group: false});
			hou_parm_template4.setTags({"group_type": "simple", "sidefx::look": "blank"});
			hou_parm_template4.setTabConditional(hou.parmCondType.HideWhen, "{ suboperation# != 7 }");
			hou_parm_template5 = new hou.FolderParmTemplate({name: "folder16_#_3", label: "Parameters", folder_type: hou.folderType.Collapsible, default_value: 0, ends_tab_group: false});
			hou_parm_template5.setTags({"group_default": "1", "group_type": "collapsible"});
			hou_parm_template6 = new hou.FloatParmTemplate({name: "linecolor#", label: "Line Color", num_components: 4, default_value: [1, 1, 1, 1], min: 0, max: 1, min_is_strict: false, max_is_strict: false, look: hou.parmLook.ColorSquare, naming_scheme: hou.parmNamingScheme.RGBA});
			hou_parm_template6.setScriptCallbackLanguage(hou.scriptLanguage.Python);
			hou_parm_template6.setTags({"script_callback_language": "python"});
			hou_parm_template5.addParmTemplate(hou_parm_template6);
			hou_parm_template6 = new hou.MenuParmTemplate({name: "linepostype#", label: "Position Type", menu_items: ["0", "1"], menu_labels: ["Absolute (Pixels)", "Relative (Percent)"], default_value: 0, icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal, menu_use_token: false, is_button_strip: false, strip_uses_icons: false});
			hou_parm_template5.addParmTemplate(hou_parm_template6);
			hou_parm_template6 = new hou.FolderParmTemplate({name: "vertices#", label: "Vertices", folder_type: hou.folderType.MultiparmBlock, default_value: 0, ends_tab_group: false});
			hou_parm_template6.setScriptCallbackLanguage(hou.scriptLanguage.Python);
			hou_parm_template6.setTags({"autoscope": "0000000000000000", "autoselect": "0000000000000000", "script_callback_language": "python"});
			hou_parm_template7 = new hou.IntParmTemplate({name: "linepos#_#", label: "Position (Pixels)", num_components: 2, default_value: [0, 0], min: null, max: 1, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.XYZW, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal, menu_use_token: false});
			hou_parm_template7.setConditional(hou.parmCondType.HideWhen, "{ linepostype# != 0 }");
			hou_parm_template7.setScriptCallbackLanguage(hou.scriptLanguage.Python);
			hou_parm_template7.setTags({"script_callback_language": "python"});
			hou_parm_template6.addParmTemplate(hou_parm_template7);
			hou_parm_template7 = new hou.FloatParmTemplate({name: "linepospercent#_#", label: "Position (Percent)", num_components: 2, default_value: [0, 0], min: null, max: 1, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.XYZW});
			hou_parm_template7.setConditional(hou.parmCondType.HideWhen, "{ linepostype# != 1 }");
			hou_parm_template7.setScriptCallbackLanguage(hou.scriptLanguage.Python);
			hou_parm_template7.setTags({"script_callback_language": "python"});
			hou_parm_template6.addParmTemplate(hou_parm_template7);
			hou_parm_template5.addParmTemplate(hou_parm_template6);
			hou_parm_template4.addParmTemplate(hou_parm_template5);
			hou_parm_template3.addParmTemplate(hou_parm_template4);
			hou_parm_template4 = new hou.FolderParmTemplate({name: "folder25_#", label: "Point", folder_type: hou.folderType.Simple, default_value: 0, ends_tab_group: false});
			hou_parm_template4.setTags({"group_type": "simple", "sidefx::look": "blank"});
			hou_parm_template4.setTabConditional(hou.parmCondType.HideWhen, "{ suboperation# != 8 }");
			hou_parm_template5 = new hou.FolderParmTemplate({name: "folder16_#_4", label: "Parameters", folder_type: hou.folderType.Collapsible, default_value: 0, ends_tab_group: false});
			hou_parm_template5.setTags({"group_default": "1", "group_type": "collapsible"});
			hou_parm_template6 = new hou.FloatParmTemplate({name: "pointcolor#", label: "Point Color", num_components: 4, default_value: [1, 1, 1, 1], min: 0, max: 1, min_is_strict: false, max_is_strict: false, look: hou.parmLook.ColorSquare, naming_scheme: hou.parmNamingScheme.RGBA});
			hou_parm_template6.setScriptCallbackLanguage(hou.scriptLanguage.Python);
			hou_parm_template6.setTags({"script_callback_language": "python"});
			hou_parm_template5.addParmTemplate(hou_parm_template6);
			hou_parm_template6 = new hou.MenuParmTemplate({name: "pointpostype#", label: "Position Type", menu_items: ["0", "1"], menu_labels: ["Absolute (Pixels)", "Relative (Percent)"], default_value: 0, icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal, menu_use_token: false, is_button_strip: false, strip_uses_icons: false});
			hou_parm_template5.addParmTemplate(hou_parm_template6);
			hou_parm_template6 = new hou.FolderParmTemplate({name: "coordinates#", label: "Coordinates", folder_type: hou.folderType.MultiparmBlock, default_value: 0, ends_tab_group: false});
			hou_parm_template6.setScriptCallbackLanguage(hou.scriptLanguage.Python);
			hou_parm_template6.setTags({"autoscope": "0000000000000000", "autoselect": "0000000000000000", "script_callback_language": "python"});
			hou_parm_template7 = new hou.IntParmTemplate({name: "pointpos#_#", label: "Position (Pixels)", num_components: 2, default_value: [0, 0], min: null, max: 1, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.XYZW, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal, menu_use_token: false});
			hou_parm_template7.setConditional(hou.parmCondType.HideWhen, "{ pointpostype# != 0 }");
			hou_parm_template7.setScriptCallbackLanguage(hou.scriptLanguage.Python);
			hou_parm_template7.setTags({"script_callback_language": "python"});
			hou_parm_template6.addParmTemplate(hou_parm_template7);
			hou_parm_template7 = new hou.FloatParmTemplate({name: "pointpospercent#_#", label: "Position (Percent)", num_components: 2, default_value: [0, 0], min: null, max: 1, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.XYZW});
			hou_parm_template7.setConditional(hou.parmCondType.HideWhen, "{ pointpostype# != 1 }");
			hou_parm_template7.setScriptCallbackLanguage(hou.scriptLanguage.Python);
			hou_parm_template7.setTags({"script_callback_language": "python"});
			hou_parm_template6.addParmTemplate(hou_parm_template7);
			hou_parm_template5.addParmTemplate(hou_parm_template6);
			hou_parm_template4.addParmTemplate(hou_parm_template5);
			hou_parm_template3.addParmTemplate(hou_parm_template4);
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template3 = new hou.FolderParmTemplate({name: "colortransformfolder", label: "Color Transform", folder_type: hou.folderType.Simple, default_value: 0, ends_tab_group: false});
			hou_parm_template3.setConditional(hou.parmCondType.DisableWhen, "{ operation != 10 }");
			hou_parm_template3.setConditional(hou.parmCondType.HideWhen, "{ operation != 10 }");
			hou_parm_template3.setTags({"group_type": "simple", "sidefx::look": "blank"});
			hou_parm_template4 = new hou.FolderParmTemplate({name: "ociolookfolder", label: "OCIO Look", folder_type: hou.folderType.Simple, default_value: 0, ends_tab_group: false});
			hou_parm_template4.setTags({"group_type": "simple", "sidefx::look": "blank"});
			hou_parm_template5 = new hou.ToggleParmTemplate({name: "enableociolook", label: "OCIO Look", default_value: true});
			hou_parm_template5.setScriptCallbackLanguage(hou.scriptLanguage.Python);
			hou_parm_template5.setTags({"script_callback_language": "python"});
			hou_parm_template4.addParmTemplate(hou_parm_template5);
			hou_parm_template5 = new hou.StringParmTemplate({name: "lookname", label: "Look Name", num_components: 1, default_value: [""], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.Regular, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal});
			hou_parm_template5.setConditional(hou.parmCondType.DisableWhen, "{ enableociolook == 0 }");
			hou_parm_template5.setScriptCallbackLanguage(hou.scriptLanguage.Python);
			hou_parm_template5.setTags({"editor": "0", "script_callback_language": "python"});
			hou_parm_template4.addParmTemplate(hou_parm_template5);
			hou_parm_template3.addParmTemplate(hou_parm_template4);
			hou_parm_template4 = new hou.FolderParmTemplate({name: "ociodisplayfolder", label: "OCIO Display", folder_type: hou.folderType.Simple, default_value: 0, ends_tab_group: false});
			hou_parm_template4.setTags({"group_type": "simple", "sidefx::look": "blank"});
			hou_parm_template5 = new hou.ToggleParmTemplate({name: "enableociodisplay", label: "OCIO Display", default_value: true});
			hou_parm_template5.setScriptCallbackLanguage(hou.scriptLanguage.Python);
			hou_parm_template5.setTags({"script_callback_language": "python"});
			hou_parm_template4.addParmTemplate(hou_parm_template5);
			hou_parm_template5 = new hou.StringParmTemplate({name: "displayname", label: "Display Name", num_components: 1, default_value: [""], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.Regular, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal});
			hou_parm_template5.setConditional(hou.parmCondType.DisableWhen, "{ enableociodisplay == 0 }");
			hou_parm_template5.setScriptCallbackLanguage(hou.scriptLanguage.Python);
			hou_parm_template5.setTags({"script_callback_language": "python"});
			hou_parm_template4.addParmTemplate(hou_parm_template5);
			hou_parm_template5 = new hou.StringParmTemplate({name: "viewname", label: "View Name", num_components: 1, default_value: [""], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.Regular, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal});
			hou_parm_template5.setConditional(hou.parmCondType.DisableWhen, "{ enableociodisplay == 0 }");
			hou_parm_template5.setScriptCallbackLanguage(hou.scriptLanguage.Python);
			hou_parm_template5.setTags({"script_callback_language": "python"});
			hou_parm_template4.addParmTemplate(hou_parm_template5);
			hou_parm_template3.addParmTemplate(hou_parm_template4);
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template2 = new hou.StringParmTemplate({name: "customoperation", label: "Custom Operation", num_components: 1, default_value: [""], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.Regular, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal});
			hou_parm_template2.setConditional(hou.parmCondType.HideWhen, "{ operation != 11 }");
			hou_parm_template2.setScriptCallbackLanguage(hou.scriptLanguage.Python);
			hou_parm_template2.setTags({"script_callback_language": "python"});
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template2 = new hou.FolderParmTemplate({name: "folder4", label: "Subimages", folder_type: hou.folderType.Collapsible, default_value: 0, ends_tab_group: false});
			hou_parm_template2.setConditional(hou.parmCondType.DisableWhen, "{ enablecustomargs == 1 }");
			hou_parm_template2.setTags({"group_type": "collapsible"});
			hou_parm_template3 = new hou.ToggleParmTemplate({name: "enablemipmap", label: "Enable Mipmap", default_value: false});
			hou_parm_template3.setScriptCallbackLanguage(hou.scriptLanguage.Python);
			hou_parm_template3.setTags({"script_callback_language": "python"});
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template3 = new hou.FolderParmTemplate({name: "folder11", label: "Subimages", folder_type: hou.folderType.Simple, default_value: 0, ends_tab_group: false});
			hou_parm_template3.setConditional(hou.parmCondType.DisableWhen, "{ operation != 1 operation != 2 operation != 5 }");
			hou_parm_template3.setTags({"group_type": "simple", "sidefx::look": "blank"});
			hou_parm_template4 = new hou.MenuParmTemplate({name: "subimages", label: "Subimages", menu_items: ["0", "1", "2"], menu_labels: ["Default", "All Subimages", "Specific Subimages"], default_value: 0, icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal, menu_use_token: false, is_button_strip: false, strip_uses_icons: false});
			hou_parm_template4.setScriptCallbackLanguage(hou.scriptLanguage.Python);
			hou_parm_template4.setTags({"script_callback_language": "python"});
			hou_parm_template3.addParmTemplate(hou_parm_template4);
			hou_parm_template4 = new hou.FolderParmTemplate({name: "selectedsubimages", label: "Selected Subimages", folder_type: hou.folderType.MultiparmBlock, default_value: 0, ends_tab_group: false});
			hou_parm_template4.setConditional(hou.parmCondType.DisableWhen, "{ subimages != 2 }");
			hou_parm_template5 = new hou.SeparatorParmTemplate({name: "sepparm6_#"});
			hou_parm_template4.addParmTemplate(hou_parm_template5);
			hou_parm_template5 = new hou.MenuParmTemplate({name: "subimagereftype#", label: "Subimage Reference Type", menu_items: ["0", "1"], menu_labels: ["Index", "Name"], default_value: 0, icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal, menu_use_token: false, is_button_strip: false, strip_uses_icons: false});
			hou_parm_template5.setScriptCallbackLanguage(hou.scriptLanguage.Python);
			hou_parm_template5.setTags({"script_callback_language": "python"});
			hou_parm_template4.addParmTemplate(hou_parm_template5);
			hou_parm_template5 = new hou.IntParmTemplate({name: "subimageindex#", label: "Subimage Index", num_components: 1, default_value: [0], min: 0, max: 10, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.Base1, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal, menu_use_token: false});
			hou_parm_template5.setConditional(hou.parmCondType.HideWhen, "{ subimagereftype# != 0 }");
			hou_parm_template5.setScriptCallbackLanguage(hou.scriptLanguage.Python);
			hou_parm_template5.setTags({"script_callback_language": "python"});
			hou_parm_template4.addParmTemplate(hou_parm_template5);
			hou_parm_template5 = new hou.StringParmTemplate({name: "subimagename#", label: "Subimage Name", num_components: 1, default_value: [""], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.Regular, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "from PySide2.QtGui import QFontDatabase\nfrom PySide2.QtCore import QStandardPaths\nfrom PySide2.QtGui import QFontDatabase\nfrom PySide2.QtWidgets import QApplication\nimport sys, os\n\n# TODO: Make this les bad i.e. determine if things are bold\ndef getFontPaths():\n    font_paths = QStandardPaths.standardLocations(QStandardPaths.FontsLocation)\n\n    accounted = []\n    unloadable = []\n    family_to_path = {}\n\n    db = QFontDatabase()\n    for fpath in font_paths:  # go through all font paths\n        for filename in os.listdir(fpath):  # go through all files at each path\n            # ignore .fon files because they don't work with hoiiotool\n            if (len(filename) > 4 and\n                filename[len(filename)-4:len(filename)] == '.fon'):\n                continue\n            path = os.path.join(fpath, filename)\n\n            idx = db.addApplicationFont(path)  # add font path\n            \n            if idx < 0: unloadable.append(path)  # font wasn't loaded if idx is -1\n            else:\n                names = db.applicationFontFamilies(idx)  # load back font family name\n                for n in names:\n                    if n in family_to_path:\n                        accounted.append((n, path, filename))\n                    else:\n                        family_to_path[n] = path\n                # this isn't a 1:1 mapping, for example\n                # 'C:/Windows/Fonts/HTOWERT.TTF' (regular) and\n                # 'C:/Windows/Fonts/HTOWERTI.TTF' (italic) are different\n                # but applicationFontFamilies will return 'High Tower Text' for both\n    return unloadable, family_to_path, accounted\n    \nfont_db = QFontDatabase()\nfont_families = font_db.families()\nmenu = []\nunloadable, family_to_path, accounted = getFontPaths()\nimport os\nfor font_name, font_path, filename in sorted(accounted):\n    menu.append(filename)\n    menu.append(font_name)\n\nreturn menu", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.StringReplace});
			hou_parm_template5.setConditional(hou.parmCondType.HideWhen, "{ subimagereftype# != 1 }");
			hou_parm_template5.setScriptCallbackLanguage(hou.scriptLanguage.Python);
			hou_parm_template5.setTags({"script_callback_language": "python"});
			hou_parm_template4.addParmTemplate(hou_parm_template5);
			hou_parm_template3.addParmTemplate(hou_parm_template4);
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template2 = new hou.FolderParmTemplate({name: "folder10", label: "Extra Operations", folder_type: hou.folderType.Collapsible, default_value: 0, ends_tab_group: false});
			hou_parm_template2.setConditional(hou.parmCondType.DisableWhen, "{ enablecustomargs == 1 }");
			hou_parm_template2.setTags({"group_type": "collapsible"});
			hou_parm_template3 = new hou.FolderParmTemplate({name: "extraargs", label: "Extra Operations", folder_type: hou.folderType.MultiparmBlock, default_value: 0, ends_tab_group: false});
			hou_parm_template4 = new hou.SeparatorParmTemplate({name: "sepparm3#"});
			hou_parm_template3.addParmTemplate(hou_parm_template4);
			hou_parm_template4 = new hou.StringParmTemplate({name: "argumentname#", label: "Argument Name", num_components: 1, default_value: [""], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.Regular, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal});
			hou_parm_template4.setScriptCallbackLanguage(hou.scriptLanguage.Python);
			hou_parm_template4.setTags({"script_callback_language": "python"});
			hou_parm_template3.addParmTemplate(hou_parm_template4);
			hou_parm_template4 = new hou.DataParmTemplate({name: "argmodifiers#", label: "Argument Modifiers", num_components: 1, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.Base1});
			hou_parm_template4.setScriptCallbackLanguage(hou.scriptLanguage.Python);
			hou_parm_template4.setTags({"script_callback_language": "python", "sidefx::key_value_dict_key_label": "Modifier Name", "sidefx::key_value_dict_value_label": "Modifier Value"});
			hou_parm_template3.addParmTemplate(hou_parm_template4);
			hou_parm_template4 = new hou.MenuParmTemplate({name: "valuetype#", label: "Argument Value Source", menu_items: ["0", "1", "2"], menu_labels: ["No Value", "Attribute Name", "Custom Value"], default_value: 0, icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal, menu_use_token: true, is_button_strip: false, strip_uses_icons: false});
			hou_parm_template4.setScriptCallbackLanguage(hou.scriptLanguage.Python);
			hou_parm_template4.setTags({"script_callback_language": "python"});
			hou_parm_template3.addParmTemplate(hou_parm_template4);
			hou_parm_template4 = new hou.StringParmTemplate({name: "attribname#", label: "Attribute Name", num_components: 1, default_value: [""], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.Regular, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal});
			hou_parm_template4.setConditional(hou.parmCondType.HideWhen, "{ valuetype# != 1 }");
			hou_parm_template4.setScriptCallbackLanguage(hou.scriptLanguage.Python);
			hou_parm_template4.setTags({"script_callback_language": "python"});
			hou_parm_template3.addParmTemplate(hou_parm_template4);
			hou_parm_template4 = new hou.StringParmTemplate({name: "customvalue#", label: "Argument Value", num_components: 1, default_value: [""], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.Regular, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal});
			hou_parm_template4.setConditional(hou.parmCondType.HideWhen, "{ valuetype# != 2 }");
			hou_parm_template4.setScriptCallbackLanguage(hou.scriptLanguage.Python);
			hou_parm_template4.setTags({"script_callback_language": "python"});
			hou_parm_template3.addParmTemplate(hou_parm_template4);
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template2 = new hou.FolderParmTemplate({name: "folder5", label: "OpenImageIO", folder_type: hou.folderType.Collapsible, default_value: 0, ends_tab_group: false});
			hou_parm_template2.setTags({"group_type": "collapsible"});
			hou_parm_template3 = new hou.ToggleParmTemplate({name: "enablecustomargs", label: "Enable Custom Arguments", default_value: false});
			hou_parm_template3.hideLabel(true);
			hou_parm_template3.setJoinWithNext(true);
			hou_parm_template3.setScriptCallbackLanguage(hou.scriptLanguage.Python);
			hou_parm_template3.setTags({"script_callback_language": "python"});
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template3 = new hou.StringParmTemplate({name: "customargs", label: "Custom Command", num_components: 1, default_value: ["-i input.jpg\n--text \"Custom Command\"\n-o $HIP/$HIPNAME.$OS.`@pdg_index`.jpg"], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.Regular, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal});
			hou_parm_template3.setConditional(hou.parmCondType.DisableWhen, "{ enablecustomargs == 0 }");
			hou_parm_template3.setTags({"editor": "1", "editorlines": "5-40"});
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template3 = new hou.MenuParmTemplate({name: "openimageiobinarytype", label: "OpenImageIO Binary", menu_items: ["0", "1"], menu_labels: ["hoiiotool", "Custom File Path"], default_value: 0, icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal, menu_use_token: false, is_button_strip: false, strip_uses_icons: false});
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template3 = new hou.StringParmTemplate({name: "customopenimageiobinary", label: "Custom Binary", num_components: 1, default_value: [""], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.FileReference, file_type: hou.fileType.Any, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.StringReplace});
			hou_parm_template3.setConditional(hou.parmCondType.DisableWhen, "{ openimageiobinarytype != 1 }");
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template_group.append(hou_parm_template);
			hou_parm_template = new hou.FolderParmTemplate({name: "toptabs3_1", label: "Schedulers", folder_type: hou.folderType.Tabs, default_value: 0, ends_tab_group: false});
			hou_parm_template2 = new hou.StringParmTemplate({name: "topscheduler", label: "TOP Scheduler Override", num_components: 1, default_value: [""], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.NodeReference, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal});
			hou_parm_template2.setJoinWithNext(true);
			hou_parm_template2.setTags({"opfilter": "!!TOP/SCHEDULER!!", "oprelative": "."});
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template2 = new hou.MenuParmTemplate({name: "addjobparms", label: "Add Job Parms", menu_items: [], menu_labels: [], default_value: 0, icon_names: [], item_generator_script: "from top import schedulerutil\nreturn schedulerutil.schedulerTypesMenu()", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal, menu_use_token: false, is_button_strip: false, strip_uses_icons: false});
			hou_parm_template2.hideLabel(true);
			hou_parm_template2.setScriptCallback("from top import schedulerutil; schedulerutil.onAddJobParms(kwargs)");
			hou_parm_template2.setScriptCallbackLanguage(hou.scriptLanguage.Python);
			hou_parm_template2.setTags({"script_callback": "from top import schedulerutil; schedulerutil.onAddJobParms(kwargs)", "script_callback_language": "python"});
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template2 = new hou.ToggleParmTemplate({name: "pdg_useschedulewhen", label: "Use Schedule When", default_value: false});
			hou_parm_template2.hideLabel(true);
			hou_parm_template2.setJoinWithNext(true);
			hou_parm_template2.setScriptCallbackLanguage(hou.scriptLanguage.Python);
			hou_parm_template2.setTags({"script_callback_language": "python"});
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template2 = new hou.IntParmTemplate({name: "pdg_schedulewhen", label: "Schedule When", num_components: 1, default_value: [1], min: 0, max: 10, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.Base1, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal, menu_use_token: false});
			hou_parm_template2.setConditional(hou.parmCondType.DisableWhen, "{ pdg_useschedulewhen == 0 }");
			hou_parm_template2.setScriptCallbackLanguage(hou.scriptLanguage.Python);
			hou_parm_template2.setTags({"script_callback_language": "python", "sidefx::slider": "none"});
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template2 = new hou.SeparatorParmTemplate({name: "sepparm4"});
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template2 = new hou.MenuParmTemplate({name: "pdg_workitemlabel", label: "Work Item Label", menu_items: ["0", "1", "2"], menu_labels: ["Use Default", "Inherit from Upstream Item", "Custom Expression"], default_value: 0, icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal, menu_use_token: false, is_button_strip: false, strip_uses_icons: false});
			hou_parm_template2.setJoinWithNext(true);
			hou_parm_template2.setScriptCallbackLanguage(hou.scriptLanguage.Python);
			hou_parm_template2.setTags({"script_callback_language": "python"});
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template2 = new hou.StringParmTemplate({name: "pdg_workitemlabelexpr", label: "Label Expression", num_components: 1, default_value: [""], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.Regular, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal});
			hou_parm_template2.setConditional(hou.parmCondType.DisableWhen, "{ pdg_workitemlabel != 2 }");
			hou_parm_template2.hideLabel(true);
			hou_parm_template2.setScriptCallbackLanguage(hou.scriptLanguage.Python);
			hou_parm_template2.setTags({"script_callback_language": "python"});
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template2 = new hou.MenuParmTemplate({name: "pdg_workitempriority", label: "Work Item Priority", menu_items: ["0", "1"], menu_labels: ["Inherit from Upstream Item", "Custom Expression"], default_value: 0, icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal, menu_use_token: false, is_button_strip: false, strip_uses_icons: false});
			hou_parm_template2.setJoinWithNext(true);
			hou_parm_template2.setScriptCallbackLanguage(hou.scriptLanguage.Python);
			hou_parm_template2.setTags({"script_callback_language": "python"});
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template2 = new hou.IntParmTemplate({name: "pdg_workitempriorityexpr", label: "Priority Expression", num_components: 1, default_value: [0], min: 0, max: 10, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.Base1, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal, menu_use_token: false});
			hou_parm_template2.setConditional(hou.parmCondType.DisableWhen, "{ pdg_workitempriority != 1 }");
			hou_parm_template2.hideLabel(true);
			hou_parm_template2.setScriptCallbackLanguage(hou.scriptLanguage.Python);
			hou_parm_template2.setTags({"script_callback_language": "python", "sidefx::slider": "none"});
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template_group.append(hou_parm_template);
			
            this.parmTemplateGroup = hou_parm_template_group;
            this.parmTemplateGroup.linkNode(this);
        }
    }
    hou.registerType('TOP/Images/openimageio',_hnt_TOP_openimageio)
    return _hnt_TOP_openimageio
}
        