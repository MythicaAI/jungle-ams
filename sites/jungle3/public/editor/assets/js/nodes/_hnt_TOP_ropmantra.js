
export default function (hou) {
    class _hnt_TOP_ropmantra extends hou.extend(hou._HoudiniBase).with(hou._SubgraphMixin) {
        static is_root = false;
        static id = 'TOP/Render/ropmantra';
        static category = '/TOP';
        static houdiniType = 'ropmantra';
        static title = 'ROP Mantra Render';
        static icon = '/editor/assets/imgs/nodes/_hnt_TOP_ropmantra.svg';
        constructor() {
            super();
            this.flags['houdini_type'] = this.__proto__.constructor.houdiniType;
            
            const inputs = ['TOP'];
            const outputs = ['TOP'];

            for(var i=0;i<inputs.length;i++) this.addInput(''+i,inputs[i]);        
            for(var j=0;j<outputs.length;j++) this.addOutput(''+j,outputs[j]);
        }
        parmTemplatesInit() {
            let hou_parm_template_group = new hou.ParmTemplateGroup();
			this.parmTemplateGroup = hou_parm_template_group;
			let hou_parm_template = new hou.FolderParmTemplate({name: "rop", label: "ROP Mantra", folder_type: hou.folderType.Tabs, default_value: 0, ends_tab_group: false});
			let hou_parm_template2 = new hou.MenuParmTemplate({name: "framegeneration", label: "Evaluate Using", menu_items: ["0", "1", "2", "3"], menu_labels: ["Single Frame", "Frame Range", "Automatic", "ROP Node Configuration"], default_value: 0, icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal, menu_use_token: false, is_button_strip: false, strip_uses_icons: false});
			hou_parm_template2.setTags({"autoscope": "0000000000000000"});
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template2 = new hou.ToggleParmTemplate({name: "useframeoverride", label: "Override Frame", default_value: false});
			hou_parm_template2.setConditional(hou.parmCondType.DisableWhen, "{ framegeneration != 0 }");
			hou_parm_template2.hideLabel(true);
			hou_parm_template2.setJoinWithNext(true);
			hou_parm_template2.setTags({"autoscope": "0000000000000000"});
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template2 = new hou.FloatParmTemplate({name: "frameoverride", label: "Override Frame", num_components: 1, default_value: [1], min: 0, max: 10, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.Base1});
			hou_parm_template2.setConditional(hou.parmCondType.DisableWhen, "{ useframeoverride == 0 } { framegeneration != 0 }");
			hou_parm_template2.setTags({"autoscope": "0000000000000000"});
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template2 = new hou.FloatParmTemplate({name: "f", label: "Frame Range", num_components: 3, default_value: [0, 0, 1], default_expression: ["$FSTART", "$FEND", ""], default_expression_language: [hou.scriptLanguage.Hscript, hou.scriptLanguage.Hscript, hou.scriptLanguage.Hscript], min: 0, max: 10, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.Base1});
			hou_parm_template2.setConditional(hou.parmCondType.DisableWhen, "{ framegeneration == 0 } { framegeneration == 3 }");
			hou_parm_template2.setTags({"autoscope": "0000000000000000"});
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template2 = new hou.ToggleParmTemplate({name: "singletask", label: "Cook Frames as Single Work Item", default_value: false});
			hou_parm_template2.setConditional(hou.parmCondType.DisableWhen, "{ framegeneration == 0 } { framegeneration == 3 }");
			hou_parm_template2.setScriptCallbackLanguage(hou.scriptLanguage.Python);
			hou_parm_template2.setTags({"autoscope": "0000000000000000", "script_callback_language": "python"});
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template2 = new hou.ToggleParmTemplate({name: "expandinputs", label: "Expand Input Files Across Frame Range", default_value: false});
			hou_parm_template2.setConditional(hou.parmCondType.DisableWhen, "{ roppath == \\\"\\\" } { framegeneration != 1 } { singletask == 1 }");
			hou_parm_template2.hide(true);
			hou_parm_template2.setTags({"autoscope": "0000000000000000"});
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template2 = new hou.SeparatorParmTemplate({name: "sepparm"});
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template2 = new hou.StringParmTemplate({name: "take", label: "Render With Take", num_components: 1, default_value: ["_current_"], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.Regular, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "opmenu -l -a ropnet1/mantra1 take", item_generator_script_language: hou.scriptLanguage.Hscript, menu_type: hou.menuType.Normal});
			hou_parm_template2.setTags({"autoscope": "0000000000000000"});
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template2 = new hou.StringParmTemplate({name: "camera", label: "Camera", num_components: 1, default_value: ["/obj/cam1"], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.NodeReference, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal});
			hou_parm_template2.setTags({"autoscope": "0000000000000000", "opfilter": "!!OBJ/CAMERA!!", "oprelative": "."});
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template2 = new hou.ToggleParmTemplate({name: "override_camerares", label: "Override Camera Resolution", default_value: false});
			hou_parm_template2.setTags({"autoscope": "0000000000000000"});
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template2 = new hou.StringParmTemplate({name: "res_fraction", label: "Resolution Scale", num_components: 1, default_value: ["0.5"], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.Regular, menu_items: ["0.1", "0.2", "0.25", "0.3333333", "0.5", "0.6666666", "0.75", "specific"], menu_labels: ["1/10 (One Tenth Resolution)", "1/5 (One Fifth Resolution)", "1/4 (Quarter Resolution)", "1/3 (One Third Resolution)", "1/2 (Half Resolution)", "2/3 (Two Thirds Resolution)", "3/4 (Three Quarter Resolution)", "User Specified Resolution"], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal});
			hou_parm_template2.setConditional(hou.parmCondType.HideWhen, "{ override_camerares == 0 }");
			hou_parm_template2.setTags({"autoscope": "0000000000000000"});
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template2 = new hou.IntParmTemplate({name: "res_override", label: "Resolution", num_components: 2, default_value: [1280, 720], min: null, max: 1, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.XYZW, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal, menu_use_token: false});
			hou_parm_template2.setConditional(hou.parmCondType.DisableWhen, "{ res_fraction != specific }");
			hou_parm_template2.setConditional(hou.parmCondType.HideWhen, "{ override_camerares == 0 }");
			hou_parm_template2.setJoinWithNext(true);
			hou_parm_template2.setTags({"autoscope": "0000000000000000"});
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template2 = new hou.MenuParmTemplate({name: "res_overrideMenu", label: "Choose Resolution", menu_items: [], menu_labels: [], default_value: 0, icon_names: [], item_generator_script: "opmenu -l -a ropnet1/mantra1 res_overrideMenu", item_generator_script_language: hou.scriptLanguage.Hscript, menu_type: hou.menuType.Mini, menu_use_token: false, is_button_strip: false, strip_uses_icons: false});
			hou_parm_template2.setConditional(hou.parmCondType.DisableWhen, "{ res_fraction != specific }");
			hou_parm_template2.setConditional(hou.parmCondType.HideWhen, "{ override_camerares == 0 }");
			hou_parm_template2.hideLabel(true);
			hou_parm_template2.setScriptCallback("opparm . res_override ( `arg(\"$script_value\", 0)` `arg(\"$script_value\", 1)` aspect_override ( `arg(\"$script_value\", 2)` )");
			hou_parm_template2.setTags({"autoscope": "0000000000000000", "script_callback": "opparm . res_override ( `arg(\"$script_value\", 0)` `arg(\"$script_value\", 1)` aspect_override ( `arg(\"$script_value\", 2)` )"});
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template2 = new hou.FloatParmTemplate({name: "aspect_override", label: "Pixel Aspect Ratio", num_components: 1, default_value: [1], min: 0.05, max: 2, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.Base1});
			hou_parm_template2.setConditional(hou.parmCondType.DisableWhen, "{ res_fraction != specific }");
			hou_parm_template2.setConditional(hou.parmCondType.HideWhen, "{ override_camerares == 0 }");
			hou_parm_template2.setTags({"autoscope": "0000000000000000"});
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template2 = new hou.FolderParmTemplate({name: "images6", label: "Images", folder_type: hou.folderType.Tabs, default_value: 0, ends_tab_group: false});
			hou_parm_template2.setTags({"autoscope": "0000000000000000", "sidefx::switcher": "images"});
			let hou_parm_template3 = new hou.StringParmTemplate({name: "soho_program", label: "soho Program", num_components: 1, default_value: ["IFD.py"], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.FileReference, file_type: hou.fileType.Any, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.StringReplace});
			hou_parm_template3.hide(true);
			hou_parm_template3.setTags({"autoscope": "0000000000000000", "filechooser_mode": "read"});
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template3 = new hou.StringParmTemplate({name: "soho_shopstyle", label: "soho SHOP Style", num_components: 1, default_value: ["VMantra"], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.Regular, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal});
			hou_parm_template3.hide(true);
			hou_parm_template3.setTags({"autoscope": "0000000000000000"});
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template3 = new hou.ToggleParmTemplate({name: "soho_ipr_support", label: "IPR Supported", default_value: true});
			hou_parm_template3.hide(true);
			hou_parm_template3.setTags({"autoscope": "0000000000000000"});
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template3 = new hou.ToggleParmTemplate({name: "soho_previewsupport", label: "Preview Supported", default_value: true});
			hou_parm_template3.hide(true);
			hou_parm_template3.setTags({"autoscope": "0000000000000000"});
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template3 = new hou.StringParmTemplate({name: "vm_picture", label: "Output Picture", num_components: 1, default_value: ["$HIP/render/$HIPNAME.$OS.$F4.exr"], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.FileReference, file_type: hou.fileType.Any, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "opmenu -l -a ropnet1/mantra1 vm_picture", item_generator_script_language: hou.scriptLanguage.Hscript, menu_type: hou.menuType.StringReplace});
			hou_parm_template3.setTags({"autoscope": "0000000000000000", "filechooser_mode": "write"});
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template3 = new hou.ToggleParmTemplate({name: "usefiletag", label: "Use File Tag", default_value: false});
			hou_parm_template3.hideLabel(true);
			hou_parm_template3.setJoinWithNext(true);
			hou_parm_template3.setScriptCallbackLanguage(hou.scriptLanguage.Python);
			hou_parm_template3.setTags({"script_callback_language": "python"});
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template3 = new hou.StringParmTemplate({name: "filetag", label: "Output File Tag", num_components: 1, default_value: ["file/image"], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.Regular, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "import pdg\nreturn pdg.resultTagMenu('')", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.StringReplace});
			hou_parm_template3.setConditional(hou.parmCondType.DisableWhen, "{ usefiletag == 0 }");
			hou_parm_template3.setScriptCallbackLanguage(hou.scriptLanguage.Python);
			hou_parm_template3.setTags({"script_callback_language": "python"});
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template3 = new hou.StringParmTemplate({name: "vm_device", label: "Output Device", num_components: 1, default_value: [""], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.Regular, menu_items: ["", "Houdini", "TIFF", "OpenEXR", "PNG", "JPEG", "RAT"], menu_labels: ["Infer from filename", "Houdini .pic format", "Tagged Image File Format (TIFF)", "Open EXR", "Portable Network Graphics (PNG)", "JPEG", "Random Access Texture (RAT)"], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal});
			hou_parm_template3.setTags({"autoscope": "0000000000000000"});
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template3 = new hou.ToggleParmTemplate({name: "soho_mkpath", label: "Create Intermediate Directories", default_value: true});
			hou_parm_template3.setTags({"autoscope": "0000000000000000"});
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template3 = new hou.StringParmTemplate({name: "soho_skip_frame", label: "Skip Rendered Frames", num_components: 1, default_value: ["no"], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.Regular, menu_items: ["no", "exist:vm_picture", "valid:vm_picture"], menu_labels: ["Overwrite existing frames", "Skip files that exist", "Skip frames that are valid images"], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal});
			hou_parm_template3.setTags({"autoscope": "0000000000000000"});
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template3 = new hou.FolderParmTemplate({name: "output6", label: "Output", folder_type: hou.folderType.Tabs, default_value: 0, ends_tab_group: false});
			hou_parm_template3.setTags({"autoscope": "0000000000000000", "sidefx::switcher": "output"});
			let hou_parm_template4 = new hou.StringParmTemplate({name: "vm_pfilter", label: "Pixel Filter", num_components: 1, default_value: ["gaussian -w 2"], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.Regular, menu_items: ["box -w 1", "gaussian -w 2", "gaussian -w 3", "gaussian -w 2 -r 1", "combine -t 20.0", "bartlett -w 2", "catrom -w 3", "hanning -w 2", "blackman -w 2", "sinc -w 3", "edgedetect", "minmax min", "minmax max", "minmax median", "minmax edge", "minmax ocover", "minmax idcover", "minmax omin", "minmax omax", "minmax omedian", "denoise optix -a basecolor", "denoise intel -a basecolor"], menu_labels: ["Unit Box Filter", "Gaussian 2x2", "Gaussian 3x3 (softer)", "Gaussian 2x2 with noisy sample refiltering", "Ray Histogram Fusion", "Bartlett (triangle)", "Catmull-Rom", "Hanning", "Blackman", "Sinc (sharpening)", "Edge Detection Filter", "Closest Sample Filter", "Farthest Sample Filter", "Median Sample Filter", "Disable Edge Antialiasing", "Object With Most Pixel Coverage (average)", "Object With Most Coverage (no filtering)", "Object With Most Coverage (minimum z-value)", "Object With Most Coverage (maximum z-value)", "Object With Most Coverage (median z-value)", "NVIDIA OptiX Denoiser", "Intel OIDN Denoiser"], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.StringReplace});
			hou_parm_template4.setTags({"autoscope": "0000000000000000", "mantra_class": "plane", "mantra_name": "pfilter", "spare_category": "Output"});
			hou_parm_template3.addParmTemplate(hou_parm_template4);
			hou_parm_template4 = new hou.StringParmTemplate({name: "vm_sfilter", label: "Sample Filter", num_components: 1, default_value: ["alpha"], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.Regular, menu_items: ["alpha", "closest"], menu_labels: ["Opacity Filtering", "Closest Surface"], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal});
			hou_parm_template4.setTags({"autoscope": "0000000000000000", "mantra_class": "plane", "mantra_name": "sfilter", "spare_category": "Output"});
			hou_parm_template3.addParmTemplate(hou_parm_template4);
			hou_parm_template4 = new hou.StringParmTemplate({name: "vm_quantize", label: "Quantization", num_components: 1, default_value: ["half"], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.Regular, menu_items: ["8", "16", "half", "float"], menu_labels: ["8 bit integer", "16 bit integer", "16 bit float", "32 bit float"], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal});
			hou_parm_template4.setTags({"autoscope": "0000000000000000", "mantra_class": "plane", "mantra_name": "quantize", "spare_category": "Output"});
			hou_parm_template3.addParmTemplate(hou_parm_template4);
			hou_parm_template4 = new hou.FloatParmTemplate({name: "vm_gamma", label: "Gamma", num_components: 1, default_value: [1], min: 0.001, max: 3, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.Base1});
			hou_parm_template4.setTags({"autoscope": "0000000000000000", "mantra_class": "plane", "mantra_name": "gamma", "spare_category": "Output"});
			hou_parm_template3.addParmTemplate(hou_parm_template4);
			hou_parm_template4 = new hou.ToggleParmTemplate({name: "vm_subpixel", label: "Sub-Pixel Output", default_value: false});
			hou_parm_template4.setTags({"autoscope": "0000000000000000", "mantra_class": "image", "mantra_name": "subpixel", "spare_category": "Output"});
			hou_parm_template3.addParmTemplate(hou_parm_template4);
			hou_parm_template4 = new hou.ToggleParmTemplate({name: "vm_tile_render", label: "Tiled Render", default_value: false});
			hou_parm_template4.setTags({"autoscope": "0000000000000000", "spare_category": "Output"});
			hou_parm_template3.addParmTemplate(hou_parm_template4);
			hou_parm_template4 = new hou.IntParmTemplate({name: "vm_tile_count_x", label: "Horizontal Tiles", num_components: 1, default_value: [4], min: 1, max: 8, min_is_strict: true, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.Base1, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal, menu_use_token: false});
			hou_parm_template4.setConditional(hou.parmCondType.HideWhen, "{ vm_tile_render == 0 }");
			hou_parm_template4.setTags({"autoscope": "0000000000000000", "spare_category": "Output"});
			hou_parm_template3.addParmTemplate(hou_parm_template4);
			hou_parm_template4 = new hou.IntParmTemplate({name: "vm_tile_count_y", label: "Vertical Tiles", num_components: 1, default_value: [4], min: 1, max: 8, min_is_strict: true, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.Base1, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal, menu_use_token: false});
			hou_parm_template4.setConditional(hou.parmCondType.HideWhen, "{ vm_tile_render == 0 }");
			hou_parm_template4.setTags({"autoscope": "0000000000000000", "spare_category": "Output"});
			hou_parm_template3.addParmTemplate(hou_parm_template4);
			hou_parm_template4 = new hou.IntParmTemplate({name: "vm_tile_index", label: "Tile Index", num_components: 1, default_value: [0], min: 0, max: 63, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.Base1, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal, menu_use_token: false});
			hou_parm_template4.setConditional(hou.parmCondType.HideWhen, "{ vm_tile_render == 0 }");
			hou_parm_template4.setTags({"autoscope": "0000000000000000", "spare_category": "Output"});
			hou_parm_template3.addParmTemplate(hou_parm_template4);
			hou_parm_template4 = new hou.ToggleParmTemplate({name: "vm_writecheckpoint", label: "Output Checkpoint Files", default_value: true});
			hou_parm_template4.setTags({"autoscope": "0000000000000000", "mantra_class": "image", "mantra_name": "writecheckpoint", "spare_category": "Output"});
			hou_parm_template3.addParmTemplate(hou_parm_template4);
			hou_parm_template4 = new hou.ToggleParmTemplate({name: "vm_readcheckpoint", label: "Resume from Checkpoint Files", default_value: false});
			hou_parm_template4.setTags({"autoscope": "0000000000000000", "mantra_class": "image", "mantra_name": "readcheckpoint", "spare_category": "Output"});
			hou_parm_template3.addParmTemplate(hou_parm_template4);
			hou_parm_template4 = new hou.ToggleParmTemplate({name: "render_viewcamera", label: "Create Image From Viewing Camera", default_value: true});
			hou_parm_template4.setTags({"autoscope": "0000000000000000", "spare_category": "Output"});
			hou_parm_template3.addParmTemplate(hou_parm_template4);
			hou_parm_template4 = new hou.ToggleParmTemplate({name: "render_any_shadowmap", label: "Auto-Generate Shadow Maps", default_value: true});
			hou_parm_template4.setTags({"autoscope": "0000000000000000", "spare_category": "Output"});
			hou_parm_template3.addParmTemplate(hou_parm_template4);
			hou_parm_template4 = new hou.ToggleParmTemplate({name: "render_any_envmap", label: "Auto-Generate Environment Maps", default_value: true});
			hou_parm_template4.setTags({"autoscope": "0000000000000000", "spare_category": "Output"});
			hou_parm_template3.addParmTemplate(hou_parm_template4);
			hou_parm_template4 = new hou.ToggleParmTemplate({name: "render_any_photonmap", label: "Auto-Generate Photon Maps", default_value: true});
			hou_parm_template4.setTags({"autoscope": "0000000000000000", "spare_category": "Output"});
			hou_parm_template3.addParmTemplate(hou_parm_template4);
			hou_parm_template4 = new hou.ToggleParmTemplate({name: "render_any_pointcloud", label: "Auto-Generate Light Point Clouds", default_value: true});
			hou_parm_template4.setTags({"autoscope": "0000000000000000", "spare_category": "Output"});
			hou_parm_template3.addParmTemplate(hou_parm_template4);
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template3 = new hou.FolderParmTemplate({name: "output6_1", label: "Extra Image Planes", folder_type: hou.folderType.Tabs, default_value: 0, ends_tab_group: false});
			hou_parm_template3.setTags({"autoscope": "0000000000000000", "sidefx::switcher": "output"});
			hou_parm_template4 = new hou.StringParmTemplate({name: "vm_exportcomponents", label: "Export Components", num_components: 1, default_value: ["diffuse reflect coat refract volume sss"], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.Regular, menu_items: ["diffuse reflect sss", "diffuse reflect coat refract volume sss"], menu_labels: ["Basic Components", "Common Components"], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.StringReplace});
			hou_parm_template4.setTags({"autoscope": "0000000000000000", "mantra_class": "renderer", "mantra_name": "exportcomponents", "spare_category": "Extra Image Planes"});
			hou_parm_template3.addParmTemplate(hou_parm_template4);
			hou_parm_template4 = new hou.ToggleParmTemplate({name: "vm_quickplane_P", label: "Shading Position (P)", default_value: false});
			hou_parm_template4.setTags({"autoscope": "0000000000000000", "spare_category": "Extra Image Planes"});
			hou_parm_template3.addParmTemplate(hou_parm_template4);
			hou_parm_template4 = new hou.ToggleParmTemplate({name: "vm_quickplane_Pz", label: "Shading Depth (Pz)", default_value: false});
			hou_parm_template4.setTags({"autoscope": "0000000000000000", "spare_category": "Extra Image Planes"});
			hou_parm_template3.addParmTemplate(hou_parm_template4);
			hou_parm_template4 = new hou.ToggleParmTemplate({name: "vm_quickplane_N", label: "Shading Normal (N)", default_value: false});
			hou_parm_template4.setTags({"autoscope": "0000000000000000", "spare_category": "Extra Image Planes"});
			hou_parm_template3.addParmTemplate(hou_parm_template4);
			hou_parm_template4 = new hou.ToggleParmTemplate({name: "vm_quickplane_all_comp", label: "Combined Lighting (per-component)", default_value: false});
			hou_parm_template4.setTags({"autoscope": "0000000000000000", "spare_category": "Extra Image Planes"});
			hou_parm_template3.addParmTemplate(hou_parm_template4);
			hou_parm_template4 = new hou.ToggleParmTemplate({name: "vm_quickplane_direct_comp", label: "Direct Lighting (per-component)", default_value: false});
			hou_parm_template4.setTags({"autoscope": "0000000000000000", "spare_category": "Extra Image Planes"});
			hou_parm_template3.addParmTemplate(hou_parm_template4);
			hou_parm_template4 = new hou.ToggleParmTemplate({name: "vm_quickplane_indirect_comp", label: "Indirect Lighting (per-component)", default_value: false});
			hou_parm_template4.setTags({"autoscope": "0000000000000000", "spare_category": "Extra Image Planes"});
			hou_parm_template3.addParmTemplate(hou_parm_template4);
			hou_parm_template4 = new hou.ToggleParmTemplate({name: "vm_quickplane_all_emission", label: "Combined Emission", default_value: false});
			hou_parm_template4.setTags({"autoscope": "0000000000000000", "spare_category": "Extra Image Planes"});
			hou_parm_template3.addParmTemplate(hou_parm_template4);
			hou_parm_template4 = new hou.ToggleParmTemplate({name: "vm_quickplane_direct_noshadow", label: "Direct Unshadowed", default_value: false});
			hou_parm_template4.setTags({"autoscope": "0000000000000000", "spare_category": "Extra Image Planes"});
			hou_parm_template3.addParmTemplate(hou_parm_template4);
			hou_parm_template4 = new hou.ToggleParmTemplate({name: "vm_quickplane_direct_samples", label: "Direct Ray Samples", default_value: false});
			hou_parm_template4.setTags({"autoscope": "0000000000000000", "spare_category": "Extra Image Planes"});
			hou_parm_template3.addParmTemplate(hou_parm_template4);
			hou_parm_template4 = new hou.ToggleParmTemplate({name: "vm_quickplane_indirect_samples", label: "Indirect Ray Samples", default_value: false});
			hou_parm_template4.setTags({"autoscope": "0000000000000000", "spare_category": "Extra Image Planes"});
			hou_parm_template3.addParmTemplate(hou_parm_template4);
			hou_parm_template4 = new hou.ToggleParmTemplate({name: "vm_quickplane_sss", label: "SSS Single/Multi", default_value: false});
			hou_parm_template4.setTags({"autoscope": "0000000000000000", "spare_category": "Extra Image Planes"});
			hou_parm_template3.addParmTemplate(hou_parm_template4);
			hou_parm_template4 = new hou.ToggleParmTemplate({name: "vm_quickplane_basecolor", label: "Surface Unlit Base Color (basecolor)", default_value: false});
			hou_parm_template4.setTags({"autoscope": "0000000000000000", "spare_category": "Extra Image Planes"});
			hou_parm_template3.addParmTemplate(hou_parm_template4);
			hou_parm_template4 = new hou.ToggleParmTemplate({name: "vm_quickplane_diffcolor", label: "Surface Unlit Diffuse Color (diffcolor)", default_value: false});
			hou_parm_template4.setTags({"autoscope": "0000000000000000", "spare_category": "Extra Image Planes"});
			hou_parm_template3.addParmTemplate(hou_parm_template4);
			hou_parm_template4 = new hou.ToggleParmTemplate({name: "vm_quickplane_speccolor", label: "Surface Unlit Specular Color (speccolor)", default_value: false});
			hou_parm_template4.setTags({"autoscope": "0000000000000000", "spare_category": "Extra Image Planes"});
			hou_parm_template3.addParmTemplate(hou_parm_template4);
			hou_parm_template4 = new hou.ToggleParmTemplate({name: "vm_quickplane_emitcolor", label: "Surface Emission Color (emitcolor)", default_value: false});
			hou_parm_template4.setTags({"autoscope": "0000000000000000", "spare_category": "Extra Image Planes"});
			hou_parm_template3.addParmTemplate(hou_parm_template4);
			hou_parm_template4 = new hou.ToggleParmTemplate({name: "vm_quickplane_ssscolor", label: "Surface SSS Color (ssscolor)", default_value: false});
			hou_parm_template4.setTags({"autoscope": "0000000000000000", "spare_category": "Extra Image Planes"});
			hou_parm_template3.addParmTemplate(hou_parm_template4);
			hou_parm_template4 = new hou.ToggleParmTemplate({name: "vm_quickplane_metallic", label: "Surface Metallic (metallic)", default_value: false});
			hou_parm_template4.setTags({"autoscope": "0000000000000000", "spare_category": "Extra Image Planes"});
			hou_parm_template3.addParmTemplate(hou_parm_template4);
			hou_parm_template4 = new hou.ToggleParmTemplate({name: "vm_quickplane_specrough", label: "Surface Specular Roughness (specrough)", default_value: false});
			hou_parm_template4.setTags({"autoscope": "0000000000000000", "spare_category": "Extra Image Planes"});
			hou_parm_template3.addParmTemplate(hou_parm_template4);
			hou_parm_template4 = new hou.ToggleParmTemplate({name: "vm_showextraplaneparms", label: "Show extra image plane parameters", default_value: false});
			hou_parm_template4.hide(true);
			hou_parm_template4.setTags({"autoscope": "0000000000000000", "spare_category": "Extra Image Planes"});
			hou_parm_template3.addParmTemplate(hou_parm_template4);
			hou_parm_template4 = new hou.FolderParmTemplate({name: "vm_numaux", label: "Extra Image Planes", folder_type: hou.folderType.MultiparmBlock, default_value: 0, ends_tab_group: false});
			hou_parm_template4.setTags({"autoscope": "0000000000000000", "spare_category": "Extra Image Planes"});
			let hou_parm_template5 = new hou.ToggleParmTemplate({name: "vm_disable_plane#", label: "Disable Plane #", default_value: false});
			hou_parm_template5.setJoinWithNext(true);
			hou_parm_template5.setTags({"autoscope": "0000000000000000", "spare_category": "Extra Image Planes"});
			hou_parm_template4.addParmTemplate(hou_parm_template5);
			hou_parm_template5 = new hou.ToggleParmTemplate({name: "vm_excludedcm_plane#", label: "Exclude from DCM", default_value: false});
			hou_parm_template5.setConditional(hou.parmCondType.HideWhen, "{ vm_deepresolver != camera }");
			hou_parm_template5.setTags({"autoscope": "0000000000000000", "spare_category": "Extra Image Planes"});
			hou_parm_template4.addParmTemplate(hou_parm_template5);
			hou_parm_template5 = new hou.StringParmTemplate({name: "vm_variable_plane#", label: "VEX Variable", num_components: 1, default_value: [""], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.Regular, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "__import__('toolutils').parseDialogScriptMenu('MantraPlanes', forhscript=False)", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.StringReplace});
			hou_parm_template5.setConditional(hou.parmCondType.DisableWhen, "{ vm_disable_plane# == 1 }");
			hou_parm_template5.setScriptCallback("`pythonexprs(\"__import__(\'toolutils\').updatePlaneType($script_multiparm_index, \'$script_value\')\")`");
			hou_parm_template5.setTags({"autoscope": "0000000000000000", "script_callback": "`pythonexprs(\"__import__(\'toolutils\').updatePlaneType($script_multiparm_index, \'$script_value\')\")`", "spare_category": "Extra Image Planes"});
			hou_parm_template4.addParmTemplate(hou_parm_template5);
			hou_parm_template5 = new hou.StringParmTemplate({name: "vm_vextype_plane#", label: "VEX Type", num_components: 1, default_value: ["vector"], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.Regular, menu_items: ["float", "vector", "vector4", "unitvector"], menu_labels: ["Float Type", "Vector Type", "Vector4 Type", "Unit Vector Type"], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal});
			hou_parm_template5.setConditional(hou.parmCondType.DisableWhen, "{ vm_disable_plane# == 1 }");
			hou_parm_template5.setTags({"autoscope": "0000000000000000", "spare_category": "Extra Image Planes"});
			hou_parm_template4.addParmTemplate(hou_parm_template5);
			hou_parm_template5 = new hou.StringParmTemplate({name: "vm_channel_plane#", label: "Channel Name", num_components: 1, default_value: [""], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.Regular, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal});
			hou_parm_template5.setConditional(hou.parmCondType.DisableWhen, "{ vm_disable_plane# == 1 } { vm_variable_plane# == \\\"\\\" }");
			hou_parm_template5.setTags({"autoscope": "0000000000000000", "spare_category": "Extra Image Planes"});
			hou_parm_template4.addParmTemplate(hou_parm_template5);
			hou_parm_template5 = new hou.ToggleParmTemplate({name: "vm_usefile_plane#", label: "Different File", default_value: false});
			hou_parm_template5.setConditional(hou.parmCondType.HideWhen, "{ vm_disable_plane# == 1 } { vm_variable_plane# == \\\"\\\" } { vm_picture == ip }");
			hou_parm_template5.hideLabel(true);
			hou_parm_template5.setJoinWithNext(true);
			hou_parm_template5.setTags({"autoscope": "0000000000000000", "spare_category": "Extra Image Planes"});
			hou_parm_template4.addParmTemplate(hou_parm_template5);
			hou_parm_template5 = new hou.StringParmTemplate({name: "vm_filename_plane#", label: "Different File", num_components: 1, default_value: [""], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.FileReference, file_type: hou.fileType.Image, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "echo `pythonexprs(\"__import__(\'toolutils\').parseDialogScriptMenu(\'FBrender\')\")`", item_generator_script_language: hou.scriptLanguage.Hscript, menu_type: hou.menuType.StringReplace});
			hou_parm_template5.setConditional(hou.parmCondType.DisableWhen, "{ vm_usefile_plane# == 0 }");
			hou_parm_template5.setConditional(hou.parmCondType.HideWhen, "{ vm_disable_plane# == 1 } { vm_variable_plane# == \\\"\\\" } { vm_picture == ip }");
			hou_parm_template5.setTags({"autoscope": "0000000000000000", "filechooser_mode": "write", "spare_category": "Extra Image Planes"});
			hou_parm_template4.addParmTemplate(hou_parm_template5);
			hou_parm_template5 = new hou.StringParmTemplate({name: "vm_quantize_plane#", label: "Quantize", num_components: 1, default_value: ["half"], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.Regular, menu_items: ["8", "16", "half", "float"], menu_labels: ["8 bit integer", "16 bit integer", "16 bit float", "32 bit float"], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal});
			hou_parm_template5.setConditional(hou.parmCondType.DisableWhen, "{ vm_disable_plane# == 1 } { vm_variable_plane# == \\\"\\\" }");
			hou_parm_template5.setHelp("image:quantize");
			hou_parm_template5.setTags({"autoscope": "0000000000000000", "spare_category": "Extra Image Planes"});
			hou_parm_template4.addParmTemplate(hou_parm_template5);
			hou_parm_template5 = new hou.StringParmTemplate({name: "vm_sfilter_plane#", label: "Sample Filter", num_components: 1, default_value: ["alpha"], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.Regular, menu_items: ["alpha", "fullopacity", "closest"], menu_labels: ["Opacity Filtering", "Full Opacity Filtering", "Closest Surface"], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal});
			hou_parm_template5.setConditional(hou.parmCondType.DisableWhen, "{ vm_disable_plane# == 1 } { vm_variable_plane# == \\\"\\\" }");
			hou_parm_template5.setHelp("image:sfilter");
			hou_parm_template5.setTags({"autoscope": "0000000000000000", "spare_category": "Extra Image Planes"});
			hou_parm_template4.addParmTemplate(hou_parm_template5);
			hou_parm_template5 = new hou.StringParmTemplate({name: "vm_pfilter_plane#", label: "Pixel Filter", num_components: 1, default_value: [""], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.Regular, menu_items: ["", "box -w 1", "gaussian -w 2", "gaussian -w 3", "gaussian -w 2 -r 1", "combine -t 20.0", "bartlett -w 2", "catrom -w 3", "hanning -w 2", "blackman -w 2", "sinc -w 3", "edgedetect", "minmax min", "minmax max", "minmax median", "minmax edge", "minmax ocover", "minmax idcover", "minmax omin", "minmax omax", "minmax omedian", "denoise optix -a basecolor", "denoise intel -a basecolor"], menu_labels: ["Inherit from main plane", "Unit Box Filter", "Gaussian 2x2", "Gaussian 3x3 (softer)", "Gaussian 2x2 with noisy sample refiltering", "Ray Histogram Fusion", "Bartlett (triangle)", "Catmull-Rom", "Hanning", "Blackman", "Sinc (sharpening)", "Edge Detection Filter", "Closest Sample Filter", "Farthest Sample Filter", "Median Sample Filter", "Disable Edge Antialiasing", "Object With Most Pixel Coverage (average)", "Object With Most Coverage (no filtering)", "Object With Most Coverage (minimum z-value)", "Object With Most Coverage (maximum z-value)", "Object With Most Coverage (median z-value)", "NVIDIA OptiX Denoiser", "Intel OIDN Denoiser"], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.StringReplace});
			hou_parm_template5.setConditional(hou.parmCondType.DisableWhen, "{ vm_disable_plane# == 1 } { vm_variable_plane# == \\\"\\\" }");
			hou_parm_template5.setHelp("image:pfilter");
			hou_parm_template5.setTags({"autoscope": "0000000000000000", "spare_category": "Extra Image Planes"});
			hou_parm_template4.addParmTemplate(hou_parm_template5);
			hou_parm_template5 = new hou.FloatParmTemplate({name: "vm_gamma_plane#", label: "Gamma", num_components: 1, default_value: [1], min: 0.001, max: 3, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.Base1});
			hou_parm_template5.setConditional(hou.parmCondType.DisableWhen, "{ vm_disable_plane# == 1 } { vm_variable_plane# == \\\"\\\" }");
			hou_parm_template5.setConditional(hou.parmCondType.HideWhen, "{ vm_showextraplaneparms == 0 }");
			hou_parm_template5.setHelp("image:gamma");
			hou_parm_template5.setTags({"autoscope": "0000000000000000", "spare_category": "Extra Image Planes"});
			hou_parm_template4.addParmTemplate(hou_parm_template5);
			hou_parm_template5 = new hou.FloatParmTemplate({name: "vm_gain_plane#", label: "Gain", num_components: 1, default_value: [1], min: 0.001, max: 10, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.Base1});
			hou_parm_template5.setConditional(hou.parmCondType.DisableWhen, "{ vm_disable_plane# == 1 } { vm_variable_plane# == \\\"\\\" }");
			hou_parm_template5.setConditional(hou.parmCondType.HideWhen, "{ vm_showextraplaneparms == 0 }");
			hou_parm_template5.setHelp("image:gain");
			hou_parm_template5.setTags({"autoscope": "0000000000000000", "spare_category": "Extra Image Planes"});
			hou_parm_template4.addParmTemplate(hou_parm_template5);
			hou_parm_template5 = new hou.FloatParmTemplate({name: "vm_dither_plane#", label: "Dither", num_components: 1, default_value: [0.5], min: 0, max: 1, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.Base1});
			hou_parm_template5.setConditional(hou.parmCondType.DisableWhen, "{ vm_disable_plane# == 1 } { vm_variable_plane# == \\\"\\\" }");
			hou_parm_template5.setConditional(hou.parmCondType.HideWhen, "{ vm_showextraplaneparms == 0 }");
			hou_parm_template5.setHelp("image:dither");
			hou_parm_template5.setTags({"autoscope": "0000000000000000", "spare_category": "Extra Image Planes"});
			hou_parm_template4.addParmTemplate(hou_parm_template5);
			hou_parm_template5 = new hou.FloatParmTemplate({name: "vm_whitepoint_plane#", label: "White Point", num_components: 1, default_value: [1], min: 0, max: 1, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.Base1});
			hou_parm_template5.setConditional(hou.parmCondType.DisableWhen, "{ vm_disable_plane# == 1 } { vm_variable_plane# == \\\"\\\" }");
			hou_parm_template5.setConditional(hou.parmCondType.HideWhen, "{ vm_showextraplaneparms == 0 }");
			hou_parm_template5.setHelp("image:whitepoint");
			hou_parm_template5.setTags({"autoscope": "0000000000000000", "spare_category": "Extra Image Planes"});
			hou_parm_template4.addParmTemplate(hou_parm_template5);
			hou_parm_template5 = new hou.ToggleParmTemplate({name: "vm_componentexport#", label: "Export variable for each component", default_value: false});
			hou_parm_template5.setConditional(hou.parmCondType.DisableWhen, "{ vm_disable_plane# == 1 } { vm_variable_plane# =~ ()|(lpe:).+ }");
			hou_parm_template5.setTags({"autoscope": "0000000000000000", "spare_category": "Extra Image Planes"});
			hou_parm_template4.addParmTemplate(hou_parm_template5);
			hou_parm_template5 = new hou.IntParmTemplate({name: "vm_lightexport#", label: "Light Exports", num_components: 1, default_value: [0], min: 0, max: 10, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.Base1, menu_items: ["0", "1", "2"], menu_labels: ["No light exports", "Export variable for each light", "Merge all lights into single channel"], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal, menu_use_token: false});
			hou_parm_template5.setConditional(hou.parmCondType.DisableWhen, "{ vm_disable_plane# == 1 } { vm_variable_plane# =~ ()|(lpe:).+ }");
			hou_parm_template5.setTags({"autoscope": "0000000000000000", "spare_category": ""});
			hou_parm_template4.addParmTemplate(hou_parm_template5);
			hou_parm_template5 = new hou.StringParmTemplate({name: "vm_lightexport_scope#", label: "Light Mask", num_components: 1, default_value: ["*"], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.NodeReferenceList, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal});
			hou_parm_template5.setConditional(hou.parmCondType.DisableWhen, "{ vm_disable_plane# == 1 } { vm_variable_plane# == \\\"\\\" }");
			hou_parm_template5.setConditional(hou.parmCondType.HideWhen, "{ vm_disable_plane# == 1 } { vm_variable_plane# == \\\"\\\" } { vm_lightexport# == 0 }");
			hou_parm_template5.setTags({"autoscope": "0000000000000000", "opexpand": "1", "opfilter": "!!OBJ/LIGHT!!", "oprelative": "/"});
			hou_parm_template4.addParmTemplate(hou_parm_template5);
			hou_parm_template5 = new hou.StringParmTemplate({name: "vm_lightexport_select#", label: "Light Selection", num_components: 1, default_value: ["*"], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.Regular, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal});
			hou_parm_template5.setConditional(hou.parmCondType.HideWhen, "{ vm_disable_plane# == 1 } { vm_variable_plane# == \\\"\\\" } { vm_lightexport# == 0 }");
			hou_parm_template5.setTags({"autoscope": "0000000000000000"});
			hou_parm_template4.addParmTemplate(hou_parm_template5);
			hou_parm_template3.addParmTemplate(hou_parm_template4);
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template3 = new hou.FolderParmTemplate({name: "output6_2", label: "Deep Output", folder_type: hou.folderType.Tabs, default_value: 0, ends_tab_group: false});
			hou_parm_template3.setTags({"autoscope": "0000000000000000", "sidefx::switcher": "output"});
			hou_parm_template4 = new hou.StringParmTemplate({name: "vm_deepresolver", label: "Deep Resolver", num_components: 1, default_value: ["null"], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.Regular, menu_items: ["null", "shadow", "camera"], menu_labels: ["No Deep Resolver", "Deep Shadow Map", "Deep Camera Map"], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal});
			hou_parm_template4.setTags({"autoscope": "0000000000000000", "spare_category": "Deep Output"});
			hou_parm_template3.addParmTemplate(hou_parm_template4);
			hou_parm_template4 = new hou.StringParmTemplate({name: "vm_dcmfilename", label: "DCM Filename", num_components: 1, default_value: ["$HIP/dcm.rat"], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.FileReference, file_type: hou.fileType.Image, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "opmenu -l -a ropnet1/mantra1 vm_dcmfilename", item_generator_script_language: hou.scriptLanguage.Hscript, menu_type: hou.menuType.StringReplace});
			hou_parm_template4.setConditional(hou.parmCondType.DisableWhen, "{ vm_deepresolver != camera }");
			hou_parm_template4.setTags({"autoscope": "0000000000000000", "filechooser_mode": "read_and_write", "mantra_class": "dcm", "mantra_name": "filename", "spare_category": "Deep Output"});
			hou_parm_template3.addParmTemplate(hou_parm_template4);
			hou_parm_template4 = new hou.ToggleParmTemplate({name: "vm_matchdeeppixelfilter", label: "Force DCM Pixel Fiter on Image Planes", default_value: true});
			hou_parm_template4.setConditional(hou.parmCondType.DisableWhen, "{ vm_deepresolver != camera }");
			hou_parm_template4.setTags({"autoscope": "0000000000000000", "mantra_class": "image", "mantra_name": "matchdeeppixelfilter", "spare_category": "Deep Output"});
			hou_parm_template3.addParmTemplate(hou_parm_template4);
			hou_parm_template4 = new hou.ToggleParmTemplate({name: "vm_dcmcompositing", label: "DCM Pre-Composite Samples", default_value: false});
			hou_parm_template4.setConditional(hou.parmCondType.DisableWhen, "{ vm_deepresolver != camera }");
			hou_parm_template4.setTags({"autoscope": "0000000000000000", "mantra_class": "dcm", "mantra_name": "compositing", "spare_category": "Deep Output"});
			hou_parm_template3.addParmTemplate(hou_parm_template4);
			hou_parm_template4 = new hou.StringParmTemplate({name: "vm_dcmdepthplanes", label: "DCM Special Planes", num_components: 1, default_value: ["zfront,zback"], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.Regular, menu_items: ["zfront,zback", "zfront", "zfront,zback,deepcover,deepflags"], menu_labels: ["Z-Front And Z-Back", "Z-Front", "Z-Front/Back, Coverage and Flags"], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.StringReplace});
			hou_parm_template4.setConditional(hou.parmCondType.DisableWhen, "{ vm_deepresolver != camera }");
			hou_parm_template4.setTags({"autoscope": "0000000000000000", "mantra_class": "dcm", "mantra_name": "depth_planes", "spare_category": "Deep Output"});
			hou_parm_template3.addParmTemplate(hou_parm_template4);
			hou_parm_template4 = new hou.StringParmTemplate({name: "vm_dsmfilename", label: "DSM Filename", num_components: 1, default_value: ["$HIP/dsm.rat"], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.FileReference, file_type: hou.fileType.Image, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "opmenu -l -a ropnet1/mantra1 vm_dsmfilename", item_generator_script_language: hou.scriptLanguage.Hscript, menu_type: hou.menuType.StringReplace});
			hou_parm_template4.setConditional(hou.parmCondType.DisableWhen, "{ vm_deepresolver != shadow }");
			hou_parm_template4.setTags({"autoscope": "0000000000000000", "filechooser_mode": "read_and_write", "mantra_class": "dsm", "mantra_name": "filename", "spare_category": "Deep Output"});
			hou_parm_template3.addParmTemplate(hou_parm_template4);
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template3 = new hou.FolderParmTemplate({name: "output6_3", label: "Cryptomatte", folder_type: hou.folderType.Tabs, default_value: 0, ends_tab_group: false});
			hou_parm_template3.setTags({"autoscope": "0000000000000000", "sidefx::switcher": "output"});
			hou_parm_template4 = new hou.FolderParmTemplate({name: "vm_cryptolayers", label: "Cryptomatte Layers", folder_type: hou.folderType.MultiparmBlock, default_value: 0, ends_tab_group: false});
			hou_parm_template4.setTags({"autoscope": "0000000000000000", "spare_category": "Cryptomatte"});
			hou_parm_template5 = new hou.ToggleParmTemplate({name: "vm_cryptolayerenable#", label: "vm_cryptolayerenable#", default_value: true});
			hou_parm_template5.hideLabel(true);
			hou_parm_template5.setJoinWithNext(true);
			hou_parm_template5.setTags({"autoscope": "0000000000000000"});
			hou_parm_template4.addParmTemplate(hou_parm_template5);
			hou_parm_template5 = new hou.StringParmTemplate({name: "vm_cryptolayerprop#", label: "Property", num_components: 1, default_value: ["materialname"], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.Regular, menu_items: ["materialname", "name"], menu_labels: ["Material Name", "Object Name"], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.StringReplace});
			hou_parm_template5.setTags({"autoscope": "0000000000000000"});
			hou_parm_template4.addParmTemplate(hou_parm_template5);
			hou_parm_template5 = new hou.StringParmTemplate({name: "vm_cryptolayername#", label: "Channel Name", num_components: 1, default_value: ["CryptoMaterial"], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.Regular, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal});
			hou_parm_template5.setTags({"autoscope": "0000000000000000"});
			hou_parm_template4.addParmTemplate(hou_parm_template5);
			hou_parm_template5 = new hou.IntParmTemplate({name: "vm_cryptolayerrank#", label: "Overlap Limit", num_components: 1, default_value: [6], min: 1, max: 10, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.Base1, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal, menu_use_token: false});
			hou_parm_template5.setTags({"autoscope": "0000000000000000"});
			hou_parm_template4.addParmTemplate(hou_parm_template5);
			hou_parm_template5 = new hou.ToggleParmTemplate({name: "vm_cryptolayeroutputenable#", label: "vm_cryptolayeroutputenable#", default_value: false});
			hou_parm_template5.hideLabel(true);
			hou_parm_template5.setJoinWithNext(true);
			hou_parm_template5.setTags({"autoscope": "0000000000000000"});
			hou_parm_template4.addParmTemplate(hou_parm_template5);
			hou_parm_template5 = new hou.StringParmTemplate({name: "vm_cryptolayeroutput#", label: "Different File", num_components: 1, default_value: ["$HIP/CryptoMaterial.exr"], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.FileReference, file_type: hou.fileType.Any, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.StringReplace});
			hou_parm_template5.setConditional(hou.parmCondType.DisableWhen, "{ vm_cryptolayeroutputenable# != 1 }");
			hou_parm_template5.setTags({"autoscope": "0000000000000000", "filechooser_mode": "write"});
			hou_parm_template4.addParmTemplate(hou_parm_template5);
			hou_parm_template5 = new hou.ToggleParmTemplate({name: "vm_cryptolayersidecarenable#", label: "vm_cryptolayersidecarenable#", default_value: false});
			hou_parm_template5.hideLabel(true);
			hou_parm_template5.setJoinWithNext(true);
			hou_parm_template5.setTags({"autoscope": "0000000000000000"});
			hou_parm_template4.addParmTemplate(hou_parm_template5);
			hou_parm_template5 = new hou.StringParmTemplate({name: "vm_cryptolayersidecar#", label: "Manifest File", num_components: 1, default_value: ["CryptoMaterial.json"], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.Regular, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal});
			hou_parm_template5.setConditional(hou.parmCondType.DisableWhen, "{ vm_cryptolayersidecarenable# != 1 }");
			hou_parm_template5.setTags({"autoscope": "0000000000000000"});
			hou_parm_template4.addParmTemplate(hou_parm_template5);
			hou_parm_template3.addParmTemplate(hou_parm_template4);
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template3 = new hou.FolderParmTemplate({name: "output6_4", label: "Meta Data", folder_type: hou.folderType.Tabs, default_value: 0, ends_tab_group: false});
			hou_parm_template3.setTags({"autoscope": "0000000000000000", "sidefx::switcher": "output"});
			hou_parm_template4 = new hou.StringParmTemplate({name: "vm_image_artist", label: "Artist", num_components: 1, default_value: [""], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.Regular, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal});
			hou_parm_template4.setTags({"autoscope": "0000000000000000", "mantra_class": "imageoption", "mantra_name": "artist", "spare_category": "Meta Data"});
			hou_parm_template3.addParmTemplate(hou_parm_template4);
			hou_parm_template4 = new hou.StringParmTemplate({name: "vm_image_comment", label: "Comment", num_components: 1, default_value: [""], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.Regular, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal});
			hou_parm_template4.setTags({"autoscope": "0000000000000000", "mantra_class": "imageoption", "mantra_name": "comment", "spare_category": "Meta Data"});
			hou_parm_template3.addParmTemplate(hou_parm_template4);
			hou_parm_template4 = new hou.StringParmTemplate({name: "vm_image_hostname", label: "Hostname", num_components: 1, default_value: [""], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.Regular, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal});
			hou_parm_template4.setTags({"autoscope": "0000000000000000", "mantra_class": "imageoption", "mantra_name": "hostname", "spare_category": "Meta Data"});
			hou_parm_template3.addParmTemplate(hou_parm_template4);
			hou_parm_template4 = new hou.StringParmTemplate({name: "vm_image_mplay_direction", label: "MPlay Tile Order", num_components: 1, default_value: ["middle"], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.Regular, menu_items: ["middle", "top", "bottom", "hilbert"], menu_labels: ["Interactive (starting in middle)", "Top down", "Bottom up", "Hilbert Curve"], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal});
			hou_parm_template4.setTags({"autoscope": "0000000000000000", "mantra_class": "imageoption", "mantra_name": "IPlay.direction", "spare_category": "Meta Data"});
			hou_parm_template3.addParmTemplate(hou_parm_template4);
			hou_parm_template4 = new hou.StringParmTemplate({name: "vm_image_mplay_framemode", label: "MPlay Frame Mode", num_components: 1, default_value: ["append"], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.Regular, menu_items: ["append", "match"], menu_labels: ["Append Frames To Sequence", "Match Houdini Frame Numbers (overwrite frame)"], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal});
			hou_parm_template4.setTags({"autoscope": "0000000000000000", "mantra_class": "imageoption", "mantra_name": "IPlay.framemode", "spare_category": "Meta Data"});
			hou_parm_template3.addParmTemplate(hou_parm_template4);
			hou_parm_template4 = new hou.StringParmTemplate({name: "vm_image_mplay_label", label: "MPlay Session Label", num_components: 1, default_value: ["$HIPNAME"], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.Regular, menu_items: ["`pythonexprs(\"__import__(\'os\').getpid()\")`", "$HIPNAME", "$OS", ""], menu_labels: ["One per Houdini Process", "One per Houdini File Name (.hip)", "One per Output Driver Name (ROP)", "One MPlay session only"], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.StringReplace});
			hou_parm_template4.setTags({"autoscope": "0000000000000000", "mantra_class": "imageoption", "mantra_name": "IPlay.label", "spare_category": "Meta Data"});
			hou_parm_template3.addParmTemplate(hou_parm_template4);
			hou_parm_template4 = new hou.IntParmTemplate({name: "vm_image_jpeg_quality", label: "JPEG Quality", num_components: 1, default_value: [100], min: 20, max: 100, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.Base1, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal, menu_use_token: false});
			hou_parm_template4.setTags({"autoscope": "0000000000000000", "mantra_class": "imageoption", "mantra_name": "JPEG.quality", "spare_category": "Meta Data"});
			hou_parm_template3.addParmTemplate(hou_parm_template4);
			hou_parm_template4 = new hou.StringParmTemplate({name: "vm_image_tiff_compression", label: "TIFF Compression", num_components: 1, default_value: ["LZW"], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.Regular, menu_items: ["None", "LZW", "AdobeDeflate", "PackBits", "JPEG", "PixarLog", "SGILog", "SGILog24"], menu_labels: ["No compression", "LZW Compression", "Adobe Deflate", "PackBits", "JPEG", "Pixar Log", "LogLuv", "LogLuv (24 bit)"], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal});
			hou_parm_template4.setTags({"autoscope": "0000000000000000", "mantra_class": "imageoption", "mantra_name": "TIFF.compression", "spare_category": "Meta Data"});
			hou_parm_template3.addParmTemplate(hou_parm_template4);
			hou_parm_template4 = new hou.StringParmTemplate({name: "vm_image_exr_compression", label: "EXR Compression", num_components: 1, default_value: ["zips"], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.Regular, menu_items: ["none", "dwab", "dwaa", "piz", "rle", "zips", "zip", "pxr24", "b44", "b44a"], menu_labels: ["No compression", "DWA-B, Lossy and Fast (256-scanline block)", "DWA-A, Lossy and Fast (32-scanline block),", "PIZ Wavelet", "Runlength Encoding", "ZIP (Single scanline)", "ZIP (Multi-scanline blocks)", "PXR24 (32 bit float compression, lossy)", "B44 (4x4 block compression, lossy)", "B44A (4x4 block extra compression, lossy)"], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal});
			hou_parm_template4.setTags({"autoscope": "0000000000000000", "mantra_class": "imageoption", "mantra_name": "OpenEXR.compression", "spare_category": "Meta Data"});
			hou_parm_template3.addParmTemplate(hou_parm_template4);
			hou_parm_template4 = new hou.FloatParmTemplate({name: "vm_image_exr_dwa_level", label: "DWA Compression Level", num_components: 1, default_value: [85], min: 1, max: 200, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.Base1});
			hou_parm_template4.setConditional(hou.parmCondType.HideWhen, "{ vm_image_exr_compression != dwab vm_image_exr_compression != dwaa }");
			hou_parm_template4.setTags({"autoscope": "0000000000000000", "mantra_class": "imageoption", "mantra_name": "OpenEXR.dwa_compression", "spare_category": "Meta Data"});
			hou_parm_template3.addParmTemplate(hou_parm_template4);
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template2 = new hou.FolderParmTemplate({name: "images6_1", label: "Rendering", folder_type: hou.folderType.Tabs, default_value: 0, ends_tab_group: false});
			hou_parm_template2.setTags({"autoscope": "0000000000000000", "sidefx::switcher": "images"});
			hou_parm_template3 = new hou.StringParmTemplate({name: "vm_renderengine", label: "Rendering Engine", num_components: 1, default_value: ["raytrace"], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.Regular, menu_items: ["micropoly", "raytrace", "pbrmicropoly", "pbrraytrace", "photon"], menu_labels: ["Micropolygon Rendering", "Ray Tracing", "Micropolygon Physically Based Rendering", "Physically Based Rendering", "Photon Map Generation"], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal});
			hou_parm_template3.setTags({"autoscope": "0000000000000000", "mantra_class": "renderer", "mantra_force_output": "1", "mantra_name": "renderengine", "spare_category": "Rendering"});
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template3 = new hou.ToggleParmTemplate({name: "vm_dof", label: "Enable Depth Of Field", default_value: false});
			hou_parm_template3.setTags({"autoscope": "0000000000000000", "spare_category": "Rendering"});
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template3 = new hou.ToggleParmTemplate({name: "allowmotionblur", label: "Allow Motion Blur", default_value: false});
			hou_parm_template3.setTags({"autoscope": "0000000000000000", "spare_category": "Rendering"});
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template3 = new hou.IntParmTemplate({name: "xform_motionsamples", label: "Xform Time Samples", num_components: 1, default_value: [2], min: 1, max: 10, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.Base1, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal, menu_use_token: false});
			hou_parm_template3.setConditional(hou.parmCondType.HideWhen, "{ allowmotionblur == 0 }");
			hou_parm_template3.setTags({"autoscope": "0000000000000000", "spare_category": "Rendering"});
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template3 = new hou.IntParmTemplate({name: "geo_motionsamples", label: "Geo Time Samples", num_components: 1, default_value: [1], min: 1, max: 10, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.Base1, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal, menu_use_token: false});
			hou_parm_template3.setConditional(hou.parmCondType.HideWhen, "{ allowmotionblur == 0 }");
			hou_parm_template3.setTags({"autoscope": "0000000000000000", "spare_category": "Rendering"});
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template3 = new hou.FloatParmTemplate({name: "shutteroffset", label: "Shutter Offset", num_components: 1, default_value: [1], min: null, max: 1, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.Base1});
			hou_parm_template3.setConditional(hou.parmCondType.HideWhen, "{ allowmotionblur == 0 }");
			hou_parm_template3.setTags({"autoscope": "0000000000000000", "spare_category": "Rendering"});
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template3 = new hou.ToggleParmTemplate({name: "vm_traceblur", label: "Raytrace Motion Blur", default_value: false});
			hou_parm_template3.setConditional(hou.parmCondType.HideWhen, "{ allowmotionblur == 0 } { vm_renderengine != micropoly vm_renderengine != pbrmicropoly }");
			hou_parm_template3.setTags({"autoscope": "0000000000000000", "mantra_class": "object", "mantra_name": "traceblur", "spare_category": "Rendering"});
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template3 = new hou.FolderParmTemplate({name: "sampling7", label: "Sampling", folder_type: hou.folderType.Tabs, default_value: 0, ends_tab_group: false});
			hou_parm_template3.setTags({"autoscope": "0000000000000000", "sidefx::switcher": "sampling"});
			hou_parm_template4 = new hou.IntParmTemplate({name: "vm_samples", label: "Pixel Samples", num_components: 2, default_value: [3, 3], min: 1, max: 32, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.XYZW, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal, menu_use_token: false});
			hou_parm_template4.setTags({"autoscope": "0000000000000000", "mantra_class": "image", "mantra_force_output": "1", "mantra_name": "samples", "spare_category": "Sampling"});
			hou_parm_template3.addParmTemplate(hou_parm_template4);
			hou_parm_template4 = new hou.ToggleParmTemplate({name: "vm_dorayvariance", label: "Ray Variance Antialiasing", default_value: true});
			hou_parm_template4.setTags({"autoscope": "0000000000000000", "mantra_class": "object", "mantra_name": "dorayvariance", "spare_category": "Sampling"});
			hou_parm_template3.addParmTemplate(hou_parm_template4);
			hou_parm_template4 = new hou.StringParmTemplate({name: "vm_colorspace", label: "Variance Color Space", num_components: 1, default_value: ["gamma"], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.Regular, menu_items: ["linear", "gamma"], menu_labels: ["Linear", "Gamma 2.2"], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal});
			hou_parm_template4.setConditional(hou.parmCondType.HideWhen, "{ vm_dorayvariance == 0 }");
			hou_parm_template4.setTags({"autoscope": "0000000000000000", "mantra_class": "renderer", "mantra_force_output": "1", "mantra_name": "colorspace", "spare_category": "Sampling"});
			hou_parm_template3.addParmTemplate(hou_parm_template4);
			hou_parm_template4 = new hou.LabelParmTemplate({name: "labelparm", label: "Maximum Number of Indirect Samples", column_labels: ["Maximum number of indirect samples: `floor(ch(vm_maxraysamples) * (ch(vm_globalquality) * (ch(vm_diffusequality) + ch(vm_sssquality) + ch(vm_reflectionquality) + ch(vm_refractionquality) ) + 1) )`"]});
			hou_parm_template4.setConditional(hou.parmCondType.HideWhen, "{ vm_dorayvariance == 0 }");
			hou_parm_template4.hideLabel(true);
			hou_parm_template4.setTags({"autoscope": "0000000000000000", "spare_category": "Sampling"});
			hou_parm_template3.addParmTemplate(hou_parm_template4);
			hou_parm_template4 = new hou.IntParmTemplate({name: "vm_minraysamples", label: "Min Ray Samples", num_components: 1, default_value: [1], min: 1, max: 64, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.Base1, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal, menu_use_token: false});
			hou_parm_template4.setTags({"autoscope": "0000000000000000", "mantra_class": "object", "mantra_name": "minraysamples", "spare_category": "Sampling"});
			hou_parm_template3.addParmTemplate(hou_parm_template4);
			hou_parm_template4 = new hou.IntParmTemplate({name: "vm_maxraysamples", label: "Max Ray Samples", num_components: 1, default_value: [9], min: 1, max: 64, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.Base1, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal, menu_use_token: false});
			hou_parm_template4.setConditional(hou.parmCondType.HideWhen, "{ vm_dorayvariance == 0 }");
			hou_parm_template4.setTags({"autoscope": "0000000000000000", "mantra_class": "object", "mantra_name": "maxraysamples", "spare_category": "Sampling"});
			hou_parm_template3.addParmTemplate(hou_parm_template4);
			hou_parm_template4 = new hou.FloatParmTemplate({name: "vm_variance", label: "Noise Level", num_components: 1, default_value: [0.01], min: 0, max: 0.1, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Logarithmic, naming_scheme: hou.parmNamingScheme.Base1});
			hou_parm_template4.setConditional(hou.parmCondType.HideWhen, "{ vm_dorayvariance == 0 }");
			hou_parm_template4.setTags({"autoscope": "0000000000000000", "mantra_class": "object", "mantra_name": "variance", "spare_category": "Sampling"});
			hou_parm_template3.addParmTemplate(hou_parm_template4);
			hou_parm_template4 = new hou.FloatParmTemplate({name: "vm_globalquality", label: "Global Quality", num_components: 1, default_value: [1], min: 0, max: 10, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.Base1});
			hou_parm_template4.setConditional(hou.parmCondType.HideWhen, "{ vm_dorayvariance == 0 }");
			hou_parm_template4.setTags({"autoscope": "0000000000000000", "mantra_class": "object", "mantra_name": "globalquality", "spare_category": "Sampling"});
			hou_parm_template3.addParmTemplate(hou_parm_template4);
			hou_parm_template4 = new hou.FloatParmTemplate({name: "vm_diffusequality", label: "Diffuse Quality", num_components: 1, default_value: [1], min: 0, max: 10, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.Base1});
			hou_parm_template4.setConditional(hou.parmCondType.HideWhen, "{ vm_dorayvariance == 0 }");
			hou_parm_template4.setTags({"autoscope": "0000000000000000", "mantra_class": "object", "mantra_name": "diffusequality", "spare_category": "Sampling"});
			hou_parm_template3.addParmTemplate(hou_parm_template4);
			hou_parm_template4 = new hou.FloatParmTemplate({name: "vm_sssquality", label: "SSS Quality", num_components: 1, default_value: [1], min: 0, max: 10, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.Base1});
			hou_parm_template4.setConditional(hou.parmCondType.HideWhen, "{ vm_dorayvariance == 0 }");
			hou_parm_template4.setTags({"autoscope": "0000000000000000", "mantra_class": "object", "mantra_name": "sssquality", "spare_category": "Sampling"});
			hou_parm_template3.addParmTemplate(hou_parm_template4);
			hou_parm_template4 = new hou.FloatParmTemplate({name: "vm_reflectionquality", label: "Reflection Quality", num_components: 1, default_value: [1], min: 0, max: 10, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.Base1});
			hou_parm_template4.setConditional(hou.parmCondType.HideWhen, "{ vm_dorayvariance == 0 }");
			hou_parm_template4.setTags({"autoscope": "0000000000000000", "mantra_class": "object", "mantra_name": "reflectionquality", "spare_category": "Sampling"});
			hou_parm_template3.addParmTemplate(hou_parm_template4);
			hou_parm_template4 = new hou.FloatParmTemplate({name: "vm_refractionquality", label: "Refraction Quality", num_components: 1, default_value: [1], min: 0, max: 10, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.Base1});
			hou_parm_template4.setConditional(hou.parmCondType.HideWhen, "{ vm_dorayvariance == 0 }");
			hou_parm_template4.setTags({"autoscope": "0000000000000000", "mantra_class": "object", "mantra_name": "refractionquality", "spare_category": "Sampling"});
			hou_parm_template3.addParmTemplate(hou_parm_template4);
			hou_parm_template4 = new hou.FloatParmTemplate({name: "vm_volumequality", label: "Volume Quality", num_components: 1, default_value: [1], min: 0, max: 10, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.Base1});
			hou_parm_template4.setConditional(hou.parmCondType.HideWhen, "{ vm_dorayvariance == 0 }");
			hou_parm_template4.setTags({"autoscope": "0000000000000000", "mantra_class": "object", "mantra_name": "volumequality", "spare_category": "Sampling"});
			hou_parm_template3.addParmTemplate(hou_parm_template4);
			hou_parm_template4 = new hou.FloatParmTemplate({name: "vm_volumesteprate", label: "Volume Step Rate", num_components: 1, default_value: [0.25], min: 0.1, max: 10, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Logarithmic, naming_scheme: hou.parmNamingScheme.Base1});
			hou_parm_template4.setTags({"autoscope": "0000000000000000", "mantra_class": "object", "mantra_name": "volumesteprate", "spare_category": "Sampling"});
			hou_parm_template3.addParmTemplate(hou_parm_template4);
			hou_parm_template4 = new hou.FloatParmTemplate({name: "vm_volumeshadowsteprate", label: "Volume Shadow Step Rate", num_components: 1, default_value: [1], min: 0.1, max: 10, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Logarithmic, naming_scheme: hou.parmNamingScheme.Base1});
			hou_parm_template4.setTags({"autoscope": "0000000000000000", "mantra_class": "object", "mantra_name": "volumeshadowsteprate", "spare_category": "Sampling"});
			hou_parm_template3.addParmTemplate(hou_parm_template4);
			hou_parm_template4 = new hou.ToggleParmTemplate({name: "vm_transparent", label: "Stochastic Transparency", default_value: true});
			hou_parm_template4.setConditional(hou.parmCondType.DisableWhen, "{ vm_renderengine == micropoly } { vm_renderengine == pbrmicropoly } { vm_renderengine == photon }");
			hou_parm_template4.setTags({"autoscope": "0000000000000000", "mantra_class": "image", "mantra_name": "transparent", "spare_category": "Sampling"});
			hou_parm_template3.addParmTemplate(hou_parm_template4);
			hou_parm_template4 = new hou.IntParmTemplate({name: "vm_transparentsamples", label: "Stochastic Samples", num_components: 1, default_value: [4], min: 1, max: 16, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.Base1, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal, menu_use_token: false});
			hou_parm_template4.setConditional(hou.parmCondType.DisableWhen, "{ vm_transparent == 0 } { vm_renderengine == micropoly } { vm_renderengine == pbrmicropoly } { vm_renderengine == photon }");
			hou_parm_template4.setTags({"autoscope": "0000000000000000", "mantra_class": "image", "mantra_name": "transparentsamples", "spare_category": "Sampling"});
			hou_parm_template3.addParmTemplate(hou_parm_template4);
			hou_parm_template4 = new hou.ToggleParmTemplate({name: "vm_samplelock", label: "Sample Lock", default_value: false});
			hou_parm_template4.setTags({"autoscope": "0000000000000000", "mantra_class": "image", "mantra_name": "samplelock", "spare_category": "Sampling"});
			hou_parm_template3.addParmTemplate(hou_parm_template4);
			hou_parm_template4 = new hou.IntParmTemplate({name: "vm_randomseed", label: "Random Seed", num_components: 1, default_value: [0], min: 0, max: 10, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.Base1, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal, menu_use_token: false});
			hou_parm_template4.setTags({"autoscope": "0000000000000000", "mantra_class": "image", "mantra_name": "randomseed", "spare_category": "Sampling"});
			hou_parm_template3.addParmTemplate(hou_parm_template4);
			hou_parm_template4 = new hou.ToggleParmTemplate({name: "vm_imageblur", label: "Allow Image Motion Blur", default_value: true});
			hou_parm_template4.setConditional(hou.parmCondType.DisableWhen, "{ allowmotionblur == 0 }");
			hou_parm_template4.setTags({"autoscope": "0000000000000000", "mantra_class": "renderer", "mantra_name": "imageblur", "spare_category": "Sampling"});
			hou_parm_template3.addParmTemplate(hou_parm_template4);
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template3 = new hou.FolderParmTemplate({name: "sampling7_1", label: "Limits", folder_type: hou.folderType.Tabs, default_value: 0, ends_tab_group: false});
			hou_parm_template3.setTags({"autoscope": "0000000000000000", "sidefx::switcher": "sampling"});
			hou_parm_template4 = new hou.IntParmTemplate({name: "vm_reflectlimit", label: "Reflect Limit", num_components: 1, default_value: [10], min: 0, max: 10, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.Base1, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal, menu_use_token: false});
			hou_parm_template4.setTags({"autoscope": "0000000000000000", "mantra_class": "object", "mantra_name": "reflectlimit", "spare_category": "Limits"});
			hou_parm_template3.addParmTemplate(hou_parm_template4);
			hou_parm_template4 = new hou.IntParmTemplate({name: "vm_refractlimit", label: "Refract Limit", num_components: 1, default_value: [10], min: 0, max: 10, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.Base1, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal, menu_use_token: false});
			hou_parm_template4.setTags({"autoscope": "0000000000000000", "mantra_class": "object", "mantra_name": "refractlimit", "spare_category": "Limits"});
			hou_parm_template3.addParmTemplate(hou_parm_template4);
			hou_parm_template4 = new hou.IntParmTemplate({name: "vm_diffuselimit", label: "Diffuse Limit", num_components: 1, default_value: [0], min: 0, max: 10, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.Base1, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal, menu_use_token: false});
			hou_parm_template4.setTags({"autoscope": "0000000000000000", "mantra_class": "object", "mantra_name": "diffuselimit", "spare_category": "Limits"});
			hou_parm_template3.addParmTemplate(hou_parm_template4);
			hou_parm_template4 = new hou.IntParmTemplate({name: "vm_ssslimit", label: "SSS Limit", num_components: 1, default_value: [0], min: 0, max: 10, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.Base1, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal, menu_use_token: false});
			hou_parm_template4.setTags({"autoscope": "0000000000000000", "mantra_class": "object", "mantra_name": "ssslimit", "spare_category": "Limits"});
			hou_parm_template3.addParmTemplate(hou_parm_template4);
			hou_parm_template4 = new hou.IntParmTemplate({name: "vm_volumelimit", label: "Volume Limit", num_components: 1, default_value: [0], min: 0, max: 10, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.Base1, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal, menu_use_token: false});
			hou_parm_template4.setTags({"autoscope": "0000000000000000", "mantra_class": "object", "mantra_name": "volumelimit", "spare_category": "Limits"});
			hou_parm_template3.addParmTemplate(hou_parm_template4);
			hou_parm_template4 = new hou.FloatParmTemplate({name: "vm_opacitylimit", label: "Opacity Limit", num_components: 1, default_value: [0.995], min: 0, max: 1, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.Base1});
			hou_parm_template4.setTags({"autoscope": "0000000000000000", "mantra_class": "image", "mantra_name": "opacitylimit", "spare_category": "Limits"});
			hou_parm_template3.addParmTemplate(hou_parm_template4);
			hou_parm_template4 = new hou.FloatParmTemplate({name: "vm_colorlimit", label: "Color Limit", num_components: 1, default_value: [10], min: 0, max: 20, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.Base1});
			hou_parm_template4.setTags({"autoscope": "0000000000000000", "mantra_class": "image", "mantra_name": "colorlimit", "spare_category": "Limits"});
			hou_parm_template3.addParmTemplate(hou_parm_template4);
			hou_parm_template4 = new hou.StringParmTemplate({name: "vm_raylimiteval", label: "At Ray Limit", num_components: 1, default_value: ["none"], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.Regular, menu_items: ["none", "direct"], menu_labels: ["Use Black Background", "Use Direct Lighting as Background Color"], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal});
			hou_parm_template4.setTags({"autoscope": "0000000000000000", "mantra_class": "renderer", "mantra_name": "raylimiteval", "spare_category": "Limits"});
			hou_parm_template3.addParmTemplate(hou_parm_template4);
			hou_parm_template4 = new hou.StringParmTemplate({name: "vm_raylimitcomponents", label: "Ray Limit Components", num_components: 1, default_value: ["all"], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.Regular, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal});
			hou_parm_template4.setConditional(hou.parmCondType.HideWhen, "{ vm_raylimiteval != direct }");
			hou_parm_template4.setTags({"autoscope": "0000000000000000", "mantra_class": "renderer", "mantra_name": "raylimitcomponents", "spare_category": "Limits"});
			hou_parm_template3.addParmTemplate(hou_parm_template4);
			hou_parm_template4 = new hou.StringParmTemplate({name: "vm_raylimitlightmask", label: "Ray Limit Light Mask", num_components: 1, default_value: ["*"], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.NodeReferenceList, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal});
			hou_parm_template4.setConditional(hou.parmCondType.HideWhen, "{ vm_raylimiteval != direct }");
			hou_parm_template4.setTags({"autoscope": "0000000000000000", "mantra_class": "renderer", "mantra_name": "raylimitlightmask", "opexpand": "1", "opfilter": "!!OBJ/LIGHT!!", "oprelative": "/", "spare_category": "Limits"});
			hou_parm_template3.addParmTemplate(hou_parm_template4);
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template3 = new hou.FolderParmTemplate({name: "sampling7_2", label: "Shading", folder_type: hou.folderType.Tabs, default_value: 0, ends_tab_group: false});
			hou_parm_template3.setTags({"autoscope": "0000000000000000", "sidefx::switcher": "sampling"});
			hou_parm_template4 = new hou.FloatParmTemplate({name: "vm_raybias", label: "Raytracing Bias", num_components: 1, default_value: [0.001], min: 0, max: 10, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.Base1});
			hou_parm_template4.setTags({"autoscope": "0000000000000000", "mantra_class": "renderer", "mantra_name": "raybias", "spare_category": "Shading"});
			hou_parm_template3.addParmTemplate(hou_parm_template4);
			hou_parm_template4 = new hou.ToggleParmTemplate({name: "vm_biasnormal", label: "Bias Along Normal", default_value: false});
			hou_parm_template4.setTags({"autoscope": "0000000000000000", "mantra_class": "object", "mantra_name": "biasnormal", "spare_category": "Shading"});
			hou_parm_template3.addParmTemplate(hou_parm_template4);
			hou_parm_template4 = new hou.ToggleParmTemplate({name: "vm_nesteddielectric", label: "Enable Absorption and Nested Dielectrics", default_value: false});
			hou_parm_template4.setTags({"autoscope": "0000000000000000", "mantra_class": "renderer", "mantra_name": "nesteddielectric", "spare_category": "Shading"});
			hou_parm_template3.addParmTemplate(hou_parm_template4);
			hou_parm_template4 = new hou.StringParmTemplate({name: "vm_pbrpathtype", label: "Allowable Paths", num_components: 1, default_value: ["diffuse"], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.Regular, menu_items: ["diffuse", "all"], menu_labels: ["Specular, Diffuse Paths", "All Paths"], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal});
			hou_parm_template4.setTags({"autoscope": "0000000000000000", "mantra_class": "renderer", "mantra_name": "pbrpathtype", "spare_category": "Shading"});
			hou_parm_template3.addParmTemplate(hou_parm_template4);
			hou_parm_template4 = new hou.ToggleParmTemplate({name: "vm_constrainmaxrough", label: "Constrain by Maximum Roughness", default_value: false});
			hou_parm_template4.setTags({"autoscope": "0000000000000000", "mantra_class": "renderer", "mantra_name": "constrainmaxrough", "spare_category": "Shading"});
			hou_parm_template3.addParmTemplate(hou_parm_template4);
			hou_parm_template4 = new hou.StringParmTemplate({name: "vm_refractcomponents", label: "Refract Components", num_components: 1, default_value: ["refract"], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.Regular, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal});
			hou_parm_template4.setTags({"autoscope": "0000000000000000", "mantra_class": "renderer", "mantra_name": "refractcomponents", "spare_category": "Shading"});
			hou_parm_template3.addParmTemplate(hou_parm_template4);
			hou_parm_template4 = new hou.StringParmTemplate({name: "vm_diffusecomponents", label: "Diffuse Components", num_components: 1, default_value: ["diffuse"], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.Regular, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal});
			hou_parm_template4.setTags({"autoscope": "0000000000000000", "mantra_class": "renderer", "mantra_name": "diffusecomponents", "spare_category": "Shading"});
			hou_parm_template3.addParmTemplate(hou_parm_template4);
			hou_parm_template4 = new hou.StringParmTemplate({name: "vm_volumecomponents", label: "Volume Components", num_components: 1, default_value: ["volume"], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.Regular, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal});
			hou_parm_template4.setTags({"autoscope": "0000000000000000", "mantra_class": "renderer", "mantra_name": "volumecomponents", "spare_category": "Shading"});
			hou_parm_template3.addParmTemplate(hou_parm_template4);
			hou_parm_template4 = new hou.StringParmTemplate({name: "vm_ssscomponents", label: "SSS Components", num_components: 1, default_value: ["sss"], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.Regular, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal});
			hou_parm_template4.setTags({"autoscope": "0000000000000000", "mantra_class": "renderer", "mantra_name": "ssscomponents", "spare_category": "Shading"});
			hou_parm_template3.addParmTemplate(hou_parm_template4);
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template3 = new hou.FolderParmTemplate({name: "sampling7_3", label: "Render", folder_type: hou.folderType.Tabs, default_value: 0, ends_tab_group: false});
			hou_parm_template3.setTags({"autoscope": "0000000000000000", "sidefx::switcher": "sampling"});
			hou_parm_template4 = new hou.IntParmTemplate({name: "vm_bucketsize", label: "Tile Size", num_components: 1, default_value: [16], min: 1, max: 64, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.Base1, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal, menu_use_token: false});
			hou_parm_template4.setTags({"autoscope": "0000000000000000", "mantra_class": "image", "mantra_name": "bucket", "spare_category": "Render"});
			hou_parm_template3.addParmTemplate(hou_parm_template4);
			hou_parm_template4 = new hou.IntParmTemplate({name: "vm_usemaxthreads", label: "Use Max Processors", num_components: 1, default_value: [1], min: 0, max: 10, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.Base1, menu_items: ["0", "1", "2"], menu_labels: ["User Specified Thread Count", "Use All Processors", "Use All Processors Except One"], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal, menu_use_token: false});
			hou_parm_template4.setTags({"autoscope": "0000000000000000", "mantra_class": "renderer", "mantra_name": "usemaxthreads", "spare_category": "Render"});
			hou_parm_template3.addParmTemplate(hou_parm_template4);
			hou_parm_template4 = new hou.IntParmTemplate({name: "vm_threadcount", label: "Thread Count", num_components: 1, default_value: [1], min: 1, max: 16, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.Base1, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal, menu_use_token: false});
			hou_parm_template4.setConditional(hou.parmCondType.DisableWhen, "{ vm_usemaxthreads > 0 }");
			hou_parm_template4.setTags({"autoscope": "0000000000000000", "mantra_class": "renderer", "mantra_name": "threadcount", "spare_category": "Render"});
			hou_parm_template3.addParmTemplate(hou_parm_template4);
			hou_parm_template4 = new hou.IntParmTemplate({name: "vm_usecacheratio", label: "Cache Limit", num_components: 1, default_value: [1], min: 0, max: 10, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.Base1, menu_items: ["0", "1"], menu_labels: ["Fixed Size", "Proportion of Physical Memory"], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal, menu_use_token: false});
			hou_parm_template4.setTags({"autoscope": "0000000000000000", "mantra_class": "renderer", "mantra_name": "usecacheratio", "mantra_type": "bool", "spare_category": "Render"});
			hou_parm_template3.addParmTemplate(hou_parm_template4);
			hou_parm_template4 = new hou.FloatParmTemplate({name: "vm_cacheratio", label: "Cache Memory Ratio", num_components: 1, default_value: [0.25], min: 0, max: 1, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.Base1});
			hou_parm_template4.setConditional(hou.parmCondType.HideWhen, "{ vm_usecacheratio != 1 }");
			hou_parm_template4.setTags({"autoscope": "0000000000000000", "mantra_class": "renderer", "mantra_name": "cacheratio", "spare_category": "Render"});
			hou_parm_template3.addParmTemplate(hou_parm_template4);
			hou_parm_template4 = new hou.IntParmTemplate({name: "vm_cachesize", label: "Cache Size (MB)", num_components: 1, default_value: [1000], min: 100, max: 100000, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Logarithmic, naming_scheme: hou.parmNamingScheme.Base1, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal, menu_use_token: false});
			hou_parm_template4.setConditional(hou.parmCondType.HideWhen, "{ vm_usecacheratio == 1 }");
			hou_parm_template4.setTags({"autoscope": "0000000000000000", "mantra_class": "renderer", "mantra_name": "cachesize", "spare_category": "Render"});
			hou_parm_template3.addParmTemplate(hou_parm_template4);
			hou_parm_template4 = new hou.StringParmTemplate({name: "vm_octreestyle", label: "Ray Tracing Accelerator", num_components: 1, default_value: ["bboxtree"], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.Regular, menu_items: ["kdtree", "bboxtree"], menu_labels: ["KD-Tree", "Bounding Volume Hierarchy"], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal});
			hou_parm_template4.setTags({"autoscope": "0000000000000000", "mantra_class": "renderer", "mantra_name": "octreestyle", "spare_category": "Render"});
			hou_parm_template3.addParmTemplate(hou_parm_template4);
			hou_parm_template4 = new hou.FloatParmTemplate({name: "vm_kdmemfactor", label: "KD-Tree Memory Factor", num_components: 1, default_value: [1], min: 0.001, max: 2, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.Base1});
			hou_parm_template4.setConditional(hou.parmCondType.HideWhen, "{ vm_octreestyle != kdtree }");
			hou_parm_template4.setTags({"autoscope": "0000000000000000", "mantra_class": "renderer", "mantra_name": "kdmemfactor", "spare_category": "Render"});
			hou_parm_template3.addParmTemplate(hou_parm_template4);
			hou_parm_template4 = new hou.ToggleParmTemplate({name: "vm_hidden", label: "Enable Hiding", default_value: true});
			hou_parm_template4.setTags({"autoscope": "0000000000000000", "mantra_class": "renderer", "mantra_name": "hidden", "spare_category": "Render"});
			hou_parm_template3.addParmTemplate(hou_parm_template4);
			hou_parm_template4 = new hou.ToggleParmTemplate({name: "vm_otlfullpath", label: "Output OTLs with full paths", default_value: false});
			hou_parm_template4.setTags({"autoscope": "0000000000000000", "spare_category": "Render"});
			hou_parm_template3.addParmTemplate(hou_parm_template4);
			hou_parm_template4 = new hou.ToggleParmTemplate({name: "vm_embedvex", label: "Force VEX Shader Embedding", default_value: false});
			hou_parm_template4.setTags({"autoscope": "0000000000000000", "spare_category": "Render"});
			hou_parm_template3.addParmTemplate(hou_parm_template4);
			hou_parm_template4 = new hou.StringParmTemplate({name: "declare_stylesheets", label: "Declare Style Sheets", num_components: 1, default_value: ["*"], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.Regular, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "opmenu -l -a ropnet1/mantra1 declare_stylesheets", item_generator_script_language: hou.scriptLanguage.Hscript, menu_type: hou.menuType.StringToggle});
			hou_parm_template4.setTags({"autoscope": "0000000000000000", "spare_category": "Render"});
			hou_parm_template3.addParmTemplate(hou_parm_template4);
			hou_parm_template4 = new hou.StringParmTemplate({name: "apply_stylesheets", label: "Apply Style Sheets", num_components: 1, default_value: ["`pythonexprs(\"\' \'.join(hou.styles.styles())\")`"], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.FileReference, file_type: hou.fileType.Any, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "opmenu -l -a ropnet1/mantra1 apply_stylesheets", item_generator_script_language: hou.scriptLanguage.Hscript, menu_type: hou.menuType.StringToggle});
			hou_parm_template4.setTags({"autoscope": "0000000000000000", "filechooser_pattern": "*.json", "spare_category": "Render"});
			hou_parm_template3.addParmTemplate(hou_parm_template4);
			hou_parm_template4 = new hou.MenuParmTemplate({name: "declare_all_shops", label: "Declare Materials", menu_items: ["off", "on", "all"], menu_labels: ["Save Only Referenced Materials and Shaders", "Save All Materials", "Save All Materials and Shaders"], default_value: 0, icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal, menu_use_token: false, is_button_strip: false, strip_uses_icons: false});
			hou_parm_template4.setTags({"autoscope": "0000000000000000", "spare_category": "Render"});
			hou_parm_template3.addParmTemplate(hou_parm_template4);
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template3 = new hou.FolderParmTemplate({name: "sampling7_4", label: "Dicing", folder_type: hou.folderType.Tabs, default_value: 0, ends_tab_group: false});
			hou_parm_template3.setTags({"autoscope": "0000000000000000", "sidefx::switcher": "sampling"});
			hou_parm_template4 = new hou.FloatParmTemplate({name: "vm_shadingfactor", label: "Shading Quality Multiplier", num_components: 1, default_value: [1], min: 0, max: 10, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.Base1});
			hou_parm_template4.setTags({"autoscope": "0000000000000000", "mantra_class": "renderer", "mantra_name": "shadingfactor", "spare_category": "Dicing"});
			hou_parm_template3.addParmTemplate(hou_parm_template4);
			hou_parm_template4 = new hou.FloatParmTemplate({name: "vm_motionfactor", label: "Motion Factor", num_components: 1, default_value: [0], min: 0, max: 1, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.Base1});
			hou_parm_template4.setConditional(hou.parmCondType.DisableWhen, "{ allowmotionblur == 0 vm_dof == 0 }");
			hou_parm_template4.setTags({"autoscope": "0000000000000000", "mantra_class": "object", "mantra_name": "motionfactor", "spare_category": "Dicing"});
			hou_parm_template3.addParmTemplate(hou_parm_template4);
			hou_parm_template4 = new hou.StringParmTemplate({name: "vm_measure", label: "Geometry Measuring", num_components: 1, default_value: ["nonraster"], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.Regular, menu_items: ["nonraster", "raster", "uniform"], menu_labels: ["Non-Raster Measuring", "Raster Space Measuring", "Uniform Measuring"], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal});
			hou_parm_template4.setTags({"autoscope": "0000000000000000", "spare_category": "Dicing"});
			hou_parm_template3.addParmTemplate(hou_parm_template4);
			hou_parm_template4 = new hou.FloatParmTemplate({name: "vm_measurezimportance", label: "Z-Importance", num_components: 1, default_value: [1], min: 0, max: 10, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.Base1});
			hou_parm_template4.setConditional(hou.parmCondType.DisableWhen, "{ vm_measure != nonraster }");
			hou_parm_template4.setTags({"autoscope": "0000000000000000", "mantra_class": "measure", "mantra_force_output": "1", "mantra_name": "zimportance", "spare_category": "Dicing"});
			hou_parm_template3.addParmTemplate(hou_parm_template4);
			hou_parm_template4 = new hou.FloatParmTemplate({name: "vm_measureoffscreenquality", label: "Offscreen Quality", num_components: 1, default_value: [0.25], min: 0, max: 1, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.Base1});
			hou_parm_template4.setConditional(hou.parmCondType.DisableWhen, "{ vm_measure != nonraster }");
			hou_parm_template4.setTags({"autoscope": "0000000000000000", "mantra_class": "measure", "mantra_force_output": "1", "mantra_name": "offscreenquality", "spare_category": "Dicing"});
			hou_parm_template3.addParmTemplate(hou_parm_template4);
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template3 = new hou.FolderParmTemplate({name: "sampling7_5", label: "Statistics", folder_type: hou.folderType.Tabs, default_value: 0, ends_tab_group: false});
			hou_parm_template3.setTags({"autoscope": "0000000000000000", "sidefx::switcher": "sampling"});
			hou_parm_template4 = new hou.MenuParmTemplate({name: "soho_spoolrenderoutput", label: "Render Output", menu_items: ["off", "on", "force"], menu_labels: ["Don't capture render output", "Capture render output for graphical apps", "Capture render output for all apps"], default_value: 1, icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal, menu_use_token: false, is_button_strip: false, strip_uses_icons: false});
			hou_parm_template4.setHelp("Controls whether to capture the render output and add to the node info");
			hou_parm_template4.setTags({"autoscope": "0000000000000000", "spare_category": "Statistics"});
			hou_parm_template3.addParmTemplate(hou_parm_template4);
			hou_parm_template4 = new hou.IntParmTemplate({name: "vm_verbose", label: "Verbose Level", num_components: 1, default_value: [0], min: 0, max: 5, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.Base1, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal, menu_use_token: false});
			hou_parm_template4.setTags({"autoscope": "0000000000000000", "mantra_class": "renderer", "mantra_force_output": "1", "mantra_name": "verbose", "spare_category": "Statistics"});
			hou_parm_template3.addParmTemplate(hou_parm_template4);
			hou_parm_template4 = new hou.IntParmTemplate({name: "vm_vexprofile", label: "VEX Profiling", num_components: 1, default_value: [0], min: 0, max: 10, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.Base1, menu_items: ["0", "1", "2"], menu_labels: ["No VEX Profiling", "Execution profiling", "Profiling and NAN detection"], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal, menu_use_token: false});
			hou_parm_template4.setTags({"autoscope": "0000000000000000", "mantra_class": "renderer", "mantra_name": "vexprofile", "spare_category": "Statistics"});
			hou_parm_template3.addParmTemplate(hou_parm_template4);
			hou_parm_template4 = new hou.ToggleParmTemplate({name: "vm_alfprogress", label: "Alfred Style Progress", default_value: false});
			hou_parm_template4.setTags({"autoscope": "0000000000000000", "mantra_class": "renderer", "mantra_name": "alfprogress", "spare_category": "Statistics"});
			hou_parm_template3.addParmTemplate(hou_parm_template4);
			hou_parm_template4 = new hou.StringParmTemplate({name: "vm_tilecallback", label: "Python Tile Callback", num_components: 1, default_value: [""], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.FileReference, file_type: hou.fileType.Any, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "opmenu -l -a ropnet1/mantra1 vm_tilecallback", item_generator_script_language: hou.scriptLanguage.Hscript, menu_type: hou.menuType.StringReplace});
			hou_parm_template4.setTags({"autoscope": "0000000000000000", "filechooser_mode": "read", "mantra_class": "renderer", "mantra_name": "tilecallback", "spare_category": "Statistics"});
			hou_parm_template3.addParmTemplate(hou_parm_template4);
			hou_parm_template4 = new hou.IntParmTemplate({name: "vm_logcolors", label: "Colorize Output", num_components: 1, default_value: [0], min: 0, max: 10, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.Base1, menu_items: ["0", "1", "2"], menu_labels: ["Colored Shell", "HTML Tags", "No Coloring"], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal, menu_use_token: false});
			hou_parm_template4.setTags({"autoscope": "0000000000000000", "mantra_class": "renderer", "mantra_force_output": "1", "mantra_name": "logcolors", "spare_category": "Statistics"});
			hou_parm_template3.addParmTemplate(hou_parm_template4);
			hou_parm_template4 = new hou.ToggleParmTemplate({name: "vm_logtimestamps", label: "Log Timestamp", default_value: true});
			hou_parm_template4.setTags({"autoscope": "0000000000000000", "mantra_class": "renderer", "mantra_name": "logtimestamps", "spare_category": "Statistics"});
			hou_parm_template3.addParmTemplate(hou_parm_template4);
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template2 = new hou.FolderParmTemplate({name: "images6_2", label: "Objects", folder_type: hou.folderType.Tabs, default_value: 0, ends_tab_group: false});
			hou_parm_template2.setTags({"autoscope": "0000000000000000", "sidefx::switcher": "images"});
			hou_parm_template3 = new hou.StringParmTemplate({name: "vobject", label: "Candidate Objects", num_components: 1, default_value: ["*"], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.NodeReferenceList, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal});
			hou_parm_template3.setHelp("Objects will not be output if their display flag is off");
			hou_parm_template3.setTags({"autoscope": "0000000000000000", "opfilter": "!!OBJ/GEOMETRY!!", "oprelative": "/obj"});
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template3 = new hou.StringParmTemplate({name: "forceobject", label: "Force Objects", num_components: 1, default_value: [""], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.NodeReferenceList, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal});
			hou_parm_template3.setHelp("Objects will be output regardless of the state of their display flag");
			hou_parm_template3.setTags({"autoscope": "0000000000000000", "opfilter": "!!OBJ/GEOMETRY!!", "oprelative": "/obj"});
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template3 = new hou.StringParmTemplate({name: "matte_objects", label: "Forced Matte", num_components: 1, default_value: [""], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.NodeReferenceList, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal});
			hou_parm_template3.setHelp("Objects forced to be output as matte objects");
			hou_parm_template3.setTags({"autoscope": "0000000000000000", "opfilter": "!!OBJ/GEOMETRY!!", "oprelative": "/obj"});
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template3 = new hou.StringParmTemplate({name: "phantom_objects", label: "Forced Phantom", num_components: 1, default_value: [""], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.NodeReferenceList, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal});
			hou_parm_template3.setHelp("Objects forced to be output as phantom objects");
			hou_parm_template3.setTags({"autoscope": "0000000000000000", "opfilter": "!!OBJ/GEOMETRY!!", "oprelative": "/obj"});
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template3 = new hou.StringParmTemplate({name: "excludeobject", label: "Exclude Objects", num_components: 1, default_value: [""], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.NodeReferenceList, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal});
			hou_parm_template3.setHelp("Objects which are not output");
			hou_parm_template3.setTags({"autoscope": "0000000000000000", "opfilter": "!!OBJ/GEOMETRY!!", "oprelative": "/obj"});
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template3 = new hou.SeparatorParmTemplate({name: "obj_light_sep"});
			hou_parm_template3.setTags({"autoscope": "0000000000000000"});
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template3 = new hou.StringParmTemplate({name: "sololight", label: "Solo Light", num_components: 1, default_value: [""], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.NodeReferenceList, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal});
			hou_parm_template3.setHelp("Solo Lights");
			hou_parm_template3.setTags({"autoscope": "0000000000000000", "opfilter": "!!OBJ/LIGHT!!", "oprelative": "/obj"});
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template3 = new hou.StringParmTemplate({name: "alights", label: "Candidate Lights", num_components: 1, default_value: ["*"], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.NodeReferenceList, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal});
			hou_parm_template3.setConditional(hou.parmCondType.DisableWhen, "{ sololight != \\\"\\\" }");
			hou_parm_template3.setHelp("Lights will not be output if their dimmer channel is 0.");
			hou_parm_template3.setTags({"autoscope": "0000000000000000", "opfilter": "!!OBJ/LIGHT!!", "oprelative": "/obj"});
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template3 = new hou.StringParmTemplate({name: "forcelights", label: "Force Lights", num_components: 1, default_value: [""], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.NodeReferenceList, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal});
			hou_parm_template3.setConditional(hou.parmCondType.DisableWhen, "{ sololight != \\\"\\\" }");
			hou_parm_template3.setHelp("Lights will be output regardless of the value of their dimmer channel");
			hou_parm_template3.setTags({"autoscope": "0000000000000000", "opfilter": "!!OBJ/LIGHT!!", "oprelative": "/obj"});
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template3 = new hou.StringParmTemplate({name: "excludelights", label: "Exclude Lights", num_components: 1, default_value: [""], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.NodeReferenceList, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal});
			hou_parm_template3.setConditional(hou.parmCondType.DisableWhen, "{ sololight != \\\"\\\" }");
			hou_parm_template3.setHelp("Lights will not be output under any circumstances.");
			hou_parm_template3.setTags({"autoscope": "0000000000000000", "opfilter": "!!OBJ/LIGHT!!", "oprelative": "/obj"});
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template3 = new hou.ToggleParmTemplate({name: "soho_autoheadlight", label: "Headlight Creation", default_value: true});
			hou_parm_template3.setConditional(hou.parmCondType.DisableWhen, "{ sololight != \\\"\\\" }");
			hou_parm_template3.setHelp("By default, if there are no lights in the scene, a headlight will automatically be created.  To disable this, turn this toggle off.");
			hou_parm_template3.setTags({"autoscope": "0000000000000000"});
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template3 = new hou.SeparatorParmTemplate({name: "light_fog_sep"});
			hou_parm_template3.setTags({"autoscope": "0000000000000000"});
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template3 = new hou.StringParmTemplate({name: "vfog", label: "Visible Fog", num_components: 1, default_value: ["*"], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.NodeReferenceList, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal});
			hou_parm_template3.setHelp("Objects will not be output if their display flag is off");
			hou_parm_template3.setTags({"autoscope": "0000000000000000", "opfilter": "!!OBJ/FOG!!", "oprelative": "/obj"});
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template2 = new hou.FolderParmTemplate({name: "images6_3", label: "Driver", folder_type: hou.folderType.Tabs, default_value: 0, ends_tab_group: false});
			hou_parm_template2.setTags({"autoscope": "0000000000000000", "sidefx::switcher": "images"});
			hou_parm_template3 = new hou.StringParmTemplate({name: "soho_pipecmd", label: "Command", num_components: 1, default_value: ["mantra"], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.Regular, menu_items: ["mantra", "mantra -H host1,host2", "mantra -o consolewait", "mantra -e basic", "mantra -e full", "mantra -P fitler.py"], menu_labels: ["No command line options", "Network rendering", "Verbose to console (Windows only)", "Enable curve/point engine procedural", "Enable full engine procedural", "Filter IFD using python"], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.StringReplace});
			hou_parm_template3.setConditional(hou.parmCondType.DisableWhen, "{ soho_outputmode != 0 }");
			hou_parm_template3.setTags({"autoscope": "0000000000000000"});
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template3 = new hou.ToggleParmTemplate({name: "soho_outputmode", label: "Save IFD File To Disk", default_value: false});
			hou_parm_template3.hideLabel(true);
			hou_parm_template3.setJoinWithNext(true);
			hou_parm_template3.setTags({"autoscope": "0000000000000000"});
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template3 = new hou.StringParmTemplate({name: "soho_diskfile", label: "Disk File", num_components: 1, default_value: ["$HIP/mantra.ifd"], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.FileReference, file_type: hou.fileType.Any, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "opmenu -l -a ropnet1/mantra1 soho_diskfile", item_generator_script_language: hou.scriptLanguage.Hscript, menu_type: hou.menuType.StringReplace});
			hou_parm_template3.setConditional(hou.parmCondType.DisableWhen, "{ soho_outputmode != 1 }");
			hou_parm_template3.setTags({"autoscope": "0000000000000000", "filechooser_mode": "write"});
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template3 = new hou.StringParmTemplate({name: "soho_compression", label: "File Compression", num_components: 1, default_value: ["ext"], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.Regular, menu_items: ["ext", "none", "blosc", "gzip"], menu_labels: ["Use Filename Extension", "No Compression", "BLOSC Compression", "gzip Compression"], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal});
			hou_parm_template3.setConditional(hou.parmCondType.DisableWhen, "{ soho_outputmode != 1 soho_force_compression != 1 }");
			hou_parm_template3.setHelp("Determines the file compression used when writing to a disk file (or if soho_force_compression is enabled).");
			hou_parm_template3.setTags({"autoscope": "0000000000000000"});
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template3 = new hou.ToggleParmTemplate({name: "soho_foreground", label: "Wait for Render to Complete", default_value: false});
			hou_parm_template3.setConditional(hou.parmCondType.DisableWhen, "{ soho_outputmode != 0 }");
			hou_parm_template3.setTags({"autoscope": "0000000000000000"});
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template3 = new hou.ToggleParmTemplate({name: "soho_initsim", label: "Initialize Simulation OPs", default_value: false});
			hou_parm_template3.setTags({"autoscope": "0000000000000000"});
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template3 = new hou.ToggleParmTemplate({name: "soho_viewport_menu", label: "Show In Viewport Menu", default_value: true});
			hou_parm_template3.setHelp("By default SOHO output drivers do not appear in the viewport menu.  Adding this property and turning it on will cause the driver to show up.");
			hou_parm_template3.setTags({"autoscope": "0000000000000000"});
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template3 = new hou.ToggleParmTemplate({name: "vm_inlinestorage", label: "Save Geometry Inline", default_value: false});
			hou_parm_template3.setTags({"autoscope": "0000000000000000", "spare_category": "Driver"});
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template3 = new hou.StringParmTemplate({name: "vm_tmpsharedstorage", label: "Shared temp storage", num_components: 1, default_value: ["$HIP/ifds/storage"], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.FileReference, file_type: hou.fileType.Any, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "opmenu -l -a ropnet1/mantra1 vm_tmpsharedstorage", item_generator_script_language: hou.scriptLanguage.Hscript, menu_type: hou.menuType.StringReplace});
			hou_parm_template3.setConditional(hou.parmCondType.DisableWhen, "{ vm_inlinestorage != 0 }");
			hou_parm_template3.setTags({"autoscope": "0000000000000000", "filechooser_mode": "write", "spare_category": "Driver"});
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template3 = new hou.StringParmTemplate({name: "vm_tmplocalstorage", label: "Local temp storage", num_components: 1, default_value: ["$HOUDINI_TEMP_DIR/ifds/storage"], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.FileReference, file_type: hou.fileType.Any, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "opmenu -l -a ropnet1/mantra1 vm_tmplocalstorage", item_generator_script_language: hou.scriptLanguage.Hscript, menu_type: hou.menuType.StringReplace});
			hou_parm_template3.setConditional(hou.parmCondType.DisableWhen, "{ vm_inlinestorage != 0 }");
			hou_parm_template3.setTags({"autoscope": "0000000000000000", "filechooser_mode": "write", "spare_category": "Driver"});
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template3 = new hou.ToggleParmTemplate({name: "vm_binarygeometry", label: "Save Binary Geometry", default_value: true});
			hou_parm_template3.setTags({"autoscope": "0000000000000000", "spare_category": "Driver"});
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template_group.append(hou_parm_template);
			hou_parm_template = new hou.FolderParmTemplate({name: "rop_1", label: "ROP Fetch", folder_type: hou.folderType.Tabs, default_value: 0, ends_tab_group: false});
			hou_parm_template2 = new hou.MenuParmTemplate({name: "pdg_workitemgeneration", label: "Generate When", menu_items: [], menu_labels: [], default_value: 2, icon_names: [], item_generator_script: "opmenu -l -a ropfetch1 pdg_workitemgeneration", item_generator_script_language: hou.scriptLanguage.Hscript, menu_type: hou.menuType.Normal, menu_use_token: true, is_button_strip: false, strip_uses_icons: false});
			hou_parm_template2.setTags({"autoscope": "0000000000000000"});
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template2 = new hou.MenuParmTemplate({name: "pdg_cachemode", label: "Cache Mode", menu_items: [], menu_labels: [], default_value: 0, icon_names: [], item_generator_script: "opmenu -l -a ropfetch1 pdg_cachemode", item_generator_script_language: hou.scriptLanguage.Hscript, menu_type: hou.menuType.Normal, menu_use_token: true, is_button_strip: false, strip_uses_icons: false});
			hou_parm_template2.setTags({"autoscope": "0000000000000000"});
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template2 = new hou.MenuParmTemplate({name: "pdg_cooktype", label: "Cook Type", menu_items: ["1", "2", "3"], menu_labels: ["In-Process", "Out-of-Process", "Service"], default_value: 2, icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal, menu_use_token: true, is_button_strip: false, strip_uses_icons: false});
			hou_parm_template2.setTags({"autoscope": "0000000000000000"});
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template2 = new hou.ToggleParmTemplate({name: "enablepdgservice", label: "Use ROP Fetch Service", default_value: false});
			hou_parm_template2.hide(true);
			hou_parm_template2.setScriptCallbackLanguage(hou.scriptLanguage.Python);
			hou_parm_template2.setTags({"autoscope": "0000000000000000", "script_callback_language": "python"});
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template2 = new hou.StringParmTemplate({name: "pdgservicename", label: "Service Name", num_components: 1, default_value: ["ropfetch"], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.Regular, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "from top import serviceutil\nreturn serviceutil.serviceNamesMenu(kwargs['node'])", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.StringReplace});
			hou_parm_template2.setConditional(hou.parmCondType.DisableWhen, "{ pdg_cooktype != 3 }");
			hou_parm_template2.hide(true);
			hou_parm_template2.setScriptCallbackLanguage(hou.scriptLanguage.Python);
			hou_parm_template2.setTags({"autoscope": "0000000000000000", "script_callback_language": "python"});
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template2 = new hou.StringParmTemplate({name: "pdg_servicename", label: "Service Name", num_components: 1, default_value: ["ropfetch"], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.Regular, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "opmenu -l -a ropfetch1 pdg_servicename", item_generator_script_language: hou.scriptLanguage.Hscript, menu_type: hou.menuType.StringReplace});
			hou_parm_template2.setConditional(hou.parmCondType.DisableWhen, "{ pdg_cooktype != 3 }");
			hou_parm_template2.setScriptCallbackLanguage(hou.scriptLanguage.Python);
			hou_parm_template2.setTags({"autoscope": "0000000000000000", "script_callback_language": "python"});
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template2 = new hou.SeparatorParmTemplate({name: "sepparm2"});
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template2 = new hou.ToggleParmTemplate({name: "usereloadpath", label: "Use Reload Path", default_value: false});
			hou_parm_template2.hideLabel(true);
			hou_parm_template2.setJoinWithNext(true);
			hou_parm_template2.setScriptCallbackLanguage(hou.scriptLanguage.Python);
			hou_parm_template2.setTags({"autoscope": "0000000000000000", "script_callback_language": "python"});
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template2 = new hou.StringParmTemplate({name: "reloadpath", label: "Reload Parm Path", num_components: 1, default_value: [""], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.Regular, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal});
			hou_parm_template2.setConditional(hou.parmCondType.DisableWhen, "{ usereloadpath == 0 }");
			hou_parm_template2.setScriptCallbackLanguage(hou.scriptLanguage.Python);
			hou_parm_template2.setTags({"autoscope": "0000000000000000", "script_callback_language": "python"});
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template2 = new hou.ToggleParmTemplate({name: "sethip", label: "Reset $HIP On Cook", default_value: false});
			hou_parm_template2.setConditional(hou.parmCondType.DisableWhen, "{ useexternalhip == 1 }");
			hou_parm_template2.setTags({"autoscope": "0000000000000000"});
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template2 = new hou.ToggleParmTemplate({name: "ignoreerrors", label: "Ignore Scene Load Errors", default_value: false});
			hou_parm_template2.setScriptCallbackLanguage(hou.scriptLanguage.Python);
			hou_parm_template2.setTags({"autoscope": "0000000000000000", "script_callback_language": "python"});
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template2 = new hou.ToggleParmTemplate({name: "unlocktargetrop", label: "Unlock Target ROP Node", default_value: true});
			hou_parm_template2.setScriptCallbackLanguage(hou.scriptLanguage.Python);
			hou_parm_template2.setTags({"autoscope": "0000000000000000", "script_callback_language": "python"});
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template2 = new hou.ToggleParmTemplate({name: "renderalltiles", label: "Render All Tiles", default_value: false});
			hou_parm_template2.setConditional(hou.parmCondType.DisableWhen, "{ vm_tile_render == 0 }");
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template2 = new hou.SeparatorParmTemplate({name: "sepparm3"});
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template2 = new hou.FolderParmTemplate({name: "folder", label: "Frames and Batching", folder_type: hou.folderType.Tabs, default_value: 0, ends_tab_group: false});
			hou_parm_template3 = new hou.ToggleParmTemplate({name: "batchall", label: "All Frames in One Batch", default_value: false});
			hou_parm_template3.setConditional(hou.parmCondType.DisableWhen, "{ distribute == 1 } { framegeneration == 3 } { singletask == 1 }");
			hou_parm_template3.setTags({"autoscope": "0000000000000000"});
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template3 = new hou.IntParmTemplate({name: "framesperbatch", label: "Frames per Batch", num_components: 1, default_value: [1], min: 1, max: 10, min_is_strict: true, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.Base1, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal, menu_use_token: false});
			hou_parm_template3.setConditional(hou.parmCondType.DisableWhen, "{ batchall == 1 } { distribute == 1 } { framegeneration == 3 } { singletask == 1 }");
			hou_parm_template3.setTags({"autoscope": "0000000000000000"});
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template3 = new hou.MenuParmTemplate({name: "cookwhen", label: "Cook Batch When", menu_items: ["0", "1", "2", "3"], menu_labels: ["All Frames are Ready", "First Frame is Ready", "Fixed Number of Frames are Ready", "Percentage of Frames are Ready"], default_value: 0, icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal, menu_use_token: false, is_button_strip: false, strip_uses_icons: false});
			hou_parm_template3.setConditional(hou.parmCondType.DisableWhen, "{ batchall != 1 framesperbatch == 1 distribute != 1 } { framegeneration == 3 } { singletask == 1 }");
			hou_parm_template3.setTags({"autoscope": "0000000000000000"});
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template3 = new hou.IntParmTemplate({name: "fixedframecount", label: "Number of Frames", num_components: 1, default_value: [0], min: 1, max: 10, min_is_strict: true, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.Base1, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal, menu_use_token: false});
			hou_parm_template3.setConditional(hou.parmCondType.HideWhen, "{ cookwhen != 2 }");
			hou_parm_template3.setScriptCallbackLanguage(hou.scriptLanguage.Python);
			hou_parm_template3.setTags({"autoscope": "0000000000000000", "script_callback_language": "python"});
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template3 = new hou.FloatParmTemplate({name: "percentframes", label: "Percentage of Frames", num_components: 1, default_value: [100], min: 0, max: 100, min_is_strict: true, max_is_strict: true, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.Base1});
			hou_parm_template3.setConditional(hou.parmCondType.HideWhen, "{ cookwhen != 3 }");
			hou_parm_template3.setScriptCallbackLanguage(hou.scriptLanguage.Python);
			hou_parm_template3.setTags({"autoscope": "0000000000000000", "script_callback_language": "python"});
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template3 = new hou.ToggleParmTemplate({name: "setframes", label: "Automatically Set Missing Frames", default_value: false});
			hou_parm_template3.setConditional(hou.parmCondType.DisableWhen, "{ batchall != 1 framesperbatch == 1 distribute != 1 } { framegeneration == 3 } { singletask == 1 framegeneration == 1 }");
			hou_parm_template3.setScriptCallbackLanguage(hou.scriptLanguage.Python);
			hou_parm_template3.setTags({"autoscope": "0000000000000000", "script_callback_language": "python"});
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template3 = new hou.ToggleParmTemplate({name: "resumebatch", label: "Resume Partially Cached Batches", default_value: false});
			hou_parm_template3.setConditional(hou.parmCondType.DisableWhen, "{ batchall != 1 framesperbatch == 1 distribute != 1 } { framegeneration == 3 } { singletask == 1 framegeneration == 1 }");
			hou_parm_template3.setScriptCallbackLanguage(hou.scriptLanguage.Python);
			hou_parm_template3.setTags({"autoscope": "0000000000000000", "script_callback_language": "python"});
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template2 = new hou.FolderParmTemplate({name: "folder_1", label: "Output Files", folder_type: hou.folderType.Tabs, default_value: 0, ends_tab_group: false});
			hou_parm_template3 = new hou.MenuParmTemplate({name: "logoutput", label: "Output Log Parsing", menu_items: ["0", "1", "2"], menu_labels: ["None", "If Supported by ROP Node", "Always"], default_value: 1, icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal, menu_use_token: false, is_button_strip: false, strip_uses_icons: false});
			hou_parm_template3.setScriptCallbackLanguage(hou.scriptLanguage.Python);
			hou_parm_template3.setTags({"autoscope": "0000000000000000", "script_callback_language": "python"});
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template3 = new hou.ToggleParmTemplate({name: "uselogformat", label: "Use Log Format", default_value: false});
			hou_parm_template3.setConditional(hou.parmCondType.DisableWhen, "{ logoutput == 0 }");
			hou_parm_template3.hideLabel(true);
			hou_parm_template3.setJoinWithNext(true);
			hou_parm_template3.setScriptCallbackLanguage(hou.scriptLanguage.Python);
			hou_parm_template3.setTags({"autoscope": "0000000000000000", "script_callback_language": "python"});
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template3 = new hou.StringParmTemplate({name: "logformat", label: "Custom Log Format", num_components: 1, default_value: ["OUTPUT_FILE:(.*);(.*)"], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.Regular, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal});
			hou_parm_template3.setConditional(hou.parmCondType.DisableWhen, "{ uselogformat == 0 } { logoutput == 0 }");
			hou_parm_template3.setScriptCallbackLanguage(hou.scriptLanguage.Python);
			hou_parm_template3.setTags({"autoscope": "0000000000000000", "script_callback_language": "python"});
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template2 = new hou.FolderParmTemplate({name: "folder_2", label: "Debugging and Performance", folder_type: hou.folderType.Tabs, default_value: 0, ends_tab_group: false});
			hou_parm_template3 = new hou.ToggleParmTemplate({name: "enableperfmon", label: "Enable Performance Monitor Logging", default_value: false});
			hou_parm_template3.setScriptCallbackLanguage(hou.scriptLanguage.Python);
			hou_parm_template3.setTags({"autoscope": "0000000000000000", "script_callback_language": "python"});
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template3 = new hou.ToggleParmTemplate({name: "saveperffile", label: "Performance File", default_value: true});
			hou_parm_template3.setConditional(hou.parmCondType.DisableWhen, "{ enableperfmon == 0 }");
			hou_parm_template3.hideLabel(true);
			hou_parm_template3.setJoinWithNext(true);
			hou_parm_template3.setScriptCallbackLanguage(hou.scriptLanguage.Python);
			hou_parm_template3.setTags({"autoscope": "0000000000000000", "script_callback_language": "python"});
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template3 = new hou.StringParmTemplate({name: "perffile", label: "Performance File", num_components: 1, default_value: ["$HIP/$OS.performance.$F.hperf"], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.FileReference, file_type: hou.fileType.Any, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "opmenu -l -a ropfetch1 perffile", item_generator_script_language: hou.scriptLanguage.Hscript, menu_type: hou.menuType.StringReplace});
			hou_parm_template3.setConditional(hou.parmCondType.DisableWhen, "{ saveperffile == 0 } { enableperfmon == 0 }");
			hou_parm_template3.setScriptCallbackLanguage(hou.scriptLanguage.Python);
			hou_parm_template3.setTags({"autoscope": "0000000000000000", "script_callback_language": "python"});
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template3 = new hou.ToggleParmTemplate({name: "savedebughip", label: "Save Debug .hip File", default_value: false});
			hou_parm_template3.hideLabel(true);
			hou_parm_template3.setJoinWithNext(true);
			hou_parm_template3.setScriptCallbackLanguage(hou.scriptLanguage.Python);
			hou_parm_template3.setTags({"autoscope": "0000000000000000", "script_callback_language": "python"});
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template3 = new hou.StringParmTemplate({name: "debughip", label: "Save Debug .hip File", num_components: 1, default_value: ["$HIP/$OS.debug.$F.hip"], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.FileReference, file_type: hou.fileType.Any, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "opmenu -l -a ropfetch1 debughip", item_generator_script_language: hou.scriptLanguage.Hscript, menu_type: hou.menuType.StringReplace});
			hou_parm_template3.setConditional(hou.parmCondType.DisableWhen, "{ savedebughip == 0 }");
			hou_parm_template3.setScriptCallbackLanguage(hou.scriptLanguage.Python);
			hou_parm_template3.setTags({"autoscope": "0000000000000000", "script_callback_language": "python"});
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template3 = new hou.ToggleParmTemplate({name: "debugoutputs", label: "Report Debug Files as Outputs", default_value: false});
			hou_parm_template3.setScriptCallbackLanguage(hou.scriptLanguage.Python);
			hou_parm_template3.setTags({"autoscope": "0000000000000000", "script_callback_language": "python"});
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template_group.append(hou_parm_template);
			hou_parm_template = new hou.FolderParmTemplate({name: "rop_2", label: "Scripts", folder_type: hou.folderType.Tabs, default_value: 0, ends_tab_group: false});
			hou_parm_template2 = new hou.ToggleParmTemplate({name: "tprerender", label: "tprerender", default_value: true});
			hou_parm_template2.hideLabel(true);
			hou_parm_template2.setJoinWithNext(true);
			hou_parm_template2.setTags({"autoscope": "0000000000000000"});
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template2 = new hou.StringParmTemplate({name: "prerender", label: "Pre-Render Script", num_components: 1, default_value: [""], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.FileReference, file_type: hou.fileType.Any, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "opmenu -l -a ropnet1/mantra1 prerender", item_generator_script_language: hou.scriptLanguage.Hscript, menu_type: hou.menuType.StringReplace});
			hou_parm_template2.setConditional(hou.parmCondType.DisableWhen, "{ tprerender == 0 }");
			hou_parm_template2.setJoinWithNext(true);
			hou_parm_template2.setTags({"autoscope": "0000000000000000", "filechooser_mode": "read"});
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template2 = new hou.StringParmTemplate({name: "lprerender", label: "lprerender", num_components: 1, default_value: ["hscript"], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.Regular, menu_items: ["hscript", "python"], menu_labels: ["Hscript", "Python"], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal});
			hou_parm_template2.setConditional(hou.parmCondType.DisableWhen, "{ tprerender == 0 }");
			hou_parm_template2.hideLabel(true);
			hou_parm_template2.setTags({"autoscope": "0000000000000000"});
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template2 = new hou.ToggleParmTemplate({name: "tpreframe", label: "tpreframe", default_value: true});
			hou_parm_template2.hideLabel(true);
			hou_parm_template2.setJoinWithNext(true);
			hou_parm_template2.setTags({"autoscope": "0000000000000000"});
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template2 = new hou.StringParmTemplate({name: "preframe", label: "Pre-Frame Script", num_components: 1, default_value: [""], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.FileReference, file_type: hou.fileType.Any, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "opmenu -l -a ropnet1/mantra1 preframe", item_generator_script_language: hou.scriptLanguage.Hscript, menu_type: hou.menuType.StringReplace});
			hou_parm_template2.setConditional(hou.parmCondType.DisableWhen, "{ tpreframe == 0 }");
			hou_parm_template2.setJoinWithNext(true);
			hou_parm_template2.setTags({"autoscope": "0000000000000000", "filechooser_mode": "read"});
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template2 = new hou.StringParmTemplate({name: "lpreframe", label: "lpreframe", num_components: 1, default_value: ["hscript"], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.Regular, menu_items: ["hscript", "python"], menu_labels: ["Hscript", "Python"], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal});
			hou_parm_template2.setConditional(hou.parmCondType.DisableWhen, "{ tpreframe == 0 }");
			hou_parm_template2.hideLabel(true);
			hou_parm_template2.setTags({"autoscope": "0000000000000000"});
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template2 = new hou.ToggleParmTemplate({name: "tpostframe", label: "tpostframe", default_value: true});
			hou_parm_template2.hideLabel(true);
			hou_parm_template2.setJoinWithNext(true);
			hou_parm_template2.setTags({"autoscope": "0000000000000000"});
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template2 = new hou.StringParmTemplate({name: "postframe", label: "Post-Frame Script", num_components: 1, default_value: [""], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.FileReference, file_type: hou.fileType.Any, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "opmenu -l -a ropnet1/mantra1 postframe", item_generator_script_language: hou.scriptLanguage.Hscript, menu_type: hou.menuType.StringReplace});
			hou_parm_template2.setConditional(hou.parmCondType.DisableWhen, "{ tpostframe == 0 }");
			hou_parm_template2.setJoinWithNext(true);
			hou_parm_template2.setTags({"autoscope": "0000000000000000", "filechooser_mode": "read"});
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template2 = new hou.StringParmTemplate({name: "lpostframe", label: "lpostframe", num_components: 1, default_value: ["hscript"], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.Regular, menu_items: ["hscript", "python"], menu_labels: ["Hscript", "Python"], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal});
			hou_parm_template2.setConditional(hou.parmCondType.DisableWhen, "{ tpostframe == 0 }");
			hou_parm_template2.hideLabel(true);
			hou_parm_template2.setTags({"autoscope": "0000000000000000"});
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template2 = new hou.ToggleParmTemplate({name: "tpostrender", label: "tpostrender", default_value: true});
			hou_parm_template2.hideLabel(true);
			hou_parm_template2.setJoinWithNext(true);
			hou_parm_template2.setTags({"autoscope": "0000000000000000"});
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template2 = new hou.StringParmTemplate({name: "postrender", label: "Post-Render Script", num_components: 1, default_value: [""], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.FileReference, file_type: hou.fileType.Any, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "opmenu -l -a ropnet1/mantra1 postrender", item_generator_script_language: hou.scriptLanguage.Hscript, menu_type: hou.menuType.StringReplace});
			hou_parm_template2.setConditional(hou.parmCondType.DisableWhen, "{ tpostrender == 0 }");
			hou_parm_template2.setJoinWithNext(true);
			hou_parm_template2.setTags({"autoscope": "0000000000000000", "filechooser_mode": "read"});
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template2 = new hou.StringParmTemplate({name: "lpostrender", label: "lpostrender", num_components: 1, default_value: ["hscript"], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.Regular, menu_items: ["hscript", "python"], menu_labels: ["Hscript", "Python"], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal});
			hou_parm_template2.setConditional(hou.parmCondType.DisableWhen, "{ tpostrender == 0 }");
			hou_parm_template2.hideLabel(true);
			hou_parm_template2.setTags({"autoscope": "0000000000000000"});
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template_group.append(hou_parm_template);
			hou_parm_template = new hou.FolderParmTemplate({name: "rop_3", label: "Manual Render", folder_type: hou.folderType.Tabs, default_value: 0, ends_tab_group: false});
			hou_parm_template2 = new hou.ButtonParmTemplate({name: "renderpreview", label: "Render to MPlay"});
			hou_parm_template2.setJoinWithNext(true);
			hou_parm_template2.setTags({"autoscope": "0000000000000000", "takecontrol": "always"});
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template2 = new hou.ButtonParmTemplate({name: "execute", label: "Render to Disk"});
			hou_parm_template2.setJoinWithNext(true);
			hou_parm_template2.setTags({"autoscope": "0000000000000000", "takecontrol": "always"});
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template2 = new hou.ButtonParmTemplate({name: "executebackground", label: "Render to Disk in Background"});
			hou_parm_template2.setJoinWithNext(true);
			hou_parm_template2.setTags({"autoscope": "0000000000000000", "takecontrol": "always"});
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template2 = new hou.ButtonParmTemplate({name: "renderdialog", label: "Controls..."});
			hou_parm_template2.hideLabel(true);
			hou_parm_template2.setTags({"autoscope": "0000000000000000", "takecontrol": "always"});
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template2 = new hou.MenuParmTemplate({name: "trange", label: "Valid Frame Range", menu_items: ["off", "normal", "on"], menu_labels: ["Render Current Frame", "Render Frame Range", "Render Frame Range Only (Strict)"], default_value: 0, icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal, menu_use_token: false, is_button_strip: false, strip_uses_icons: false});
			hou_parm_template2.setTags({"autoscope": "0000000000000000"});
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template_group.append(hou_parm_template);
			hou_parm_template = new hou.FolderParmTemplate({name: "rop_4", label: "Schedulers", folder_type: hou.folderType.Tabs, default_value: 0, ends_tab_group: false});
			hou_parm_template2 = new hou.StringParmTemplate({name: "topscheduler", label: "TOP Scheduler Override", num_components: 1, default_value: [""], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.NodeReference, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal});
			hou_parm_template2.setJoinWithNext(true);
			hou_parm_template2.setTags({"autoscope": "0000000000000000", "opfilter": "!!TOP/SCHEDULER!!", "oprelative": "."});
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template2 = new hou.MenuParmTemplate({name: "addjobparms", label: "Add Job Parms", menu_items: [], menu_labels: [], default_value: 0, icon_names: [], item_generator_script: "opmenu -l -a ropfetch1 addjobparms", item_generator_script_language: hou.scriptLanguage.Hscript, menu_type: hou.menuType.Normal, menu_use_token: false, is_button_strip: false, strip_uses_icons: false});
			hou_parm_template2.hideLabel(true);
			hou_parm_template2.setScriptCallback("from top import schedulerutil; schedulerutil.onAddJobParms(kwargs)");
			hou_parm_template2.setScriptCallbackLanguage(hou.scriptLanguage.Python);
			hou_parm_template2.setTags({"autoscope": "0000000000000000", "script_callback": "from top import schedulerutil; schedulerutil.onAddJobParms(kwargs)", "script_callback_language": "python"});
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template2 = new hou.ToggleParmTemplate({name: "pdg_useschedulewhen", label: "Use Schedule When", default_value: false});
			hou_parm_template2.hideLabel(true);
			hou_parm_template2.setJoinWithNext(true);
			hou_parm_template2.setScriptCallbackLanguage(hou.scriptLanguage.Python);
			hou_parm_template2.setTags({"autoscope": "0000000000000000", "script_callback_language": "python"});
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template2 = new hou.IntParmTemplate({name: "pdg_schedulewhen", label: "Schedule When", num_components: 1, default_value: [1], min: 0, max: 10, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.Base1, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal, menu_use_token: false});
			hou_parm_template2.setConditional(hou.parmCondType.DisableWhen, "{ pdg_useschedulewhen == 0 }");
			hou_parm_template2.setScriptCallbackLanguage(hou.scriptLanguage.Python);
			hou_parm_template2.setTags({"autoscope": "0000000000000000", "script_callback_language": "python", "sidefx::slider": "none"});
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template2 = new hou.SeparatorParmTemplate({name: "sepparm4"});
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template2 = new hou.MenuParmTemplate({name: "pdg_workitemlabel", label: "Work Item Label", menu_items: ["0", "1", "2"], menu_labels: ["Use Default", "Inherit from Upstream Item", "Custom Expression"], default_value: 0, icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal, menu_use_token: false, is_button_strip: false, strip_uses_icons: false});
			hou_parm_template2.setJoinWithNext(true);
			hou_parm_template2.setScriptCallbackLanguage(hou.scriptLanguage.Python);
			hou_parm_template2.setTags({"autoscope": "0000000000000000", "script_callback_language": "python"});
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template2 = new hou.StringParmTemplate({name: "pdg_workitemlabelexpr", label: "Label Expression", num_components: 1, default_value: [""], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.Regular, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal});
			hou_parm_template2.setConditional(hou.parmCondType.DisableWhen, "{ pdg_workitemlabel != 2 }");
			hou_parm_template2.hideLabel(true);
			hou_parm_template2.setScriptCallbackLanguage(hou.scriptLanguage.Python);
			hou_parm_template2.setTags({"autoscope": "0000000000000000", "script_callback_language": "python"});
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template2 = new hou.MenuParmTemplate({name: "pdg_workitempriority", label: "Work Item Priority", menu_items: ["0", "1", "2"], menu_labels: ["Inherit from Upstream Item", "Custom Expression", "Node Defines Priority"], default_value: 2, icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal, menu_use_token: false, is_button_strip: false, strip_uses_icons: false});
			hou_parm_template2.setJoinWithNext(true);
			hou_parm_template2.setScriptCallbackLanguage(hou.scriptLanguage.Python);
			hou_parm_template2.setTags({"autoscope": "0000000000000000", "script_callback_language": "python"});
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template2 = new hou.IntParmTemplate({name: "pdg_workitempriorityexpr", label: "Priority Expression", num_components: 1, default_value: [0], min: 0, max: 10, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.Base1, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal, menu_use_token: false});
			hou_parm_template2.setConditional(hou.parmCondType.DisableWhen, "{ pdg_workitempriority != 1 }");
			hou_parm_template2.hideLabel(true);
			hou_parm_template2.setScriptCallbackLanguage(hou.scriptLanguage.Python);
			hou_parm_template2.setTags({"autoscope": "0000000000000000", "script_callback_language": "python", "sidefx::slider": "none"});
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template_group.append(hou_parm_template);
			
            this.parmTemplateGroup = hou_parm_template_group;
            this.parmTemplateGroup.linkNode(this);
        }
    }
    hou.registerType('TOP/Render/ropmantra',_hnt_TOP_ropmantra)
    return _hnt_TOP_ropmantra
}
        