
export default function (hou) {
    class _hnt_LOP_materialvariation extends hou.extend(hou._HoudiniBase).with(hou._SubgraphMixin) {
        static is_root = false;
        static id = 'LOP/Materials/materialvariation';
        static category = '/LOP';
        static houdiniType = 'materialvariation';
        static title = 'Material Variation';
        static icon = '/editor/assets/imgs/nodes/_hnt_LOP_materialvariation.svg';
        constructor() {
            super();
            this.flags['houdini_type'] = this.__proto__.constructor.houdiniType;
            
            const inputs = ['LOP'];
            const outputs = ['LOP'];

            for(var i=0;i<inputs.length;i++) this.addInput(''+i,inputs[i]);        
            for(var j=0;j<outputs.length;j++) this.addOutput(''+j,outputs[j]);
        }
        parmTemplatesInit() {
            let hou_parm_template_group = new hou.ParmTemplateGroup();
			this.parmTemplateGroup = hou_parm_template_group;
			let hou_parm_template = new hou.IntParmTemplate({name: "primitivetype", label: "Type", num_components: 1, default_value: [1], min: 0, max: 10, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.Base1, menu_items: ["0", "1"], menu_labels: ["Point Instances", "Primitives/Native Instances"], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal, menu_use_token: false});
			hou_parm_template_group.append(hou_parm_template);
			hou_parm_template = new hou.StringParmTemplate({name: "primitives", label: "Primitives", num_components: 1, default_value: ["`lopinputprims('.', 0)`"], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.Regular, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "import loputils\nreturn loputils.createPrimPatternMenu(kwargs['node'], 0)", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.StringReplace});
			hou_parm_template.setConditional(hou.parmCondType.HideWhen, "{ primitivetype == 0 }");
			hou_parm_template.setTags({"autoscope": "0000000000000000", "script_action": "import loputils\n\nloputils.selectPrimsInParm(kwargs, True)", "script_action_icon": "BUTTONS_reselect", "sidefx::usdpathtype": "primlist"});
			hou_parm_template_group.append(hou_parm_template);
			hou_parm_template = new hou.StringParmTemplate({name: "instances", label: "Instances", num_components: 1, default_value: [""], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.Regular, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal});
			hou_parm_template.setConditional(hou.parmCondType.HideWhen, "{ primitivetype == 1 }");
			hou_parm_template.setTags({"autoscope": "0000000000000000", "script_action": "import loputils\n\nloputils.selectInstancesInParm(kwargs, True, 1)", "script_action_help": "Select a instances in the Scene Viewer.", "script_action_icon": "BUTTONS_reselect", "sidefx::usdpathtype": "primlist"});
			hou_parm_template_group.append(hou_parm_template);
			hou_parm_template = new hou.FloatParmTemplate({name: "importtime", label: "Import Frame", num_components: 1, default_value: [0], min: 0, max: 10, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.Base1});
			hou_parm_template.setScriptCallbackLanguage(hou.scriptLanguage.Python);
			hou_parm_template.setTags({"script_callback_language": "python"});
			hou_parm_template_group.append(hou_parm_template);
			hou_parm_template = new hou.FolderParmTemplate({name: "primvars", label: "Primvars", folder_type: hou.folderType.MultiparmBlock, default_value: 1, ends_tab_group: false});
			let hou_parm_template2 = new hou.ToggleParmTemplate({name: "enable#", label: "Enable", default_value: true});
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template2 = new hou.FolderParmTemplate({name: "folder0_#", label: "Primvar", folder_type: hou.folderType.Collapsible, default_value: 0, ends_tab_group: false});
			hou_parm_template2.setConditional(hou.parmCondType.DisableWhen, "{ enable# == 0 }");
			hou_parm_template2.setTags({"group_default": "1", "group_type": "collapsible", "sidefx::header_parm": "name#", "sidefx::header_toggle": "enable#"});
			let hou_parm_template3 = new hou.StringParmTemplate({name: "name#", label: "Name", num_components: 1, default_value: [""], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.Regular, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "node = kwargs[\'node\']\nprimvars = node.hm().getPrimvars(kwargs)\nreturn [\"%s - %s\" % (x[0], x[1]) for x in primvars for y in range(2)]", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.StringReplace});
			hou_parm_template3.setConditional(hou.parmCondType.DisableWhen, "{ enable# == 0 }");
			hou_parm_template3.setJoinWithNext(true);
			hou_parm_template3.setScriptCallback("kwargs['node'].hm().setPrimvar(kwargs)");
			hou_parm_template3.setScriptCallbackLanguage(hou.scriptLanguage.Python);
			hou_parm_template3.setTags({"script_callback": "kwargs['node'].hm().setPrimvar(kwargs)", "script_callback_language": "python"});
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template3 = new hou.MenuParmTemplate({name: "type#", label: "Type", menu_items: [], menu_labels: [], default_value: 0, icon_names: [], item_generator_script: "import loputils\nmenu = loputils.createAttribTypeMenu()[2:]\nmenu.insert(10, 'image')\nmenu.insert(10, 'image')\nreturn menu", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal, menu_use_token: false, is_button_strip: false, strip_uses_icons: false});
			hou_parm_template3.setConditional(hou.parmCondType.DisableWhen, "{ enable# == 0 }");
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template3 = new hou.IntParmTemplate({name: "sourcemode#", label: "Source", num_components: 1, default_value: [2], min: 0, max: 10, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.Base1, menu_items: ["0", "1", "2"], menu_labels: ["Internal SOP", "External SOP", "Uniform"], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal, menu_use_token: false});
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template3 = new hou.ToggleParmTemplate({name: "matchbyid#", label: "Match By ID", default_value: true});
			hou_parm_template3.setConditional(hou.parmCondType.HideWhen, "{ sourcemode# != 1 }");
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template3 = new hou.StringParmTemplate({name: "soppath#", label: "SOP Path", num_components: 1, default_value: [""], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.NodeReference, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal});
			hou_parm_template3.setConditional(hou.parmCondType.HideWhen, "{ sourcemode# != 1 }");
			hou_parm_template3.setTags({"autoscope": "0000000000000000", "opfilter": "!!SOP!!", "oprelative": "."});
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template3 = new hou.IntParmTemplate({name: "interpolation#", label: "Interpolation", num_components: 1, default_value: [0], min: 0, max: 10, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.Base1, menu_items: ["0", "1", "2", "3"], menu_labels: ["Constant", "Uniform", "Vertex", "Face Varying"], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal, menu_use_token: false});
			hou_parm_template3.setConditional(hou.parmCondType.DisableWhen, "{ usesnippet# == 0 }");
			hou_parm_template3.setConditional(hou.parmCondType.HideWhen, "{ type == 0 } { sourcemode# != 2 }");
			hou_parm_template3.setScriptCallbackLanguage(hou.scriptLanguage.Python);
			hou_parm_template3.setTags({"script_callback_language": "python"});
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template3 = new hou.ToggleParmTemplate({name: "scalar#", label: "Scalar Values", default_value: false});
			hou_parm_template3.setConditional(hou.parmCondType.HideWhen, "{ primitivetype == 0 }");
			hou_parm_template3.setScriptCallbackLanguage(hou.scriptLanguage.Python);
			hou_parm_template3.setTags({"script_callback_language": "python"});
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template3 = new hou.ToggleParmTemplate({name: "usesnippet#", label: "Use Snippet", default_value: false});
			hou_parm_template3.setConditional(hou.parmCondType.DisableWhen, "{ enable# == 0 }");
			hou_parm_template3.setConditional(hou.parmCondType.HideWhen, "{ sourcemode# != 2 }");
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template3 = new hou.ToggleParmTemplate({name: "bool#", label: "Value", default_value: false});
			hou_parm_template3.setConditional(hou.parmCondType.DisableWhen, "{ enable# == 0 }");
			hou_parm_template3.setConditional(hou.parmCondType.HideWhen, "{ type# != bool } { usesnippet# == 1 } { sourcemode# != 2 }");
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template3 = new hou.IntParmTemplate({name: "int#", label: "Value", num_components: 1, default_value: [0], min: 0, max: 10, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.Base1, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal, menu_use_token: false});
			hou_parm_template3.setConditional(hou.parmCondType.DisableWhen, "{ enable# == 0 }");
			hou_parm_template3.setConditional(hou.parmCondType.HideWhen, "{ type# != int } { usesnippet# == 1 } { sourcemode# != 2 }");
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template3 = new hou.IntParmTemplate({name: "int64#", label: "Value", num_components: 1, default_value: [0], min: 0, max: 10, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.Base1, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal, menu_use_token: false});
			hou_parm_template3.setConditional(hou.parmCondType.DisableWhen, "{ enable# == 0 }");
			hou_parm_template3.setConditional(hou.parmCondType.HideWhen, "{ type# != int64 } { usesnippet# == 1 } { sourcemode# != 2 }");
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template3 = new hou.FloatParmTemplate({name: "float#", label: "Value", num_components: 1, default_value: [0], min: 0, max: 10, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.Base1});
			hou_parm_template3.setConditional(hou.parmCondType.DisableWhen, "{ enable# == 0 }");
			hou_parm_template3.setConditional(hou.parmCondType.HideWhen, "{ type# != float } { usesnippet# == 1 } { sourcemode# != 2 }");
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template3 = new hou.FloatParmTemplate({name: "double#", label: "Value", num_components: 1, default_value: [0], min: 0, max: 10, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.Base1});
			hou_parm_template3.setConditional(hou.parmCondType.DisableWhen, "{ enable# == 0 }");
			hou_parm_template3.setConditional(hou.parmCondType.HideWhen, "{ type# != double } { usesnippet# == 1 } { sourcemode# != 2 }");
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template3 = new hou.StringParmTemplate({name: "string#", label: "Value", num_components: 1, default_value: [""], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.Regular, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal});
			hou_parm_template3.setConditional(hou.parmCondType.DisableWhen, "{ enable# == 0 }");
			hou_parm_template3.setConditional(hou.parmCondType.HideWhen, "{ type# != string } { usesnippet# == 1 } { sourcemode# != 2 }");
			hou_parm_template3.setTags({"filechooser_mode": "read"});
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template3 = new hou.StringParmTemplate({name: "image#", label: "Value", num_components: 1, default_value: [""], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.FileReference, file_type: hou.fileType.Image, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.StringReplace});
			hou_parm_template3.setConditional(hou.parmCondType.DisableWhen, "{ enable# == 0 }");
			hou_parm_template3.setConditional(hou.parmCondType.HideWhen, "{ type# != image } { usesnippet# == 1 } { sourcemode# != 2 }");
			hou_parm_template3.setTags({"filechooser_mode": "read"});
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template3 = new hou.StringParmTemplate({name: "token#", label: "Value", num_components: 1, default_value: [""], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.Regular, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal});
			hou_parm_template3.setConditional(hou.parmCondType.DisableWhen, "{ enable# == 0 }");
			hou_parm_template3.setConditional(hou.parmCondType.HideWhen, "{ type# != token } { usesnippet# == 1 } { sourcemode# != 2 }");
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template3 = new hou.StringParmTemplate({name: "asset#", label: "Value", num_components: 1, default_value: [""], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.Regular, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal});
			hou_parm_template3.setConditional(hou.parmCondType.DisableWhen, "{ enable# == 0 }");
			hou_parm_template3.setConditional(hou.parmCondType.HideWhen, "{ type# != asset } { usesnippet# == 1 } { sourcemode# != 2 }");
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template3 = new hou.FloatParmTemplate({name: "float2#", label: "Value", num_components: 2, default_value: [0, 0], min: 0, max: 10, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.Base1});
			hou_parm_template3.setConditional(hou.parmCondType.DisableWhen, "{ enable# == 0 }");
			hou_parm_template3.setConditional(hou.parmCondType.HideWhen, "{ type# != float2 } { usesnippet# == 1 } { sourcemode# != 2 }");
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template3 = new hou.FloatParmTemplate({name: "half2#", label: "Value", num_components: 2, default_value: [0, 0], min: 0, max: 10, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.Base1});
			hou_parm_template3.setConditional(hou.parmCondType.DisableWhen, "{ enable# == 0 }");
			hou_parm_template3.setConditional(hou.parmCondType.HideWhen, "{ type# != half2 } { usesnippet# == 1 } { sourcemode# != 2 }");
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template3 = new hou.FloatParmTemplate({name: "double2#", label: "Value", num_components: 2, default_value: [0, 0], min: 0, max: 10, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.Base1});
			hou_parm_template3.setConditional(hou.parmCondType.DisableWhen, "{ enable# == 0 }");
			hou_parm_template3.setConditional(hou.parmCondType.HideWhen, "{ type# != double2 } { usesnippet# == 1 } { sourcemode# != 2 }");
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template3 = new hou.IntParmTemplate({name: "int3#", label: "Value", num_components: 3, default_value: [0, 0, 0], min: 0, max: 10, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.Base1, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal, menu_use_token: false});
			hou_parm_template3.setConditional(hou.parmCondType.DisableWhen, "{ enable# == 0 }");
			hou_parm_template3.setConditional(hou.parmCondType.HideWhen, "{ type# != int3 } { usesnippet# == 1 } { sourcemode# != 2 }");
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template3 = new hou.FloatParmTemplate({name: "half3#", label: "Value", num_components: 3, default_value: [0, 0, 0], min: 0, max: 10, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.Base1});
			hou_parm_template3.setConditional(hou.parmCondType.DisableWhen, "{ enable# == 0 }");
			hou_parm_template3.setConditional(hou.parmCondType.HideWhen, "{ type# != half3 } { usesnippet# == 1 } { sourcemode# != 2 }");
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template3 = new hou.FloatParmTemplate({name: "float3#", label: "Value", num_components: 3, default_value: [0, 0, 0], min: 0, max: 10, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.Base1});
			hou_parm_template3.setConditional(hou.parmCondType.DisableWhen, "{ enable# == 0 }");
			hou_parm_template3.setConditional(hou.parmCondType.HideWhen, "{ type# != float3 } { usesnippet# == 1 } { sourcemode# != 2 }");
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template3 = new hou.FloatParmTemplate({name: "double3#", label: "Value", num_components: 3, default_value: [0, 0, 0], min: 0, max: 10, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.Base1});
			hou_parm_template3.setConditional(hou.parmCondType.DisableWhen, "{ enable# == 0 }");
			hou_parm_template3.setConditional(hou.parmCondType.HideWhen, "{ type# != double3 } { usesnippet# == 1 } { sourcemode# != 2 }");
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template3 = new hou.FloatParmTemplate({name: "point3f#", label: "Value", num_components: 3, default_value: [0, 0, 0], min: null, max: 1, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.XYZW});
			hou_parm_template3.setConditional(hou.parmCondType.DisableWhen, "{ enable# == 0 }");
			hou_parm_template3.setConditional(hou.parmCondType.HideWhen, "{ type# != point3f } { usesnippet# == 1 } { sourcemode# != 2 }");
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template3 = new hou.FloatParmTemplate({name: "point3d#", label: "Value", num_components: 3, default_value: [0, 0, 0], min: null, max: 1, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.XYZW});
			hou_parm_template3.setConditional(hou.parmCondType.DisableWhen, "{ enable# == 0 }");
			hou_parm_template3.setConditional(hou.parmCondType.HideWhen, "{ type# != point3d } { usesnippet# == 1 } { sourcemode# != 2 }");
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template3 = new hou.FloatParmTemplate({name: "vector3f#", label: "Value", num_components: 3, default_value: [0, 0, 0], min: null, max: 1, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.XYZW});
			hou_parm_template3.setConditional(hou.parmCondType.DisableWhen, "{ enable# == 0 }");
			hou_parm_template3.setConditional(hou.parmCondType.HideWhen, "{ type# != vector3f } { usesnippet# == 1 } { sourcemode# != 2 }");
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template3 = new hou.FloatParmTemplate({name: "vector3d#", label: "Value", num_components: 3, default_value: [0, 0, 0], min: null, max: 1, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.XYZW});
			hou_parm_template3.setConditional(hou.parmCondType.DisableWhen, "{ enable# == 0 }");
			hou_parm_template3.setConditional(hou.parmCondType.HideWhen, "{ type# != vector3d } { usesnippet# == 1 } { sourcemode# != 2 }");
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template3 = new hou.FloatParmTemplate({name: "normal3f#", label: "Value", num_components: 3, default_value: [0, 0, 0], min: null, max: 1, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.XYZW});
			hou_parm_template3.setConditional(hou.parmCondType.DisableWhen, "{ enable# == 0 }");
			hou_parm_template3.setConditional(hou.parmCondType.HideWhen, "{ type# != normal3f } { usesnippet# == 1 } { sourcemode# != 2 }");
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template3 = new hou.FloatParmTemplate({name: "normal3d#", label: "Value", num_components: 3, default_value: [0, 0, 0], min: null, max: 1, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.XYZW});
			hou_parm_template3.setConditional(hou.parmCondType.DisableWhen, "{ enable# == 0 }");
			hou_parm_template3.setConditional(hou.parmCondType.HideWhen, "{ type# != normal3d } { usesnippet# == 1 } { sourcemode# != 2 }");
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template3 = new hou.FloatParmTemplate({name: "color3f#", label: "Value", num_components: 3, default_value: [1, 1, 1], min: 0, max: 1, min_is_strict: false, max_is_strict: false, look: hou.parmLook.ColorSquare, naming_scheme: hou.parmNamingScheme.RGBA});
			hou_parm_template3.setConditional(hou.parmCondType.DisableWhen, "{ enable# == 0 }");
			hou_parm_template3.setConditional(hou.parmCondType.HideWhen, "{ type# != color3f } { usesnippet# == 1 } { sourcemode# != 2 }");
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template3 = new hou.FloatParmTemplate({name: "color3d#", label: "Value", num_components: 3, default_value: [1, 1, 1], min: 0, max: 1, min_is_strict: false, max_is_strict: false, look: hou.parmLook.ColorSquare, naming_scheme: hou.parmNamingScheme.RGBA});
			hou_parm_template3.setConditional(hou.parmCondType.DisableWhen, "{ enable# == 0 }");
			hou_parm_template3.setConditional(hou.parmCondType.HideWhen, "{ type# != color3d } { usesnippet# == 1 } { sourcemode# != 2 }");
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template3 = new hou.FloatParmTemplate({name: "color4f#", label: "Value", num_components: 4, default_value: [1, 1, 1, 0], min: 0, max: 1, min_is_strict: false, max_is_strict: false, look: hou.parmLook.ColorSquare, naming_scheme: hou.parmNamingScheme.RGBA});
			hou_parm_template3.setConditional(hou.parmCondType.DisableWhen, "{ enable# == 0 }");
			hou_parm_template3.setConditional(hou.parmCondType.HideWhen, "{ type# != color4f } { usesnippet# == 1 } { sourcemode# != 2 }");
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template3 = new hou.FloatParmTemplate({name: "color4d#", label: "Value", num_components: 4, default_value: [1, 1, 1, 0], min: 0, max: 1, min_is_strict: false, max_is_strict: false, look: hou.parmLook.ColorSquare, naming_scheme: hou.parmNamingScheme.RGBA});
			hou_parm_template3.setConditional(hou.parmCondType.DisableWhen, "{ enable# == 0 }");
			hou_parm_template3.setConditional(hou.parmCondType.HideWhen, "{ type# != color4d } { usesnippet# == 1 } { sourcemode# != 2 }");
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template3 = new hou.FloatParmTemplate({name: "texCoord2f#", label: "Value", num_components: 2, default_value: [0, 0], min: 0, max: 10, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.Base1});
			hou_parm_template3.setConditional(hou.parmCondType.DisableWhen, "{ enable# == 0 }");
			hou_parm_template3.setConditional(hou.parmCondType.HideWhen, "{ type# != texCoord2f } { usesnippet# == 1 } { sourcemode# != 2 }");
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template3 = new hou.FloatParmTemplate({name: "texCoord3f#", label: "Value", num_components: 3, default_value: [0, 0, 0], min: 0, max: 10, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.Base1});
			hou_parm_template3.setConditional(hou.parmCondType.DisableWhen, "{ enable# == 0 }");
			hou_parm_template3.setConditional(hou.parmCondType.HideWhen, "{ type# != texCoord3f } { usesnippet# == 1 } { sourcemode# != 2 }");
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template3 = new hou.IntParmTemplate({name: "int4#", label: "Value", num_components: 4, default_value: [0, 0, 0, 0], min: 0, max: 10, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.Base1, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.Normal, menu_use_token: false});
			hou_parm_template3.setConditional(hou.parmCondType.DisableWhen, "{ enable# == 0 }");
			hou_parm_template3.setConditional(hou.parmCondType.HideWhen, "{ type# != int4 } { usesnippet# == 1 } { sourcemode# != 2 }");
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template3 = new hou.FloatParmTemplate({name: "half4#", label: "Value", num_components: 4, default_value: [0, 0, 0, 0], min: 0, max: 10, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.Base1});
			hou_parm_template3.setConditional(hou.parmCondType.DisableWhen, "{ enable# == 0 }");
			hou_parm_template3.setConditional(hou.parmCondType.HideWhen, "{ type# != half4 } { usesnippet# == 1 } { sourcemode# != 2 }");
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template3 = new hou.FloatParmTemplate({name: "float4#", label: "Value", num_components: 4, default_value: [0, 0, 0, 0], min: 0, max: 10, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.Base1});
			hou_parm_template3.setConditional(hou.parmCondType.DisableWhen, "{ enable# == 0 }");
			hou_parm_template3.setConditional(hou.parmCondType.HideWhen, "{ type# != float4 } { usesnippet# == 1 } { sourcemode# != 2 }");
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template3 = new hou.FloatParmTemplate({name: "double4#", label: "Value", num_components: 4, default_value: [0, 0, 0, 0], min: 0, max: 10, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.Base1});
			hou_parm_template3.setConditional(hou.parmCondType.DisableWhen, "{ enable# == 0 }");
			hou_parm_template3.setConditional(hou.parmCondType.HideWhen, "{ type# != double4 } { usesnippet# == 1 } { sourcemode# != 2 }");
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template3 = new hou.FloatParmTemplate({name: "quath#", label: "Value", num_components: 4, default_value: [0, 0, 0, 0], min: 0, max: 10, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.Base1});
			hou_parm_template3.setConditional(hou.parmCondType.DisableWhen, "{ enable# == 0 }");
			hou_parm_template3.setConditional(hou.parmCondType.HideWhen, "{ type# != quath } { usesnippet# == 1 } { sourcemode# != 2 }");
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template3 = new hou.FloatParmTemplate({name: "quatf#", label: "Value", num_components: 4, default_value: [0, 0, 0, 0], min: 0, max: 10, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.Base1});
			hou_parm_template3.setConditional(hou.parmCondType.DisableWhen, "{ enable# == 0 }");
			hou_parm_template3.setConditional(hou.parmCondType.HideWhen, "{ type# != quatf } { usesnippet# == 1 } { sourcemode# != 2 }");
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template3 = new hou.FloatParmTemplate({name: "quatd#", label: "Value", num_components: 4, default_value: [0, 0, 0, 0], min: 0, max: 10, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.Base1});
			hou_parm_template3.setConditional(hou.parmCondType.DisableWhen, "{ enable# == 0 }");
			hou_parm_template3.setConditional(hou.parmCondType.HideWhen, "{ type# != quatd } { usesnippet# == 1 } { sourcemode# != 2 }");
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template3 = new hou.StringParmTemplate({name: "snippet#", label: "Snippet", num_components: 1, default_value: [""], naming_scheme: hou.parmNamingScheme.Base1, string_type: hou.stringParmType.Regular, menu_items: [], menu_labels: [], icon_names: [], item_generator_script: "import vexpressionmenu\n\nreturn vexpressionmenu.buildSnippetMenu('Lop/instancevariation/snippet')", item_generator_script_language: hou.scriptLanguage.Python, menu_type: hou.menuType.StringReplace});
			hou_parm_template3.setConditional(hou.parmCondType.DisableWhen, "{ enable# == 0 }");
			hou_parm_template3.setConditional(hou.parmCondType.HideWhen, "{ usesnippet# == 0 } { sourcemode# != 2 }");
			hou_parm_template3.hideLabel(true);
			hou_parm_template3.setTags({"editor": "1", "editorlang": "vex", "editorlines": "5-40", "script_action": "import vexpressionmenu\n\nnode = kwargs['node']\nparmname = kwargs['parmtuple'].name()\n\nvexpressionmenu.createSpareParmsFromChCalls(node, parmname)", "script_action_help": "Creates spare parameters for each unique call of ch() ", "script_action_icon": "BUTTONS_create_parm_from_ch"});
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template_group.append(hou_parm_template);
			
            this.parmTemplateGroup = hou_parm_template_group;
            this.parmTemplateGroup.linkNode(this);
        }
    }
    hou.registerType('LOP/Materials/materialvariation',_hnt_LOP_materialvariation)
    return _hnt_LOP_materialvariation
}
        