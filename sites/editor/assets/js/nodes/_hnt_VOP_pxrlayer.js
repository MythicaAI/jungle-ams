
export default function (hou) {
    class _hnt_VOP_pxrlayer extends hou._HoudiniBase {
        static is_root = false;
        static id = 'VOP/Other/pxrlayer';
        static category = '/VOP';
        static houdiniType = 'pxrlayer';
        static title = 'Pxr Layer';
        static icon = '/editor/assets/imgs/nodes/_hnt_VOP_pxrlayer.svg';
        constructor() {
            super();
            this.flags['houdini_type'] = this.__proto__.constructor.houdiniType;
            
            const inputs = ['VOP', 'VOP', 'VOP', 'VOP', 'VOP', 'VOP', 'VOP', 'VOP', 'VOP', 'VOP', 'VOP', 'VOP', 'VOP', 'VOP', 'VOP', 'VOP', 'VOP', 'VOP', 'VOP', 'VOP', 'VOP', 'VOP', 'VOP', 'VOP', 'VOP', 'VOP', 'VOP', 'VOP', 'VOP', 'VOP', 'VOP', 'VOP', 'VOP', 'VOP', 'VOP', 'VOP', 'VOP', 'VOP', 'VOP', 'VOP', 'VOP', 'VOP', 'VOP', 'VOP', 'VOP', 'VOP', 'VOP', 'VOP', 'VOP', 'VOP', 'VOP', 'VOP', 'VOP', 'VOP', 'VOP', 'VOP', 'VOP', 'VOP', 'VOP', 'VOP', 'VOP', 'VOP', 'VOP', 'VOP', 'VOP', 'VOP', 'VOP', 'VOP', 'VOP'];
            const outputs = ['VOP'];

            for(var i=0;i<inputs.length;i++) this.addInput(''+i,inputs[i]);        
            for(var j=0;j<outputs.length;j++) this.addOutput(''+j,outputs[j]);
        }
        parmTemplatesInit() {
            let hou_parm_template_group = new hou.ParmTemplateGroup();
			this.parmTemplateGroup = hou_parm_template_group;
			let hou_parm_template = new hou.FolderParmTemplate({name: "diffuse", label: "Diffuse", folder_type: hou.folderType.Tabs, default_value: 0, ends_tab_group: false});
			let hou_parm_template2 = new hou.ToggleParmTemplate({name: "enableDiffuse", label: "Enable", default_value: true});
			hou_parm_template2.setHelp("Enable the diffuse lobe.");
			hou_parm_template2.setTags({"script_ritype": "int"});
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template2 = new hou.FloatParmTemplate({name: "diffuseGain", label: "Gain", num_components: 1, default_value: [1], min: 0, max: 10, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.Base1});
			hou_parm_template2.setHelp("Multiplier for the diffuse lobe.");
			hou_parm_template2.setTags({"script_rienable": "enableDiffuse", "script_ritype": "float"});
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template2 = new hou.FloatParmTemplate({name: "diffuseColor", label: "Color", num_components: 3, default_value: [0.18, 0.18, 0.18], min: 0, max: 10, min_is_strict: false, max_is_strict: false, look: hou.parmLook.ColorSquare, naming_scheme: hou.parmNamingScheme.RGBA});
			hou_parm_template2.setHelp("Diffuse color of this layer.");
			hou_parm_template2.setTags({"script_rienable": "enableDiffuse", "script_ripremult": "diffuseGain", "script_ritype": "color"});
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template2 = new hou.FloatParmTemplate({name: "diffuseRoughness", label: "Roughness", num_components: 1, default_value: [0], min: 0, max: 10, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.Base1});
			hou_parm_template2.setHelp("If 0, this is a basic Lambert lobe. If it's > 0, it is Oren Nayar model.The higher the number, the rougher it gets.");
			hou_parm_template2.setTags({"script_rienable": "enableDiffuse", "script_ritype": "float"});
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template2 = new hou.FolderParmTemplate({name: "diffuse_advanced", label: "Advanced", folder_type: hou.folderType.Tabs, default_value: 0, ends_tab_group: false});
			let hou_parm_template3 = new hou.FloatParmTemplate({name: "diffuseBumpNormal", label: "Bump", num_components: 3, default_value: [0, 0, 0], min: 0, max: 10, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Vector, naming_scheme: hou.parmNamingScheme.XYZW});
			hou_parm_template3.setHelp("Connect a PxrBump node here if you need bump or normal-mapped normals for the diffuse lobe instead of using the normal bump in the Globals. Only valid when provided as a texture/connection.");
			hou_parm_template3.setTags({"script_rienable": "enableDiffuse", "script_ritype": "normal"});
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template3 = new hou.FloatParmTemplate({name: "diffuseBackColor", label: "Back Color", num_components: 3, default_value: [0.18, 0.18, 0.18], min: 0, max: 10, min_is_strict: false, max_is_strict: false, look: hou.parmLook.ColorSquare, naming_scheme: hou.parmNamingScheme.RGBA});
			hou_parm_template3.setHelp("Diffuse back color of this layer.");
			hou_parm_template3.setTags({"script_rienable": "enableDiffuse", "script_ritype": "color"});
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template3 = new hou.FloatParmTemplate({name: "diffuseTransmitGain", label: "Transmit Gain", num_components: 1, default_value: [0], min: 0, max: 10, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.Base1});
			hou_parm_template3.setHelp("Diffuse transmit gain.");
			hou_parm_template3.setTags({"script_rienable": "enableDiffuse", "script_ritype": "float"});
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template3 = new hou.FloatParmTemplate({name: "diffuseTransmitColor", label: "Transmit Color", num_components: 3, default_value: [0.18, 0.18, 0.18], min: 0, max: 10, min_is_strict: false, max_is_strict: false, look: hou.parmLook.ColorSquare, naming_scheme: hou.parmNamingScheme.RGBA});
			hou_parm_template3.setHelp("Diffuse transmit color of this layer.");
			hou_parm_template3.setTags({"script_rienable": "enableDiffuse", "script_ripremult": "diffuseTransmitGain", "script_ritype": "color"});
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template_group.append(hou_parm_template);
			hou_parm_template = new hou.FolderParmTemplate({name: "diffuse_1", label: "PrimarySpecular", folder_type: hou.folderType.Tabs, default_value: 0, ends_tab_group: false});
			hou_parm_template2 = new hou.ToggleParmTemplate({name: "enableSpecular", label: "Enable", default_value: false});
			hou_parm_template2.setHelp("Enable the specular lobe.");
			hou_parm_template2.setTags({"script_ritype": "int"});
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template2 = new hou.FloatParmTemplate({name: "specularGain", label: "Gain", num_components: 1, default_value: [0], min: 0, max: 10, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.Base1});
			hou_parm_template2.setHelp("Multiplier for the specular lobe.");
			hou_parm_template2.setTags({"script_rienable": "enableSpecular", "script_rioutput": "0", "script_ritype": "float"});
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template2 = new hou.FloatParmTemplate({name: "specularFaceColor", label: "Face Color", num_components: 3, default_value: [0, 0, 0], min: 0, max: 10, min_is_strict: false, max_is_strict: false, look: hou.parmLook.ColorSquare, naming_scheme: hou.parmNamingScheme.RGBA});
			hou_parm_template2.setHelp("Specular color at 0 degree incidence. This is the specular color for facing the camera.");
			hou_parm_template2.setTags({"script_rienable": "enableSpecular", "script_ritype": "color"});
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template2 = new hou.FloatParmTemplate({name: "specularEdgeColor", label: "Edge Color", num_components: 3, default_value: [0, 0, 0], min: 0, max: 10, min_is_strict: false, max_is_strict: false, look: hou.parmLook.ColorSquare, naming_scheme: hou.parmNamingScheme.RGBA});
			hou_parm_template2.setHelp("Specular color at 90 degree incidence. This is the specular color for the glancing angle on the edge.");
			hou_parm_template2.setTags({"script_rienable": "enableSpecular", "script_ritype": "color"});
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template2 = new hou.FloatParmTemplate({name: "specularRoughness", label: "Roughness", num_components: 1, default_value: [0.2], min: 0, max: 10, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.Base1});
			hou_parm_template2.setHelp("Specular roughness. The higher the number, the rougher it gets. The range is between 0 to 1. Negative number is not allowed.Suggested values range from 0 to 0.4.");
			hou_parm_template2.setTags({"script_rienable": "enableSpecular", "script_ritype": "float"});
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template2 = new hou.FolderParmTemplate({name: "primaryspecular_physical", label: "Physical", folder_type: hou.folderType.Tabs, default_value: 0, ends_tab_group: false});
			hou_parm_template3 = new hou.FloatParmTemplate({name: "specularIor", label: "Refraction Index", num_components: 3, default_value: [1.5, 1.5, 1.5], min: 0, max: 10, min_is_strict: false, max_is_strict: false, look: hou.parmLook.ColorSquare, naming_scheme: hou.parmNamingScheme.RGBA});
			hou_parm_template3.setHelp("This is for physical specular fresnel mode only. Refractive Index is the dielectric index of refraction for the material. Channel values for this parameter typically lie in the range 1 - 3. Since we support 3 color values to capture the spectral effect presets may be preferred over color pickers.");
			hou_parm_template3.setTags({"script_rienable": "enableSpecular", "script_ritype": "color"});
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template3 = new hou.FloatParmTemplate({name: "specularExtinctionCoeff", label: "Extinction Coefficient", num_components: 3, default_value: [0, 0, 0], min: 0, max: 10, min_is_strict: false, max_is_strict: false, look: hou.parmLook.ColorSquare, naming_scheme: hou.parmNamingScheme.RGBA});
			hou_parm_template3.setHelp("This is for physical specular only.Extinction Coefficient is a second refractive index for the material useful for characterizing metallic behaviors. Channel values for this parameter typically lie in the range 1 - 3. Since we support 3 color values to capture the spectral effect presets may be prefered over color pickers. When 0, the material reacts as a dielectric glass, clearcoat)> When non-zero, the material responds as a conductor would.");
			hou_parm_template3.setTags({"script_rienable": "enableSpecular", "script_ritype": "color"});
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template2 = new hou.FolderParmTemplate({name: "primaryspecular_physical_1", label: "Advanced", folder_type: hou.folderType.Tabs, default_value: 0, ends_tab_group: false});
			hou_parm_template3 = new hou.FloatParmTemplate({name: "specularAnisotropy", label: "Anisotropy", num_components: 1, default_value: [0], min: 0, max: 10, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.Base1});
			hou_parm_template3.setHelp("Controls the shape of the specular highlights and reflections.At 0 the shape is circular. Values from -1 to 1 produce the range of ellipses from fat to tall. The direction of anisotropycan also be controlled by your model texture parameters and bythe Shading Tangent parameter.");
			hou_parm_template3.setTags({"script_rienable": "enableSpecular", "script_ritype": "float"});
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template3 = new hou.FloatParmTemplate({name: "specularBumpNormal", label: "Bump", num_components: 3, default_value: [0, 0, 0], min: 0, max: 10, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Vector, naming_scheme: hou.parmNamingScheme.XYZW});
			hou_parm_template3.setHelp("Connect a PxrBump node here if you need bump or normal-mapped normals for the specular lobe instead of using the global normal bump. Only valid when provided as a texture/connection.");
			hou_parm_template3.setTags({"script_rienable": "enableSpecular", "script_ritype": "normal"});
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template_group.append(hou_parm_template);
			hou_parm_template = new hou.FolderParmTemplate({name: "diffuse_2", label: "RoughSpecular", folder_type: hou.folderType.Tabs, default_value: 0, ends_tab_group: false});
			hou_parm_template2 = new hou.ToggleParmTemplate({name: "enableRoughSpecular", label: "Enable", default_value: false});
			hou_parm_template2.setHelp("Enable the rough specular lobe.");
			hou_parm_template2.setTags({"script_ritype": "int"});
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template2 = new hou.FloatParmTemplate({name: "roughSpecularGain", label: "Gain", num_components: 1, default_value: [0], min: 0, max: 10, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.Base1});
			hou_parm_template2.setHelp("Multiplier for the rough specular lobe.");
			hou_parm_template2.setTags({"script_rienable": "enableRoughSpecular", "script_rioutput": "0", "script_ritype": "float"});
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template2 = new hou.FloatParmTemplate({name: "roughSpecularFaceColor", label: "Face Color", num_components: 3, default_value: [0, 0, 0], min: 0, max: 10, min_is_strict: false, max_is_strict: false, look: hou.parmLook.ColorSquare, naming_scheme: hou.parmNamingScheme.RGBA});
			hou_parm_template2.setHelp("Specular color at 0 degree incidence. This is the specular color for facing the camera.");
			hou_parm_template2.setTags({"script_rienable": "enableRoughSpecular", "script_ritype": "color"});
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template2 = new hou.FloatParmTemplate({name: "roughSpecularEdgeColor", label: "Edge Color", num_components: 3, default_value: [0, 0, 0], min: 0, max: 10, min_is_strict: false, max_is_strict: false, look: hou.parmLook.ColorSquare, naming_scheme: hou.parmNamingScheme.RGBA});
			hou_parm_template2.setHelp("Specular color at 90 degree incidence. This is the specular color for the glancing angle on the edge.");
			hou_parm_template2.setTags({"script_rienable": "enableRoughSpecular", "script_ritype": "color"});
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template2 = new hou.FloatParmTemplate({name: "roughSpecularRoughness", label: "Roughness", num_components: 1, default_value: [0.6], min: 0, max: 10, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.Base1});
			hou_parm_template2.setHelp("Specular roughness. The higher the number, the rougher it gets. The range is between 0 to 1. Negative number is not allowed.Suggested values range from 0.4 to 1.0.");
			hou_parm_template2.setTags({"script_rienable": "enableRoughSpecular", "script_ritype": "float"});
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template2 = new hou.FolderParmTemplate({name: "roughspecular_physical", label: "Physical", folder_type: hou.folderType.Tabs, default_value: 0, ends_tab_group: false});
			hou_parm_template3 = new hou.FloatParmTemplate({name: "roughSpecularIor", label: "Refraction Index", num_components: 3, default_value: [1.5, 1.5, 1.5], min: 0, max: 10, min_is_strict: false, max_is_strict: false, look: hou.parmLook.ColorSquare, naming_scheme: hou.parmNamingScheme.RGBA});
			hou_parm_template3.setHelp("This is for physical specular fresnel mode only. Refractive Index is the dielectric index of refraction for the material. Channel values for this parameter typically lie in the range 1 - 3. Since we support 3 color values to capture the spectral effect presets may be preferred over color pickers.");
			hou_parm_template3.setTags({"script_rienable": "enableRoughSpecular", "script_ritype": "color"});
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template3 = new hou.FloatParmTemplate({name: "roughSpecularExtinctionCoeff", label: "Extinction Coefficient", num_components: 3, default_value: [0, 0, 0], min: 0, max: 10, min_is_strict: false, max_is_strict: false, look: hou.parmLook.ColorSquare, naming_scheme: hou.parmNamingScheme.RGBA});
			hou_parm_template3.setHelp("This is for physical specular fresnel mode only. Extinction Coefficient is a second refractive index for the material useful for characterizing metallic behaviors. Channel values for this parameter typically lie in the range 1 - 3. Since we support 3 color values to capture the spectral effect presets may be prefered over color pickers. When 0, the material reacts as a dielectric glass, clearcoat)> When non-zero, the material responds as a conductor would.");
			hou_parm_template3.setTags({"script_rienable": "enableRoughSpecular", "script_ritype": "color"});
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template2 = new hou.FolderParmTemplate({name: "roughspecular_physical_1", label: "Advanced", folder_type: hou.folderType.Tabs, default_value: 0, ends_tab_group: false});
			hou_parm_template3 = new hou.FloatParmTemplate({name: "roughSpecularAnisotropy", label: "Anisotropy", num_components: 1, default_value: [0], min: 0, max: 10, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.Base1});
			hou_parm_template3.setHelp("If > 0, this specular lobe will get anisotropic along a direction defined by the surface.");
			hou_parm_template3.setTags({"script_rienable": "enableRoughSpecular", "script_ritype": "float"});
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template3 = new hou.FloatParmTemplate({name: "roughSpecularBumpNormal", label: "Bump", num_components: 3, default_value: [0, 0, 0], min: 0, max: 10, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Vector, naming_scheme: hou.parmNamingScheme.XYZW});
			hou_parm_template3.setHelp("Connect a PxrBump node here if you need bump or normal-mapped normals for the specular lobe instead of using the global normal bump. Only valid when provided as a texture/connection.");
			hou_parm_template3.setTags({"script_rienable": "enableRoughSpecular", "script_ritype": "normal"});
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template_group.append(hou_parm_template);
			hou_parm_template = new hou.FolderParmTemplate({name: "diffuse_3", label: "ClearCoat", folder_type: hou.folderType.Tabs, default_value: 0, ends_tab_group: false});
			hou_parm_template2 = new hou.ToggleParmTemplate({name: "enableClearcoat", label: "Enable", default_value: false});
			hou_parm_template2.setHelp("Enable the clear coat lobe.");
			hou_parm_template2.setTags({"script_ritype": "int"});
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template2 = new hou.FloatParmTemplate({name: "clearcoatGain", label: "Gain", num_components: 1, default_value: [0], min: 0, max: 10, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.Base1});
			hou_parm_template2.setHelp("Multiplier for the clear coat lobe.");
			hou_parm_template2.setTags({"script_rienable": "enableClearcoat", "script_rioutput": "0", "script_ritype": "float"});
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template2 = new hou.FloatParmTemplate({name: "clearcoatFaceColor", label: "Face Color", num_components: 3, default_value: [0, 0, 0], min: 0, max: 10, min_is_strict: false, max_is_strict: false, look: hou.parmLook.ColorSquare, naming_scheme: hou.parmNamingScheme.RGBA});
			hou_parm_template2.setHelp("Specular color at 0 degree incidence. This is the specular color for facing the camera.");
			hou_parm_template2.setTags({"script_rienable": "enableClearcoat", "script_ritype": "color"});
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template2 = new hou.FloatParmTemplate({name: "clearcoatEdgeColor", label: "Edge Color", num_components: 3, default_value: [0, 0, 0], min: 0, max: 10, min_is_strict: false, max_is_strict: false, look: hou.parmLook.ColorSquare, naming_scheme: hou.parmNamingScheme.RGBA});
			hou_parm_template2.setHelp("Specular color at 90 degree incidence. This is the specular color for the glancing angle on the edge.");
			hou_parm_template2.setTags({"script_rienable": "enableClearcoat", "script_ritype": "color"});
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template2 = new hou.FloatParmTemplate({name: "clearcoatRoughness", label: "Roughness", num_components: 1, default_value: [0], min: 0, max: 10, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.Base1});
			hou_parm_template2.setHelp("Clearcoat roughness. The higher the number, the rougher it gets. The range is between 0 to 1. Negative number is not allowed.Suggested values range from 0 to 0.2.");
			hou_parm_template2.setTags({"script_rienable": "enableClearcoat", "script_ritype": "float"});
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template2 = new hou.FolderParmTemplate({name: "clearcoat_physical", label: "Physical", folder_type: hou.folderType.Tabs, default_value: 0, ends_tab_group: false});
			hou_parm_template3 = new hou.FloatParmTemplate({name: "clearcoatIor", label: "Refraction Index", num_components: 3, default_value: [1.5, 1.5, 1.5], min: 0, max: 10, min_is_strict: false, max_is_strict: false, look: hou.parmLook.ColorSquare, naming_scheme: hou.parmNamingScheme.RGBA});
			hou_parm_template3.setHelp("This is for physical specular fresnel mode only. Refractive Index is the dielectric index of refraction for the material. Channel values for this parameter typically lie in the range 1 - 3. Since we support 3 color values to capture the spectral effect presets may be preferred over color pickers.");
			hou_parm_template3.setTags({"script_rienable": "enableClearcoat", "script_ritype": "color"});
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template3 = new hou.FloatParmTemplate({name: "clearcoatExtinctionCoeff", label: "Extinction Coefficient", num_components: 3, default_value: [0, 0, 0], min: 0, max: 10, min_is_strict: false, max_is_strict: false, look: hou.parmLook.ColorSquare, naming_scheme: hou.parmNamingScheme.RGBA});
			hou_parm_template3.setHelp("This is for physical specular fresnel mode only. Extinction Coefficient is a second refractive index for the material useful for characterizing metallic behaviors. Channel values for this parameter typically lie in the range 1 - 3. Since we support 3 color values to capture the spectral effect presets may be prefered over color pickers. When 0, the material reacts as a dielectric glass, clearcoat)> When non-zero, the material responds as a conductor would.");
			hou_parm_template3.setTags({"script_rienable": "enableClearcoat", "script_ritype": "color"});
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template2 = new hou.FolderParmTemplate({name: "clearcoat_physical_1", label: "Advanced", folder_type: hou.folderType.Tabs, default_value: 0, ends_tab_group: false});
			hou_parm_template3 = new hou.FloatParmTemplate({name: "clearcoatAnisotropy", label: "Anisotropy", num_components: 1, default_value: [0], min: 0, max: 10, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.Base1});
			hou_parm_template3.setHelp("Controls the shape of the specular highlights and reflections.At 0 the shape is circular. Values from -1 to 1 produce the range of ellipses from fat to tall. The direction of anisotropycan also be controlled by your model texture parameters and bythe Shading Tangent parameter.");
			hou_parm_template3.setTags({"script_rienable": "enableClearcoat", "script_ritype": "float"});
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template3 = new hou.FloatParmTemplate({name: "clearcoatBumpNormal", label: "Bump", num_components: 3, default_value: [0, 0, 0], min: 0, max: 10, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Vector, naming_scheme: hou.parmNamingScheme.XYZW});
			hou_parm_template3.setHelp("Connect a PxrBump node here if you need bump or normal-mapped normals for the clearcoat lobe instead of using the global normal bump. Only valid when provided as a texture/connection.");
			hou_parm_template3.setTags({"script_rienable": "enableClearcoat", "script_ritype": "normal"});
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template_group.append(hou_parm_template);
			hou_parm_template = new hou.FolderParmTemplate({name: "diffuse_4", label: "Iridescence", folder_type: hou.folderType.Tabs, default_value: 0, ends_tab_group: false});
			hou_parm_template2 = new hou.ToggleParmTemplate({name: "enableIridescence", label: "Enable", default_value: false});
			hou_parm_template2.setHelp("Enable the iridescence lobe.");
			hou_parm_template2.setTags({"script_ritype": "int"});
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template2 = new hou.FloatParmTemplate({name: "iridescenceFaceGain", label: "Face Gain", num_components: 1, default_value: [0], min: 0, max: 10, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.Base1});
			hou_parm_template2.setHelp("Iridescence gain at 0 degree incidence.This is the iridescence gain for facing the camera.");
			hou_parm_template2.setTags({"script_rienable": "enableIridescence", "script_ritype": "float"});
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template2 = new hou.FloatParmTemplate({name: "iridescenceEdgeGain", label: "Edge Gain", num_components: 1, default_value: [0], min: 0, max: 10, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.Base1});
			hou_parm_template2.setHelp("Iridescence gain at 90 degree incidence.This is the iridescence gain for the glancing angle on the edge.");
			hou_parm_template2.setTags({"script_rienable": "enableIridescence", "script_ritype": "float"});
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template2 = new hou.FloatParmTemplate({name: "iridescencePrimaryColor", label: "Primary Color", num_components: 3, default_value: [1, 0, 0], min: 0, max: 10, min_is_strict: false, max_is_strict: false, look: hou.parmLook.ColorSquare, naming_scheme: hou.parmNamingScheme.RGBA});
			hou_parm_template2.setHelp("Iridescence primary color on the hue wheel to start from.");
			hou_parm_template2.setTags({"script_rienable": "enableIridescence", "script_ritype": "color"});
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template2 = new hou.FloatParmTemplate({name: "iridescenceSecondaryColor", label: "Secondary Color", num_components: 3, default_value: [0, 0, 1], min: 0, max: 10, min_is_strict: false, max_is_strict: false, look: hou.parmLook.ColorSquare, naming_scheme: hou.parmNamingScheme.RGBA});
			hou_parm_template2.setHelp("Iridescence secondary color on the hue wheel to end at.");
			hou_parm_template2.setTags({"script_rienable": "enableIridescence", "script_ritype": "color"});
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template2 = new hou.FloatParmTemplate({name: "iridescenceRoughness", label: "Roughness", num_components: 1, default_value: [0.2], min: 0, max: 10, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.Base1});
			hou_parm_template2.setHelp("Iridescence roughness.The higher the number, it rougher it gets.The range is between 0 to 1. Negative number is not allowed.");
			hou_parm_template2.setTags({"script_rienable": "enableIridescence", "script_ritype": "float"});
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template2 = new hou.FolderParmTemplate({name: "iridescence_physical", label: "Physical", folder_type: hou.folderType.Tabs, default_value: 0, ends_tab_group: false});
			hou_parm_template3 = new hou.FloatParmTemplate({name: "iridescenceThickness", label: "Thin Film Thickness", num_components: 1, default_value: [800], min: 0, max: 10, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.Base1});
			hou_parm_template3.setHelp("This is for physical mode only. Thin film thickness in nanometer.");
			hou_parm_template3.setTags({"script_rienable": "enableIridescence", "script_ritype": "float"});
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template_group.append(hou_parm_template);
			hou_parm_template = new hou.FolderParmTemplate({name: "diffuse_5", label: "Fuzz", folder_type: hou.folderType.Tabs, default_value: 0, ends_tab_group: false});
			hou_parm_template2 = new hou.ToggleParmTemplate({name: "enableFuzz", label: "Enable", default_value: false});
			hou_parm_template2.setHelp("Enable the fuzz lobe.");
			hou_parm_template2.setTags({"script_ritype": "int"});
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template2 = new hou.FloatParmTemplate({name: "fuzzGain", label: "Gain", num_components: 1, default_value: [0], min: 0, max: 10, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.Base1});
			hou_parm_template2.setHelp("Multiplier for the fuzz lobe.");
			hou_parm_template2.setTags({"script_rienable": "enableFuzz", "script_ritype": "float"});
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template2 = new hou.FloatParmTemplate({name: "fuzzColor", label: "Color", num_components: 3, default_value: [1, 1, 1], min: 0, max: 10, min_is_strict: false, max_is_strict: false, look: hou.parmLook.ColorSquare, naming_scheme: hou.parmNamingScheme.RGBA});
			hou_parm_template2.setHelp("Fuzz color. This sets the color for the fuzz lobe.");
			hou_parm_template2.setTags({"script_rienable": "enableFuzz", "script_ripremult": "fuzzGain", "script_ritype": "color"});
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template2 = new hou.FloatParmTemplate({name: "fuzzConeAngle", label: "Cone Angle", num_components: 1, default_value: [8], min: 0, max: 10, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.Base1});
			hou_parm_template2.setHelp("Fuzz roughness corresponding to Marschner R cone angle).");
			hou_parm_template2.setTags({"script_rienable": "enableFuzz", "script_ritype": "float"});
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template2 = new hou.FolderParmTemplate({name: "fuzz_advanced", label: "Advanced", folder_type: hou.folderType.Tabs, default_value: 0, ends_tab_group: false});
			hou_parm_template3 = new hou.FloatParmTemplate({name: "fuzzBumpNormal", label: "Bump", num_components: 3, default_value: [0, 0, 0], min: 0, max: 10, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Vector, naming_scheme: hou.parmNamingScheme.XYZW});
			hou_parm_template3.setHelp("Connect a PxrBump node here if you need bump or normal-mapped normals for the fuzz lobe instead of using the global normal bump. Only valid when provided as a texture/connection.");
			hou_parm_template3.setTags({"script_rienable": "enableFuzz", "script_ritype": "normal"});
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template_group.append(hou_parm_template);
			hou_parm_template = new hou.FolderParmTemplate({name: "diffuse_6", label: "Subsurface", folder_type: hou.folderType.Tabs, default_value: 0, ends_tab_group: false});
			hou_parm_template2 = new hou.ToggleParmTemplate({name: "enableSubsurface", label: "Enable", default_value: false});
			hou_parm_template2.setHelp("Enable the subsurface lobe.");
			hou_parm_template2.setTags({"script_ritype": "int"});
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template2 = new hou.FloatParmTemplate({name: "subsurfaceGain", label: "Gain", num_components: 1, default_value: [0], min: 0, max: 10, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.Base1});
			hou_parm_template2.setHelp("Multiplier for the subsurface lobe.");
			hou_parm_template2.setTags({"script_rienable": "enableSubsurface", "script_ritype": "float"});
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template2 = new hou.FloatParmTemplate({name: "subsurfaceColor", label: "Color", num_components: 3, default_value: [0.83, 0.791, 0.753], min: 0, max: 10, min_is_strict: false, max_is_strict: false, look: hou.parmLook.ColorSquare, naming_scheme: hou.parmNamingScheme.RGBA});
			hou_parm_template2.setHelp("Subsurface color. This sets the color for the subsurface lobe.");
			hou_parm_template2.setTags({"script_rienable": "enableSubsurface", "script_ritype": "color"});
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template2 = new hou.FloatParmTemplate({name: "subsurfaceDmfp", label: "Mean Free Path Distance", num_components: 1, default_value: [10], min: 0, max: 10, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.Base1});
			hou_parm_template2.setHelp("Subsurface mean free path scalar distance.This specifies how far the light travels. This gets multiplied to the Mean Free Path Color below.");
			hou_parm_template2.setTags({"script_rienable": "enableSubsurface", "script_ritype": "float"});
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template2 = new hou.FloatParmTemplate({name: "subsurfaceDmfpColor", label: "Mean Free Path Color", num_components: 3, default_value: [0.851, 0.557, 0.395], min: 0, max: 10, min_is_strict: false, max_is_strict: false, look: hou.parmLook.ColorSquare, naming_scheme: hou.parmNamingScheme.RGBA});
			hou_parm_template2.setHelp("Subsurface mean free path color. This specifies how far the light travels in the R, G and B spectra.");
			hou_parm_template2.setTags({"script_rienable": "enableSubsurface", "script_ripremult": "subsurfaceDmfp", "script_ritype": "color"});
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template2 = new hou.FolderParmTemplate({name: "subsurface_multiplemeanfreepaths", label: "MultipleMeanFreePaths", folder_type: hou.folderType.Tabs, default_value: 0, ends_tab_group: false});
			hou_parm_template3 = new hou.FloatParmTemplate({name: "shortSubsurfaceGain", label: "Short Gain", num_components: 1, default_value: [0], min: 0, max: 10, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.Base1});
			hou_parm_template3.setHelp("Multiplier for the subsurface lobe.");
			hou_parm_template3.setTags({"script_rienable": "enableSubsurface", "script_ritype": "float"});
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template3 = new hou.FloatParmTemplate({name: "shortSubsurfaceColor", label: "Short Color", num_components: 3, default_value: [0.9, 0.9, 0.9], min: 0, max: 10, min_is_strict: false, max_is_strict: false, look: hou.parmLook.ColorSquare, naming_scheme: hou.parmNamingScheme.RGBA});
			hou_parm_template3.setHelp("Subsurface color. This sets the color for the subsurface lobe.");
			hou_parm_template3.setTags({"script_rienable": "enableSubsurface", "script_ritype": "color"});
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template3 = new hou.FloatParmTemplate({name: "shortSubsurfaceDmfp", label: "Short MFP Distance", num_components: 1, default_value: [5], min: 0, max: 10, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.Base1});
			hou_parm_template3.setHelp("Subsurface mean free path scalar distance.This specifies how far the light travels. This gets multiplied to the Mean Free Path Color below.");
			hou_parm_template3.setTags({"script_rienable": "enableSubsurface", "script_ritype": "float"});
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template3 = new hou.FloatParmTemplate({name: "longSubsurfaceGain", label: "Long Gain", num_components: 1, default_value: [0], min: 0, max: 10, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.Base1});
			hou_parm_template3.setHelp("Multiplier for the subsurface lobe.");
			hou_parm_template3.setTags({"script_rienable": "enableSubsurface", "script_ritype": "float"});
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template3 = new hou.FloatParmTemplate({name: "longSubsurfaceColor", label: "Long Color", num_components: 3, default_value: [0.8, 0, 0], min: 0, max: 10, min_is_strict: false, max_is_strict: false, look: hou.parmLook.ColorSquare, naming_scheme: hou.parmNamingScheme.RGBA});
			hou_parm_template3.setHelp("Subsurface color. This sets the color for the subsurface lobe.");
			hou_parm_template3.setTags({"script_rienable": "enableSubsurface", "script_ritype": "color"});
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template3 = new hou.FloatParmTemplate({name: "longSubsurfaceDmfp", label: "Long MFP Distance", num_components: 1, default_value: [20], min: 0, max: 10, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.Base1});
			hou_parm_template3.setHelp("Subsurface mean free path scalar distance.This specifies how far the light travels. This gets multiplied to the Mean Free Path Color below.");
			hou_parm_template3.setTags({"script_rienable": "enableSubsurface", "script_ritype": "float"});
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template2 = new hou.FolderParmTemplate({name: "subsurface_multiplemeanfreepaths_1", label: "Advanced", folder_type: hou.folderType.Tabs, default_value: 0, ends_tab_group: false});
			hou_parm_template3 = new hou.FloatParmTemplate({name: "subsurfacePostTint", label: "Post Tint", num_components: 3, default_value: [1, 1, 1], min: 0, max: 10, min_is_strict: false, max_is_strict: false, look: hou.parmLook.ColorSquare, naming_scheme: hou.parmNamingScheme.RGBA});
			hou_parm_template3.setHelp("Tint that is applied at the end of the subsurface computation.");
			hou_parm_template3.setTags({"script_rienable": "enableSubsurface", "script_ripremult": "subsurfaceGain", "script_ritype": "color"});
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template_group.append(hou_parm_template);
			hou_parm_template = new hou.FolderParmTemplate({name: "diffuse_7", label: "SingleScatter", folder_type: hou.folderType.Tabs, default_value: 0, ends_tab_group: false});
			hou_parm_template2 = new hou.ToggleParmTemplate({name: "enableSinglescatter", label: "Enable", default_value: false});
			hou_parm_template2.setHelp("Enable the single scatter lobe.");
			hou_parm_template2.setTags({"script_ritype": "int"});
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template2 = new hou.FloatParmTemplate({name: "singlescatterGain", label: "Gain", num_components: 1, default_value: [0], min: 0, max: 10, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.Base1});
			hou_parm_template2.setHelp("Multiplier for the single scatter lobe.");
			hou_parm_template2.setTags({"script_rienable": "enableSingleScatter", "script_ritype": "float"});
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template2 = new hou.FloatParmTemplate({name: "singlescatterColor", label: "Color", num_components: 3, default_value: [0.83, 0.791, 0.753], min: 0, max: 10, min_is_strict: false, max_is_strict: false, look: hou.parmLook.ColorSquare, naming_scheme: hou.parmNamingScheme.RGBA});
			hou_parm_template2.setHelp("Single scatter color. This is the color for the single scatter lobe.");
			hou_parm_template2.setTags({"script_rienable": "enableSingleScatter", "script_ripremult": "singlescatterGain", "script_ritype": "color"});
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template2 = new hou.FloatParmTemplate({name: "singlescatterMfp", label: "Mean Free Path", num_components: 1, default_value: [10], min: 0, max: 10, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.Base1});
			hou_parm_template2.setHelp("Single scatter mean free path scalar distance.This specifies how far the light travels. This gets multiplied to the Mean Free Path Color below.");
			hou_parm_template2.setTags({"script_rienable": "enableSingleScatter", "script_ritype": "float"});
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template2 = new hou.FloatParmTemplate({name: "singlescatterMfpColor", label: "Mean Free Path Color", num_components: 3, default_value: [0.851, 0.557, 0.395], min: 0, max: 10, min_is_strict: false, max_is_strict: false, look: hou.parmLook.ColorSquare, naming_scheme: hou.parmNamingScheme.RGBA});
			hou_parm_template2.setHelp("Single scatter mean free path color. This specifies how far the light travels in the R, G and B spectra.");
			hou_parm_template2.setTags({"script_rienable": "enableSingleScatter", "script_ripremult": "singlescatterMfp", "script_ritype": "color"});
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template2 = new hou.FolderParmTemplate({name: "singlescatter_advanced", label: "Advanced", folder_type: hou.folderType.Tabs, default_value: 0, ends_tab_group: false});
			hou_parm_template3 = new hou.FloatParmTemplate({name: "singlescatterDirectionality", label: "Directionality", num_components: 1, default_value: [0], min: 0, max: 10, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.Base1});
			hou_parm_template3.setHelp("0 isotropic no effect). 1 forward scatter more light on backside). -1 backwards scatter more light on front side)");
			hou_parm_template3.setTags({"script_rienable": "enableSingleScatter", "script_ritype": "float"});
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template3 = new hou.FloatParmTemplate({name: "singlescatterIor", label: "Refractive Index", num_components: 1, default_value: [1.3], min: 0, max: 10, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.Base1});
			hou_parm_template3.setHelp("Affects how light bends when entering the medium. 1.5 makes sense for glass. Skin is aound 1.3.");
			hou_parm_template3.setTags({"script_rienable": "enableSingleScatter", "script_ritype": "float"});
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template3 = new hou.FloatParmTemplate({name: "singlescatterBlur", label: "Blur", num_components: 1, default_value: [0], min: 0, max: 10, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.Base1});
			hou_parm_template3.setHelp("Spread of the rays when entering the surface. Affects both single scatter and its 'direct' component.");
			hou_parm_template3.setTags({"script_rienable": "enableSingleScatter", "script_ritype": "float"});
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template3 = new hou.FloatParmTemplate({name: "singlescatterDirectGain", label: "Backside Direct Illum Gain", num_components: 1, default_value: [0], min: 0, max: 10, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.Base1});
			hou_parm_template3.setHelp("Independent from singlescatterK, this defines a gain for rays going straight through the geometry not scattered)");
			hou_parm_template3.setTags({"script_rienable": "enableSingleScatter", "script_ritype": "float"});
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template3 = new hou.FloatParmTemplate({name: "singlescatterDirectGainTint", label: "Direction Tint", num_components: 3, default_value: [1, 1, 1], min: 0, max: 10, min_is_strict: false, max_is_strict: false, look: hou.parmLook.ColorSquare, naming_scheme: hou.parmNamingScheme.RGBA});
			hou_parm_template3.setHelp("Independent from singlescatterTint, this defines a color for rays going straight through the geometry not scattered).");
			hou_parm_template3.setTags({"script_rienable": "enableSingleScatter", "script_ritype": "color"});
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template_group.append(hou_parm_template);
			hou_parm_template = new hou.FolderParmTemplate({name: "diffuse_8", label: "Glass", folder_type: hou.folderType.Tabs, default_value: 0, ends_tab_group: false});
			hou_parm_template2 = new hou.ToggleParmTemplate({name: "enableRR", label: "Enable", default_value: false});
			hou_parm_template2.setHelp("Global toggle for the glass lobe, both reflection and refraction");
			hou_parm_template2.setTags({"script_ritype": "int"});
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template2 = new hou.FloatParmTemplate({name: "rrRefractionGain", label: "Refraction Gain", num_components: 1, default_value: [0], min: 0, max: 10, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.Base1});
			hou_parm_template2.setHelp("Multiplier for the refraction component of this lobe.");
			hou_parm_template2.setTags({"script_rienable": "enableRR", "script_rioutputname": "refractionGain", "script_ritype": "float"});
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template2 = new hou.FloatParmTemplate({name: "rrReflectionGain", label: "Reflection Gain", num_components: 1, default_value: [0], min: 0, max: 10, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.Base1});
			hou_parm_template2.setHelp("Multiplier for the reflection component of this lobe.");
			hou_parm_template2.setTags({"script_rienable": "enableRR", "script_rioutputname": "reflectionGain", "script_ritype": "float"});
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template2 = new hou.FloatParmTemplate({name: "rrRefractionColor", label: "Refraction Color", num_components: 3, default_value: [1, 1, 1], min: 0, max: 10, min_is_strict: false, max_is_strict: false, look: hou.parmLook.ColorSquare, naming_scheme: hou.parmNamingScheme.RGBA});
			hou_parm_template2.setHelp("Tint the objects seen through this medium.");
			hou_parm_template2.setTags({"script_rienable": "enableRR", "script_rioutputname": "refractionColor", "script_ripremult": "refractionGain", "script_ritype": "color"});
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template2 = new hou.FloatParmTemplate({name: "rrRoughness", label: "Roughness", num_components: 1, default_value: [0.1], min: 0, max: 10, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.Base1});
			hou_parm_template2.setHelp("Shared roughness for both reflection and refraction.");
			hou_parm_template2.setTags({"script_rienable": "enableRR", "script_rioutputname": "glassRoughness", "script_ritype": "float"});
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template2 = new hou.FolderParmTemplate({name: "glass_advanced", label: "Advanced", folder_type: hou.folderType.Tabs, default_value: 0, ends_tab_group: false});
			hou_parm_template3 = new hou.FloatParmTemplate({name: "rrIor", label: "Refractive Index", num_components: 1, default_value: [1.5], min: 0, max: 10, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.Base1});
			hou_parm_template3.setHelp("Defines how much rays curve in refraction, as well as the fresnel effect of the reflection.");
			hou_parm_template3.setTags({"script_rienable": "enableRR", "script_rioutputname": "glassIor", "script_ritype": "float"});
			hou_parm_template2.addParmTemplate(hou_parm_template3);
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template_group.append(hou_parm_template);
			hou_parm_template = new hou.FolderParmTemplate({name: "diffuse_9", label: "Glow", folder_type: hou.folderType.Tabs, default_value: 0, ends_tab_group: false});
			hou_parm_template2 = new hou.ToggleParmTemplate({name: "enableGlow", label: "Enable", default_value: false});
			hou_parm_template2.setHelp("Enable the glow lobe.");
			hou_parm_template2.setTags({"script_ritype": "int"});
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template2 = new hou.FloatParmTemplate({name: "glowGain", label: "Gain", num_components: 1, default_value: [0], min: 0, max: 10, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Regular, naming_scheme: hou.parmNamingScheme.Base1});
			hou_parm_template2.setHelp("Multiplier for the glow lobe.");
			hou_parm_template2.setTags({"script_rienable": "enableGlow", "script_ritype": "float"});
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template2 = new hou.FloatParmTemplate({name: "glowColor", label: "Color", num_components: 3, default_value: [1, 1, 1], min: 0, max: 10, min_is_strict: false, max_is_strict: false, look: hou.parmLook.ColorSquare, naming_scheme: hou.parmNamingScheme.RGBA});
			hou_parm_template2.setHelp("Controls the glow incandescence) of the material.");
			hou_parm_template2.setTags({"script_rienable": "enableGlow", "script_ripremult": "glowGain", "script_ritype": "color"});
			hou_parm_template.addParmTemplate(hou_parm_template2);
			hou_parm_template_group.append(hou_parm_template);
			hou_parm_template = new hou.FloatParmTemplate({name: "bumpNormal", label: "Global Bump", num_components: 3, default_value: [0, 0, 0], min: 0, max: 10, min_is_strict: false, max_is_strict: false, look: hou.parmLook.Vector, naming_scheme: hou.parmNamingScheme.XYZW});
			hou_parm_template.setHelp("Connect a PxrBump node here if you need bump or normal-mapped normals. Only valid when provided as a texture/connection. If the individual lobe's bump normal is set, this global bump be ignored for that lobe.");
			hou_parm_template.setTags({"script_ritype": "normal"});
			hou_parm_template_group.append(hou_parm_template);
			
            this.parmTemplateGroup = hou_parm_template_group;
            this.parmTemplateGroup.linkNode(this);
        }
    }
    hou.registerType('VOP/Other/pxrlayer',_hnt_VOP_pxrlayer)
    return _hnt_VOP_pxrlayer
}
        