"""rebase schema

Revision ID: 2561089bf1d3
Revises: 
Create Date: 2024-07-22 00:17:58.549975+00:00

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel


# revision identifiers, used by Alembic.
revision: str = '2561089bf1d3'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('orgs',
    sa.Column('org_seq', sa.Integer(), nullable=False),
    sa.Column('created', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.PrimaryKeyConstraint('org_seq')
    )
    op.create_table('profile_followers',
    sa.Column('profile_seq', sa.Integer(), nullable=False),
    sa.Column('follower_seq', sa.Integer(), nullable=False),
    sa.Column('created', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('deleted', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('profile_seq', 'follower_seq')
    )
    op.create_table('profiles',
    sa.Column('profile_seq', sa.Integer(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('full_name', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('signature', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('created', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.Column('active', sa.Boolean(), nullable=True),
    sa.Column('profile_base_href', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('email', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('email_validate_state', sa.Integer(), nullable=True),
    sa.Column('location', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('login_count', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('profile_seq')
    )
    op.create_table('topology_refs',
    sa.Column('topology_seq', sa.Integer(), nullable=False),
    sa.Column('src_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('dst_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('edge_data', sa.JSON(), nullable=True),
    sa.PrimaryKeyConstraint('topology_seq', 'src_id', 'dst_id')
    )
    op.create_table('assets',
    sa.Column('asset_seq', sa.Integer(), nullable=False),
    sa.Column('created', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.Column('deleted', sa.DateTime(), nullable=True),
    sa.Column('org_seq', sa.Integer(), nullable=True),
    sa.Column('owner_seq', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['owner_seq'], ['profiles.profile_seq'], ),
    sa.PrimaryKeyConstraint('asset_seq')
    )
    op.create_table('events',
    sa.Column('event_seq', sa.Integer(), nullable=False),
    sa.Column('event_type', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('queued', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('acked', sa.DateTime(), nullable=True),
    sa.Column('completed', sa.DateTime(), nullable=True),
    sa.Column('job_data', sa.JSON(), nullable=True),
    sa.Column('owner_seq', sa.Integer(), nullable=True),
    sa.Column('created_in', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('affinity', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.ForeignKeyConstraint(['owner_seq'], ['profiles.profile_seq'], ),
    sa.PrimaryKeyConstraint('event_seq')
    )
    op.create_table('files',
    sa.Column('file_seq', sa.Integer(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('created', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.Column('deleted', sa.DateTime(), nullable=True),
    sa.Column('size', sa.Integer(), nullable=True),
    sa.Column('content_type', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('owner_seq', sa.Integer(), nullable=True),
    sa.Column('cache_ttl', sa.Integer(), nullable=True),
    sa.Column('downloads', sa.Integer(), nullable=True),
    sa.Column('lifetime', sa.Integer(), nullable=True),
    sa.Column('content_hash', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('locators', sa.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['owner_seq'], ['profiles.profile_seq'], ),
    sa.PrimaryKeyConstraint('file_seq')
    )
    op.create_table('org_refs',
    sa.Column('org_seq', sa.Integer(), nullable=False),
    sa.Column('profile_seq', sa.Integer(), nullable=False),
    sa.Column('role', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('created', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('author_seq', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['author_seq'], ['profiles.profile_seq'], ),
    sa.PrimaryKeyConstraint('org_seq', 'profile_seq', 'role')
    )
    op.create_table('profile_keys',
    sa.Column('key', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('owner_seq', sa.Integer(), nullable=True),
    sa.Column('expires', sa.DateTime(), nullable=True),
    sa.Column('payload', sa.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['owner_seq'], ['profiles.profile_seq'], ),
    sa.PrimaryKeyConstraint('key')
    )
    op.create_table('profile_sessions',
    sa.Column('profile_session_seq', sa.Integer(), nullable=False),
    sa.Column('created', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('refreshed', sa.DateTime(), nullable=True),
    sa.Column('profile_seq', sa.Integer(), nullable=False),
    sa.Column('authenticated', sa.Boolean(), nullable=True),
    sa.Column('auth_token', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('refresh_token', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('location', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.ForeignKeyConstraint(['profile_seq'], ['profiles.profile_seq'], ),
    sa.PrimaryKeyConstraint('profile_session_seq')
    )
    op.create_table('topologies',
    sa.Column('topology_seq', sa.Integer(), nullable=False),
    sa.Column('owner_seq', sa.Integer(), nullable=True),
    sa.Column('org_seq', sa.Integer(), nullable=True),
    sa.Column('created', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('edge_data_schema', sa.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['org_seq'], ['orgs.org_seq'], ),
    sa.ForeignKeyConstraint(['owner_seq'], ['profiles.profile_seq'], ),
    sa.PrimaryKeyConstraint('topology_seq')
    )
    op.create_table('asset_versions',
    sa.Column('asset_seq', sa.Integer(), nullable=False),
    sa.Column('published', sa.Boolean(), nullable=True),
    sa.Column('major', sa.Integer(), nullable=False),
    sa.Column('minor', sa.Integer(), nullable=False),
    sa.Column('patch', sa.Integer(), nullable=False),
    sa.Column('commit_ref', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('created', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('author_seq', sa.Integer(), nullable=False),
    sa.Column('package_seq', sa.Integer(), nullable=True),
    sa.Column('contents', sa.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['author_seq'], ['profiles.profile_seq'], ),
    sa.ForeignKeyConstraint(['package_seq'], ['files.file_seq'], ),
    sa.PrimaryKeyConstraint('asset_seq', 'major', 'minor', 'patch')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('asset_versions')
    op.drop_table('topologies')
    op.drop_table('profile_sessions')
    op.drop_table('profile_keys')
    op.drop_table('org_refs')
    op.drop_table('files')
    op.drop_table('events')
    op.drop_table('assets')
    op.drop_table('topology_refs')
    op.drop_table('profiles')
    op.drop_table('profile_followers')
    op.drop_table('orgs')
    # ### end Alembic commands ###
