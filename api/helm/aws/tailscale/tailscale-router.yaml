apiVersion: apps/v1
kind: Deployment
metadata:
  name: tailscale-router
  namespace: tailscale
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 1
  selector:
    matchLabels:
      app: "router"
  template:      
    metadata:
      labels:
        app: router
        tier: tailscape
        version: "1.0"
        release: production
    spec:
      dnsPolicy: "ClusterFirst"
      hostname: aws-tailscale
      serviceAccountName: tailscale
      restartPolicy: Always
      containers:
      - name: tailscale
        imagePullPolicy: Always
        image: "ghcr.io/tailscale/tailscale:latest"
        env:
        # Store the state in a k8s secret
        - name: TS_ACCEPT_DNS
          value: "true"
        - name: TS_EXTRA_ARGS
          value: " --accept-routes"
        - name: TS_KUBE_SECRET
          value: "tailscale-auth"
        - name: TS_DEBUG_FIREWALL_MODE
          value: auto
        - name: TS_USERSPACE
          value: "false"
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_UID
          valueFrom:
            fieldRef:
              fieldPath: metadata.uid
        - name: TS_AUTHKEY
          valueFrom:
            secretKeyRef:
              name: tailscale-auth
              key: TS_AUTHKEY
              optional: true
        - name: TS_ROUTES
          value: "192.168.0.0/16"
        securityContext:
          privileged: true
          allowPrivilegeEscalation: true
          capabilities:
            add:
              - NET_ADMIN
