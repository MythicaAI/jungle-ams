apiVersion: apps/v1
kind: Deployment
metadata:
  name: router-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: router
  template:
    metadata:
      labels:
        app: router
    spec:
      dnsPolicy: "None"  # Disable default DNS policies
      dnsConfig:
        nameservers:
          - 10.100.0.10  # Kubernetes cluster DNS
          - 100.100.100.100  # Tailscale DNS (fallback)
        searches:
          - default.svc.cluster.local
          - svc.cluster.local
          - cluster.local
          - ec2.internal
        options:
          - name: ndots
            value: "5"
      serviceAccountName: "tailscale"
      hostname: aws-tailscale
      containers:
      - name: busybox
        image: busybox:latest
        command: ["sleep", "3600"]
      - name: ts-sidecar
        imagePullPolicy: Always
        image: "ghcr.io/tailscale/tailscale:latest"
        env:
          - name: TS_EXTRA_ARGS
            value: " --reset --accept-dns --accept-routes --advertise-routes=10.100.0.0/16"
          - name: TS_KUBE_SECRET
            value: "tailscale"
          - name: TS_USERSPACE
            value: "false"
          - name: TS_DEBUG_FIREWALL_MODE
            value: auto
          - name: TS_AUTHKEY
            valueFrom:
              secretKeyRef:
                name: tailscale
                key: TS_AUTHKEY
                optional: true
          - name: POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: POD_UID
            valueFrom:
              fieldRef:
                fieldPath: metadata.uid
        securityContext:
          privileged: true