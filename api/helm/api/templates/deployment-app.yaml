{{- $componentContext := .Values.api.app -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $componentContext.name }}
  namespace: {{ .Values.namespace }}
  labels:
    {{- include "api.labels" . | nindent 4 }}
    {{- include "api.componentLabels" $componentContext | nindent 4 }}
spec:
  replicas: {{ .Values.api.app.replicas | default 1 }}
  strategy:
    {{- include "api.rolloutStrategy" $componentContext | nindent 4 }}
  selector:
    matchLabels:
      app: {{ .Values.api.app.name }}
  template:
    metadata:
      labels:
        {{- include "api.labels" . | nindent 8 }}
        {{- include "api.componentLabels" $componentContext | nindent 8 }}
    spec:
      {{- include "api.nodeSelector" $componentContext | nindent 6 }}
      terminationGracePeriodSeconds: {{ $componentContext.terminationGracePeriodSeconds }}
      serviceAccountName: api
      containers:
        - name: app
          image: "{{ .Values.imageRepository }}/mythica-app:{{ $componentContext.tag }}"
          imagePullPolicy: Always
          resources:
            requests:
              memory: "512Mi"
              cpu: "500m"
          env:
            - name: SQL_URL
              valueFrom:
                secretKeyRef:
                  name: secrets
                  key: SQL_URL
            - name: MYTHICA_LOCATION
              value: "gke-us-central1"
            - name: GCS_SERVICE_ENABLE
              value: "true"
            - name: GOOGLE_APPLICATION_CREDENTIALS
              value: "/accounts/service-account.json"
            - name: WORKER_COUNT
              value: "3"
            - name: API_BASE_URI
              value: {{ .Values.api.app.base_url }}
            - name: TELEMETRY_ENABLE
              value: "{{ .Values.api.app.telemetry_enable }}"
            - name: TELEMETRY_ENDPOINT
              value: {{ .Values.api.app.telemetry_endpoint }}
            - name: NAMESPACE
              value: {{ .Values.namespace }}
          ports:
            - containerPort: 5555
              name: http-api
          volumeMounts:
            - name: ephemeral-upload-vol
              mountPath: /uploads
              readOnly: false
            - name: service-account-vol
              mountPath: /accounts
              readOnly: true
      volumes:
        - name: ephemeral-upload-vol
          emptyDir: {}
        - name: service-account-vol
          secret:
            secretName: {{ .Values.serviceAccount.secretName }}
      restartPolicy: Always
