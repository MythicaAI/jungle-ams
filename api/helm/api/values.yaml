# Default values for api.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# This will set the replicaset count more information can be found here: https://kubernetes.io/docs/concepts/workloads/controllers/replicaset/
replicaCount: 3
namespace: "api"
tier: "web"
release: "production"
imageRepository: us-central1-docker.pkg.dev/controlnet-407314/gke-us-central1-images
hostnameDecorator: ""
domains:
  - oss.mythica.ai
  - oss.mythica.gg
  - api.mythica.ai
  - api.mythica.gg
  - images.mythica.ai
  - images.mythica.gg
  - dex.mythica.ai
  - dex.mythica.gg

apiBaseUrl: "https://api.mythica.ai/v1"
imagesBaseUrl: "https://api.mythica.ai/images"

auth0:
  domain: dev-dtvqj0iuc5rnb6x2.us.auth0.com
  clientId: caa07HclGxulrcv43hgGziNJx7cQ8GED
  audience: https://api.mythica.ai/v1
  redirectUrl: https://api.mythica.ai

serviceAccount:
  secretName: front-end-api-sa
api:
  app:
    name: "app"
    replicas: 3
    maxUnavailable: 1
    maxSurge: 6
    base_url: "https://api.mythica.ai/v1"
    telemetry_enable: "true"
    telemetry_endpoint: "http://otel-collector.default:4317"
    nodeSelector: scale-out
    terminationGracePeriodSeconds: 15
  gcsProxy:
    name: "gcs-proxy"
    replicas: 3
    maxUnavailable: 2
    maxSurge: 5
    nodeSelector: scale-out
    terminationGracePeriodSeconds: 15
  letsEncrypt:
    name: "lets-encrypt"
    secretName: mythica-lets-encrypt-tls
    replicas: 1
    maxUnavailable: 1
    maxSurge: 2
    nodeSelector: scale-out
    terminationGracePeriodSeconds: 60
  packager:
    name: "packager"
    replicas: 2
    maxUnavailable: 1
    maxSurge: 4
    nodeSelector: spot
    terminationGracePeriodSeconds: 15
  webFront:
    name: "web-front"
    replicas: 5
    maxUnavailable: 2
    maxSurge: 10
    nginxConfig: "/etc/nginx/nginx-gke.conf"
    nodeSelector: scale-out
    terminationGracePeriodSeconds: 15
  canary:
    name: "canary"
    replicas: 0
    maxUnavailable: 0
    maxSurge: 0
    nodeSelector: spot
    terminationGracePeriodSeconds: 15
