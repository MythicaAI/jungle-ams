[project]
name = "ams-api"
version = "1.0.0"
description = "FastAPI service to provide asset services."
authors = [
    { "name" = "Jacob Repp", "email" = "jacobrepp@gmail.com" }
]
license = "MPL-2.0"
readme = "README.md"
keywords = ["game assets", "file management", "sqlite", "cache", "graph", "games"]
requires-python = "<4.0,>=3.11"
dependencies = [
    "minio>=7.2.15,<8.0.0",
    "sqlalchemy>=2.0.38,<3.0.0",
    "fastapi>=0.115.8,<1.0.0",
    "pydantic-settings>=2.7.1,<3.0.0",
    "python-multipart>=0.0.20,<1.0.0",
    "jinja2>=3.1.5,<4.0.0",
    "sqlmodel>=0.0.22,<1.0.0",
    "prometheus-fastapi-instrumentator>=7.0.2,<8.0.0",
    "typing-extensions>=4.12.2,<5.0.0",
    "alembic>=1.14.1,<2.0.0",
    "asyncio>=3.4.3,<4.0.0",
    "python-json-logger>=3.2.1,<4.0.0",
    "base58>=2.1.1,<3.0.0",
    "authlib>=1.4.1,<2.0.0",
    "pyjwt>=2.10.1,<3.0.0",
    "fastapi-auth0>=0.5.0,<1.0.0",
    "starlette>=0.45.3,<1.0.0",
    "tzdata>=2025.1,<2026.0",
    "websockets>=15.0,<16.0",
    "redis>=5.2.1,<6.0.0",
    "meshwork>=0.1.0,<1.0.0",
    "gcid>=0.1.0,<1.0.0",
    "better-profanity>=0.7.0,<1.0.0",
    "uvicorn>=0.34.0,<1.0.0",
    "pydantic>=2.10.6,<3.0.0",
    "email-validator>=2.2.0,<3.0.0",
    "opentelemetry-exporter-gcp-trace>=1.9.0,<2.0.0",
    "sqltap-ng>=0.3.11,<1.0.0",
    "greenlet>=3.1.1,<4.0.0",
    "aiohappyeyeballs>=2.4.6,<3.0.0",
    "aiosignal>=1.3.2,<2.0.0",
    "annotated-types>=0.7.0,<1.0.0",
    "anyio>=4.8.0,<5.0.0",
    "argon2-cffi>=23.1.0,<24.0.0",
    "argon2-cffi-bindings>=21.2.0,<22.0.0",
    "asgiref>=3.8.1,<4.0.0",
    "attrs>=25.1.0,<26.0.0",
    "cachetools>=5.5.1,<6.0.0",
    "certifi>=2025.1.31,<2026.0.0",
    "cffi>=1.17.1,<2.0.0",
    "charset-normalizer>=3.4.1,<4.0.0",
    "httpx>=0.28.1,<1.0.0",
    "httpx-ws>=0.7.1,<1.0.0",
    "async-lru>=2.0.5,<3.0.0",
]

[project.urls]
Homepage = "https://github.com/MythicaAI/"
Repository = "https://github.com/MythicaAI/infra"

[dependency-groups]
google_cloud_platform = [
    "google-auth>=2.38.0,<3.0.0",
    "google-cloud-storage>=3.0.0,<4.0.0",
]
postgres_db = [
    "asyncpg>=0.30.0,<1.0.0",
]
sqlite_db = [
    "aiosqlite>=0.21.0",
]
sendgrid = [
    "sendgrid>=6.11.0,<7.0.0",
]
telemetry = [
    "opentelemetry-instrumentation>=0.51b0,<1.0.0",
    "opentelemetry-instrumentation-fastapi>=0.51b0,<1.0.0",
    "opentelemetry-instrumentation-httpx>=0.51b0,<1.0.0",
    "opentelemetry-exporter-otlp>=1.30.0,<2.0.0",
    "opentelemetry-distro>=0.51b0,<1.0.0",
    "opentelemetry-api>=1.30.0,<2.0.0",
    "opentelemetry-sdk>=1.30.0,<2.0.0",
    "opentelemetry-instrumentation-sqlalchemy>=0.51b0,<1.0.0",
]
test = [
    "pytest>=8.3.4",
    "pytest-asyncio>=0.25.3,<1.0.0",
    "pytest-cov>=6.0.0",
    "pytest-timeout>=2.3.1",
    "munch>=4.0.0",
]
lint = [
    "black>=23.0.0",
    "ruff>=0.1.0",
    "mypy>=1.0.0",
    "flake8>=7.1.2",
    "pylint>=3.3.4",
]
dev = [
    "pre-commit>=3.0.0",
    { include-group = "test" },
    { include-group = "lint" },
    { include-group = "telemetry" },
    { include-group = "sendgrid" },
    { include-group = "postgres_db" },
    { include-group = "sqlite_db" },
    { include-group = "google_cloud_platform" },
]
prod = [
    { include-group = "telemetry" },
    { include-group = "sendgrid" },
    { include-group = "postgres_db" },
    { include-group = "google_cloud_platform" },
]
local = [
    { include-group = "sqlite_db" },
]
sqlalchemy = ["asyncio"]
authlib = []

[project.scripts]
start = "main:main"
test = "scripts:test"
lint = "scripts:lint"
fmt = "scripts:format_code"
typecheck = "scripts:typecheck"
local = "uv_entrypoint:run_local"

[tool.uv]
package = true

[tool.coverage.report]
omit = [
    "tests/*",
]

[tool.pytest.ini_options]
addopts = "-p no:logging"
asyncio_mode = "auto"

[tool.uv.workspace]
members = ["../libs/python/*"]
exclude = [
    "../libs/python/gsc-protocol",
    "../libs/python/mythica-api-client",
    "../libs/python/scenetalk"]

[tool.uv.sources]
gcid = { workspace = true }
meshwork = { workspace = true }

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["."]
