"""add job tables

Revision ID: 52d8ee71f1ef
Revises: 41d12e62a272
Create Date: 2024-08-31 01:25:51.879211+00:00

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '52d8ee71f1ef'
down_revision: Union[str, None] = '41d12e62a272'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('job_defs',
    sa.Column('job_def_seq', sa.Integer(), nullable=False),
    sa.Column('job_type', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('config', sa.JSON(), nullable=True),
    sa.Column('params_schema', sa.JSON(), nullable=True),
    sa.PrimaryKeyConstraint('job_def_seq')
    )
    op.create_table('job_results',
    sa.Column('job_seq', sa.Integer(), nullable=False),
    sa.Column('job_result_seq', sa.Integer(), nullable=False),
    sa.Column('created_in', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('result_data', sa.JSON(), nullable=True),
    sa.PrimaryKeyConstraint('job_seq', 'job_result_seq')
    )
    op.create_table('jobs',
    sa.Column('job_seq', sa.Integer(), nullable=False),
    sa.Column('job_def_seq', sa.Integer(), nullable=False),
    sa.Column('owner_seq', sa.Integer(), nullable=True),
    sa.Column('created', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('completed', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.Column('deleted', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.Column('params', sa.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['job_def_seq'], ['job_defs.job_def_seq'], ),
    sa.ForeignKeyConstraint(['owner_seq'], ['profiles.profile_seq'], ),
    sa.PrimaryKeyConstraint('job_seq')
    )
    op.alter_column('profile_keys', 'expires',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.TIMESTAMP(timezone=True),
               existing_nullable=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('profile_keys', 'expires',
               existing_type=sa.TIMESTAMP(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=True)
    op.drop_table('jobs')
    op.drop_table('job_results')
    op.drop_table('job_defs')
    # ### end Alembic commands ###
