# This workflow is designed to run bulk import on the entire Mythica P4
# repository. The bulk import process internally does diffing and will
# determine which packages need to be updated based on the content hash
# of the files in the package and the structure of the package itself.
name: bulk-import-mythica-p4

on:
  # Run when this file itself changes
  push:
    paths:
      - '.github/workflows/bulk-import-mythica-p4.yaml'
      - 'api/bulk-import/**'

  workflow_dispatch:
    inputs:
      force_sync:
        description: 'Force full sync'
        required: false
        type: boolean
        default: false
      changelist:
        description: 'Perforce changelist ID'
        required: false
        type: integer
        default: 0
      environment:
        description: 'Environment to run against'
        required: false
        default: 'staging'
        type: choice
        options:
          - staging
          - production

env:
  P4PORT: ssl:p4.garden.mythica.ai:1666
  P4USER: mythica
  P4PASSWD: ${{ secrets.P4PASSWD }}
  P4TRUST: /home/ec2-user/.p4trust
  P4CLIENT: github-action-workspace
  P4_WORKSPACE: /mnt/p4/mythica
jobs:
  sync-and-process:
    runs-on: p4-automation
    concurrency: p4-automation  # only one job at a time accessing the perforce client
    steps:
      - name: Checkout github
        uses: actions/checkout@v4

      - name: System diag
        run: |
          # these should be already installed on the system
          which python3.11
          which poetry

      - name: Ensure P4 trust
        run: |
          p4 -p $P4PORT trust -y

      - name: P4 Login
        run: |
          echo ${{ secrets.P4PASSWD }} | p4 login
          
          # Verify ticket
          p4 login -s || {
            echo "P4 login failed"
            exit 1
          }

      - name: Create P4 Client
        run: |
          cat > client_spec.txt << EOL
          Client: $P4CLIENT
          Owner: $P4USER
          Root: $P4_WORKSPACE
          Options: noallwrite noclobber nocompress unlocked nomodtime rmdir
          LineEnd: local
          Stream: //mythica/main
          View:
            //mythica/main/Houdini/... //$P4CLIENT/Houdini/...
          Type: writeable
          EOL
          
          # Create the client
          p4 client -i < client_spec.txt

      - name: Sync P4
        run: |
          if [[ "${{ github.event.inputs.force_sync }}" == "true" ]]; then
            FULL_SYNC=1
            echo "Job param, triggering full sync"
          fi
          if [[ ! -d "$P4_WORKSPACE" ]]; then
            FULL_SYNC=1
            echo "Missing P4 workspace, triggering full sync"
          fi
          
          if [[ "$FULL_SYNC" == 1 ]]; then
            echo "Performing full sync..."
            mkdir -p $P4_WORKSPACE
            p4 sync -f
          else
            echo "Performing incremental sync..."
            p4 sync
          fi
      - name: Configure environment
        run: |
        run: |
          if [[ "${{ github.event.inputs.environment }}" == "staging" ]]; then
            echo "MYTHICA_ENDPOINT=https://api-staging.mythica.gg" >> $GITHUB_ENV
            echo "MYTHICA_API_KEY=${{ secrets.BULK_IMPORT_STAGING_MYTHICA_API_KEY }}" >> $GITHUB_ENV
          else
            echo "MYTHICA_ENDPOINT=https://api.mythica.gg" >> $GITHUB_ENV
            echo "MYTHICA_API_KEY=${{ secrets.BULK_IMPORT_PRODUCTION_MYTHICA_API_KEY }}" >> $GITHUB_ENV
          fi
      - name: Bulk Import HDA Changes
        working-directory: api/bulk-import
        run: |
          # Example: Get latest changelist
          LATEST_CL=$(p4 -u $P4USER -P $P4PASSWD changes -m 1 //depot/... | cut -d' ' -f2)
          echo "Latest changelist: $LATEST_CL"
          
          # bulk import HDA packages
          poetry install --no-root
          poetry env info
          poetry run python3.11 upload_packages.py \
            --package-list ${P4_WORKSPACE}/Houdini/Automation/package_list.py \
            --endpoint ${MYTHICA_ENDPOINT} \
            --mythica-api-key ${MYTHICA_API_KEY} \
            --license MPLv2.txt \
            --tag Mythica \
            --markdown results.md
          cat results.md
          cat results.md >> $GITHUB_STEP_SUMMARY
