name: push-tagged-images
on:
  push:
    branches:
      - '*'
    paths:
      - 'sites/**'
      - 'api/**'
      - 'libs/**'
      - 'automation/**'
      - '.github/workflows/push-tagged-images.yaml'
jobs:
  changes:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      repository-projects: write

    outputs:
      images: ${{ steps.filter.outputs.changes }}
    steps:
      - uses: actions/checkout@v4

      - uses: dorny/paths-filter@v3
        id: filter
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          # setup all the filters to match Dockerfile locations
          filters: |
            api/app/:
              - 'libs/python/**'
              - 'api/app/**'
              - 'api/helm/**'
              - '.github/workflows/push-tagged-images.yaml'
            api/nginx/:
              - 'api/nginx/**'
              - 'api/helm/**'
              - '.github/workflows/push-tagged-images.yaml'
            api/gcs-proxy/:
              - 'api/gcs-proxy/**'
              - 'api/helm/**'
              - '.github/workflows/push-tagged-images.yaml'
            api/lets-encrypt/:
              - 'api/lets-encrypt/**'
              - 'api/helm/**'
              - '.github/workflows/push-tagged-images.yaml'
            api/packager/:
              - 'api/packager/**'
              - 'api/helm/**'
              - '.github/workflows/push-tagged-images.yaml'
            api/houdini-worker/:
              - 'api/houdini-worker/**'
              - '.github/workflows/push-tagged-images.yaml'
            api/canary/:
              - 'api/canary/**'
              - 'api/helm/**'
              - '.github/workflows/push-tagged-images.yaml'
            automation/blender/:
              - 'automation/blender/**'
              - 'libs/python/**'
              - '.github/workflows/push-tagged-images.yaml'
            automation/houdini/:
              - 'automation/houdini/**'
              - 'libs/python/**'
              - '.github/workflows/push-tagged-images.yaml'
            automation/test/:
              - 'automation/test/**'
              - 'libs/python/**'
              - '.github/workflows/push-tagged-images.yaml'
            sites/jungle3/:
              - 'sites/jungle3/**'
              - '.github/workflows/push-tagged-images.yaml'
            sites/editor/:
              - 'sites/editor/**'
              - '.github/workflows/push-tagged-images.yaml'

  build-base:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver-opts: image=moby/buildkit:latest

      - name: Build libs-python image
        uses: docker/build-push-action@v5
        with:
          context: libs/python
          tags: localhost/libs-python:${{ github.sha }}
          outputs: type=docker,dest=/tmp/libs-python.tar
      - name: Upload libs-python image
        uses: actions/upload-artifact@v3
        with:
          name: localhost/libs-python
          path: /tmp/libs-python.tar
          retention-days: 1

      - name: Load libs-python image for api-app
        run: |
          docker load --input /tmp/libs-python.tar
      - name: Build api-app image
        uses: docker/build-push-action@v5
        with:
          context: api/app
          tags: localhost/api-app:${{ github.sha }}
          outputs: type=docker,dest=/tmp/api-app.tar
          build-args: |
            LIBS_PYTHON_IMAGE=localhost/libs-python:${{ github.sha }}
      - name: Upload api-app image
        uses: actions/upload-artifact@v3
        with:
          name: localhost/api-app
          path: /tmp/api-app.tar
          retention-days: 1

  build-tag-publish:
    runs-on: ubuntu-latest
    needs:
      - changes
      - build-base
    permissions:
      repository-projects: read
      pull-requests: write
      id-token: write
      contents: write

    strategy:
      fail-fast: false
      matrix:
        image: ${{ fromJson(needs.changes.outputs.images) }}

    env:
      IMAGE_NAME: "${{ matrix.image }}"
      NODE_ENV: "staging"
      PROJECT_ID: "296075347103"
      AR_REPO_LOCATION: 'us-central1'
      AR_URL: 'us-central1-docker.pkg.dev/controlnet-407314/gke-us-central1-images'
      SERVICE_ACCOUNT: 'github-actions-service-account@controlnet-407314.iam.gserviceaccount.com'
      WORKLOAD_IDENTITY_PROVIDER: 'projects/296075347103/locations/global/workloadIdentityPools/gh-infra-pool/providers/github-mythica-infra'

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Docker BuildX
        uses: docker/setup-buildx-action@v3

      - name: Google Auth
        id: auth
        uses: google-github-actions/auth@v2
        with:
          token_format: 'access_token'
          project_id: ${{ env.PROJECT_ID }}
          service_account: ${{ env.SERVICE_ACCOUNT }}
          workload_identity_provider: ${{ env.WORKLOAD_IDENTITY_PROVIDER }}

      - name: Login to Artifact Registry
        uses: docker/login-action@v3
        with:
          registry: '${{ env.AR_REPO_LOCATION }}-docker.pkg.dev'
          username: oauth2accesstoken
          password: ${{ steps.auth.outputs.access_token }}

      - name: Tag update
        uses: nick-fields/retry@v2
        id: tag_version
        with:
          max_attempts: 3
          retry_on: error
          timeout_seconds: 5
          command: |
            github/tagging/get-dockerfile-tag.sh ${{ matrix.image }} >> $GITHUB_OUTPUT
            git config user.name "GitHub Action"
            git config user.email "action@github.com"
            git fetch --tags
            git tag ${{ steps.generate_tag.outputs.new_tag }}
            git push origin --tags
            echo "Tagged image ${{ matrix.image }} as ${{ steps.generate_tag.outputs.new_tag }}" >> $GITHUB_STEP_SUMMARY

      - name: Download api-app image
        uses: actions/download-artifact@v3
        with:
          name: localhost/api-app
          path: /tmp

      - name: Download libs-python base image
        uses: actions/download-artifact@v3
        with:
          name: localhost/libs-python
          path: /tmp

      - name: Load images
        run: |
          docker load --input /tmp/libs-python.tar
          docker load --input /tmp/api-app.tar

      - name: Build and push ${{ matrix.image }}
        uses: docker/build-push-action@v6
        with:
          push: true
          context: ${{ matrix.image }}
          file: ${{ matrix.image }}/Dockerfile
          tags: |
            ${{ env.AR_URL }}/${{ steps.tag_version.outputs.image_name }}:latest
            ${{ env.AR_URL }}/${{ steps.tag_version.outputs.image_name }}:${{ steps.tag_version.outputs.new_tag_version }}
          build-args: |
            NODE_ENV=${{ env.NODE_ENV }}    
            LIBS_PYTHON_IMAGE=localhost/libs-python:${{ github.sha }}
            API_APP_IMAGE=localhost/api-app:${{ github.sha }}