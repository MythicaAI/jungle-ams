name: api-app-publish-staging

on:
  push:
    branches:
      - "**"
    paths:
      - 'api/app/**'
      - 'libs/python/**'
      - '.github/workflows/api-app-publish-staging.yaml'

defaults:
  run:
    working-directory: .

jobs:
  build-publish:
    runs-on: ubuntu-latest
    permissions:
      repository-projects: read
      pull-requests: write
      id-token: write
      contents: read

    env:
      IMAGE_NAME: "mythica-app"
      NODE_ENV: "staging"
      PROJECT_ID: "296075347103"
      AR_REPO_LOCATION: 'us-central1'
      AR_URL: 'us-central1-docker.pkg.dev/controlnet-407314/gke-us-central1-images'
      SERVICE_ACCOUNT: 'github-actions-service-account@controlnet-407314.iam.gserviceaccount.com'
      WORKLOAD_IDENTITY_PROVIDER: 'projects/296075347103/locations/global/workloadIdentityPools/gh-infra-pool/providers/github-mythica-infra'
      VERSION_APP_PATH: "api/app/VERSION_APP"

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Docker BuildX
        uses: docker/setup-buildx-action@v3

      - name: Increment version for APP
        id: increment_version
        run: |
          current_version=$(cat ${{ env.VERSION_APP_PATH }})
          IFS='.' read -r major minor patch <<< "$current_version"
          new_patch=$((patch+1))
          new_version="v$major.$minor.$new_patch"
          echo "New Web APP version: $new_version"
          echo "$new_version" > ${{ env.VERSION_APP_PATH }}
          echo "::set-output name=new_version::$new_version"

      - name: Google Auth
        id: auth
        uses: google-github-actions/auth@v2
        with:
          token_format: 'access_token'
          project_id: ${{ env.PROJECT_ID }}
          service_account: ${{ env.SERVICE_ACCOUNT }}
          workload_identity_provider: ${{ env.WORKLOAD_IDENTITY_PROVIDER }}

      - name: Login to Artifact Registry
        uses: docker/login-action@v1
        with:
          registry: '${{ env.AR_REPO_LOCATION }}-docker.pkg.dev'
          username: oauth2accesstoken
          password: ${{ steps.auth.outputs.access_token }}

      - name: Build and push api/app
        uses: docker/build-push-action@v6
        with:
          push: true
          context: .
          file: api/app/Dockerfile
          tags:  |
            ${{ env.AR_URL }}/${{ env.IMAGE_NAME }}:latest
            ${{ env.AR_URL }}/${{ env.IMAGE_NAME }}:${{ steps.increment_version.outputs.new_version }}
          build-args: |
            NODE_ENV=${{ env.NODE_ENV }}

  helm-deploy:
    runs-on: ubuntu-latest
    needs: build-publish
    permissions:
      id-token: write
      contents: read

    env:
      NODE_ENV: "staging"
      PROJECT_NUMBER: "296075347103"
      PROJECT_ID: "controlnet-407314"
      AR_REPO_LOCATION: "us-central1"
      SERVICE_ACCOUNT: "github-actions-service-account@controlnet-407314.iam.gserviceaccount.com"
      GKE_CLUSTER_NAME: "gke-main-us-central1"
      GKE_CLUSTER_LOCATION: "us-central1"
      WORKLOAD_IDENTITY_PROVIDER: "projects/296075347103/locations/global/workloadIdentityPools/gh-infra-pool/providers/github-mythica-infra"
      VERSION_APP_PATH: "api/app/VERSION_APP"

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Read current version for API
        id: read_version
        run: |
          current_version=$(cat ${{ env.VERSION_APP_PATH }})
          echo "Current API version: $current_version"
          echo "::set-output name=current_version::$current_version"

      - name: Google Auth
        id: auth
        uses: google-github-actions/auth@v2
        with:
          token_format: "access_token"
          project_id: ${{ env.PROJECT_NUMBER }}
          service_account: ${{ env.SERVICE_ACCOUNT }}
          workload_identity_provider: ${{ env.WORKLOAD_IDENTITY_PROVIDER }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Install gke-gcloud-auth-plugin
        run: |
          gcloud components install gke-gcloud-auth-plugin

      - name: Configure Docker
        run: |
          gcloud auth configure-docker '${{ env.AR_REPO_LOCATION }}-docker.pkg.dev'

      - name: Set up Kubernetes credentials
        run: |
          gcloud container clusters get-credentials ${{ env.GKE_CLUSTER_NAME }} \
            --region ${{ env.GKE_CLUSTER_LOCATION }} \
            --project ${{ env.PROJECT_ID }}

      - name: Install Helm
        run: |
          curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash

      - name: Deploy Helm Chart
        run: |
          helm upgrade --namespace api-staging -f api/helm/api/values-staging.yaml api-staging api/helm/api
          kubectl rollout restart deployment/app -n api-staging

      - name: Commit new APP version
        run: |
          git config user.name "GitHub Action"
          git config user.email "action@github.com"
          git add ${{ env.VERSION_APP_PATH }}
          git commit -m "Increment Web APP version to ${{ steps.read_version.outputs.current_version }}"
          git push origin main
