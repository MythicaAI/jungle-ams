name: helm-deploy-prod

on:
  # trigger helm deploy when new images are available
  workflow_run:
    workflows: [ "promote-release" ]
    types:
      - completed

defaults:
  run:
    working-directory: .

jobs:
  helm-deploy:
    runs-on: ubuntu-latest
    environment: main
    permissions:
      id-token: write
      contents: read

    env:
      NODE_ENV: "production"
      PROJECT_NUMBER: "296075347103"
      PROJECT_ID: "controlnet-407314"
      AR_REPO_LOCATION: "us-central1"
      SERVICE_ACCOUNT: "github-actions-service-account@controlnet-407314.iam.gserviceaccount.com"
      GKE_CLUSTER_NAME: "gke-main-us-central1"
      GKE_CLUSTER_LOCATION: "us-central1"
      WORKLOAD_IDENTITY_PROVIDER: "projects/296075347103/locations/global/workloadIdentityPools/gh-infra-pool/providers/github-mythica-infra"

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Fetch tags
        run: git fetch --prune --unshallow --tags

      - name: Generate values file for released image tags
        run: |
          api/helm/helm-gen-values-images.sh releases

      - name: Google Auth
        id: auth
        uses: google-github-actions/auth@v2
        with:
          token_format: "access_token"
          project_id: ${{ env.PROJECT_NUMBER }}
          service_account: ${{ env.SERVICE_ACCOUNT }}
          workload_identity_provider: ${{ env.WORKLOAD_IDENTITY_PROVIDER }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Install gke-gcloud-auth-plugin
        run: |
          gcloud components install gke-gcloud-auth-plugin

      - name: Set up Kubernetes credentials
        run: |
          gcloud container clusters get-credentials ${{ env.GKE_CLUSTER_NAME }} \
            --region ${{ env.GKE_CLUSTER_LOCATION }} \
            --project ${{ env.PROJECT_ID }}

      - name: Install Helm
        run: |
          curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash

      - name: Deploy Helm Chart
        run: |
          helm upgrade --namespace api -f api/helm/api/values.yaml -f api/helm/api/values-images.yaml api api/helm/api

      - name: Rollout deployments
        run: |
          kubectl rollout restart deployment/packager -n api
          kubectl rollout status deployment/packager -n api

          kubectl rollout restart deployment/lets-encrypt -n api
          kubectl rollout status deployment/lets-encrypt -n api

          kubectl rollout restart deployment/gcs-proxy -n api
          kubectl rollout status deployment/gcs-proxy -n api

          kubectl rollout restart deployment/app -n api
          kubectl rollout status deployment/app -n api

          kubectl rollout restart deployment/web-front -n api
          kubectl rollout status deployment/web-front -n api

          kubectl rollout restart deployment/canary -n api
          kubectl rollout status deployment/canary -n api

      - uses: actions-tools/yaml-outputs@v2
        id: deployed_yaml
        with:
          file-path: 'api/helm/api/values-images.yaml'
      - run: |
          echo "${{ steps.deployed_yaml.outputs.images }}"
      - name: Discord notification
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
        uses: Ilshidur/action-discord@master
        with:
          args: 'Production updated ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}'