name: automation-image-tests
on:
  pull_request:
    types:
      - opened
      - synchronize
    paths:
      - 'automation/**'
      - '.github/workflows/automation-image-tests.yaml'
jobs:
  changes:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      repository-projects: write

    outputs:
      images: ${{ steps.filter.outputs.changes }}
    steps:
      - uses: actions/checkout@v4

      - uses: dorny/paths-filter@v3
        id: filter
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          # setup all the filters to match Dockerfile locations
          filters: |
            automation/test/:
              - 'libs/python/**'
              - '.github/workflows/test-build-automation.yaml' # always build at least one image if the workflow changes
            automation/houdini/:
              - 'libs/python/**'
              - 'automation/houdini/**'
            automation/blender/:
              - 'libs/python/**'
              - 'automation/blender/**'
  build-base:
    runs-on: ubuntu-latest
    needs:
      - changes

    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver: docker

      - name: Build libs-python image
        uses: docker/build-push-action@v5
        with:
          context: libs/python
          tags: libs-python:${{ github.sha }}
          load: true
      - name: Save libs-python to tar file
        run: |
          docker save libs-python:${{ github.sha }} > /tmp/libs-python-${{ github.sha }}.tar
      - name: Upload libs-python image
        uses: actions/upload-artifact@v4
        with:
          name: libs-python-${{ github.sha }}
          path: /tmp/libs-python-${{ github.sha }}.tar
          retention-days: 1
          overwrite: true

  build:
    runs-on: ubuntu-latest
    environment: main
    needs:
      - changes
      - build-base
    permissions:
      repository-projects: read
      pull-requests: write
      id-token: write
      contents: write

    strategy:
      fail-fast: false
      matrix:
        image: ${{ fromJson(needs.changes.outputs.images) }}

    env:
      IMAGE_NAME: "${{ matrix.image }}"
      NODE_ENV: "staging"

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Docker BuildX
        uses: docker/setup-buildx-action@v3
        with:
          driver: docker

      - name: Google Auth
        id: auth
        uses: google-github-actions/auth@v2
        with:
          token_format: 'access_token'
          project_id: ${{ env.PROJECT_ID }}
          service_account: ${{ env.SERVICE_ACCOUNT }}
          workload_identity_provider: ${{ env.WORKLOAD_IDENTITY_PROVIDER }}

      - name: Download libs-python base image
        uses: actions/download-artifact@v4
        with:
          name: libs-python-${{ github.sha }}
          path: /tmp

      - name: Load images
        run: |
          docker load --input /tmp/libs-python-${{ github.sha }}.tar

      - name: Generate tag
        id: generate_tag
        run: |
          github/tagging/get-dockerfile-tag.sh ${{ matrix.image }} >> $GITHUB_OUTPUT

      - name: Build ${{ matrix.image }}
        id: build
        uses: docker/build-action@v6
        with:
          push: true
          context: ${{ matrix.image }}
          file: ${{ matrix.image }}/Dockerfile
          tags: |
            ${{ env.AR_URL }}/${{ steps.generate_tag.outputs.image_name }}:${{ steps.generate_tag.outputs.new_tag_version }}
          build-args: |
            NODE_ENV=${{ env.NODE_ENV }}
            LIBS_PYTHON_IMAGE=libs-python:${{ github.sha }}
          load: true
