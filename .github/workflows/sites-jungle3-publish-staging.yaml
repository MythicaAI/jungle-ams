name: sites-jungle3-publish-staging

on:
  push:
    paths:
      - 'sites/jungle3/**'
      - '.github/workflows/sites-jungle3-publish-staging.yaml'

defaults:
  run:
    working-directory: .

jobs:
  build-publish:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      repository-projects: read
      pull-requests: write
      id-token: write

    env:
      IMAGE_NAME: "mythica-sites-jungle3-build"
      IMAGE_NAME_NGINX: "mythica-web-front"
      NODE_ENV: "production"
      PROJECT_ID: "296075347103"
      AR_REPO_LOCATION: 'us-central1'
      AR_URL: 'us-central1-docker.pkg.dev/controlnet-407314/gke-us-central1-images'
      SERVICE_ACCOUNT: 'github-actions-service-account@controlnet-407314.iam.gserviceaccount.com'
      WORKLOAD_IDENTITY_PROVIDER: 'projects/296075347103/locations/global/workloadIdentityPools/gh-infra-pool/providers/github-mythica-infra'
      IS_PROD: 'false'

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Docker BuildX
        uses: docker/setup-buildx-action@v3

      - name: Google Auth
        id: auth
        uses: google-github-actions/auth@v2
        with:
          token_format: 'access_token'
          project_id: ${{ env.PROJECT_ID }}
          service_account: ${{ env.SERVICE_ACCOUNT }}
          workload_identity_provider: ${{ env.WORKLOAD_IDENTITY_PROVIDER }}

      - name: Login to Artifact Registry
        uses: docker/login-action@v1
        with:
          registry: '${{ env.AR_REPO_LOCATION }}-docker.pkg.dev'
          username: oauth2accesstoken
          password: ${{ steps.auth.outputs.access_token }}

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          push: true
          context: sites/jungle3
          tags:  ${{ env.AR_URL }}/${{ env.IMAGE_NAME }}:${{ env.IS_PROD == 'true' && 'latest' || 'staging-latest' }}

      - name: Build and push mythica-web-front
        uses: docker/build-push-action@v6
        with:
          push: true
          context: api/nginx
          tags: ${{ env.AR_URL }}/${{ env.IMAGE_NAME_NGINX }}:${{ env.IS_PROD == 'true' && 'latest' || 'staging-latest' }}
          build-args: |
            IS_PROD=${{ env.IS_PROD }}
