name: p4-commit-hook
on:
  repository_dispatch:
    types: [ p4-commit ]

  push:
    paths:
      - '.github/workflows/p4-commit-hook.yaml'

  # Optional: Also run manually from GitHub UI
  workflow_dispatch:
    inputs:
      force_sync:
        description: 'Force full sync'
        required: false
        type: boolean
        default: false

env:
  P4PORT: ssl:p4.garden.mythica.ai:1666
  P4USER: mythica
  P4PASSWD: ${{ secrets.P4PASSWD }}
  P4TRUST: ${{ secrets.P4TRUST }}
  P4CLIENT: github-action-workspace
  P4_CACHE_DIR: .p4-cache

jobs:
  sync-and-process:
    runs-on: p4-automation
    
    steps:
      - name: Checkout github
        uses: actions/checkout@v4

      - name: Setup P4 Trust
        run: |
          mkdir -p ~/.p4
          
          # If you have P4TRUST secret set
          if [ -z "$P4TRUST" ]; then
            echo "P4TRUST not yet, setup fingerprint of server"
            exit 1
          fi
          p4 -p $P4PORT trust -y

      - name: P4 Login
        run: |
          echo ${{ secrets.P4PASSWD }} | p4 login
          
          # Verify ticket
          p4 login -s || {
            echo "P4 login failed"
            exit 1
          }

      - name: Create P4 Client
        run: |
          cat > client_spec.txt << EOL
          Client: $P4CLIENT
          Owner: $P4USER
          Root: ${{ github.workspace }}/$P4_CACHE_DIR
          Options: noallwrite noclobber nocompress unlocked nomodtime rmdir
          LineEnd: local
          Stream: //mythica/main
          View:
            //mythica/main/Houdini/... //$P4CLIENT/Houdini/...
          Type: writeable
          EOL
          
          # Create the client
          p4 client -i < client_spec.txt

      - name: Restore P4 Cache
        uses: actions/cache@v3
        id: cache
        with:
          path: ${{ env.P4_CACHE_DIR }}
          key: p4-cache-${{ github.sha }}
          restore-keys: |
            p4-cache-

      - name: Sync P4
        run: |
          mkdir -p $P4_CACHE_DIR
          
          if [[ "${{ github.event.inputs.force_sync }}" == "true" ]] || [[ ! -d "$P4_CACHE_DIR/.p4" ]]; then
            echo "Performing full sync..."
            p4 -u $P4USER -P $P4PASSWD sync -f
          else
            echo "Performing incremental sync..."
            p4 -u $P4USER -P $P4PASSWD sync
          fi

      - name: Bulk Import HDA Changes
        working-directory: api/bulk-import
        run: |
          # Example: Get latest changelist
          LATEST_CL=$(p4 -u $P4USER -P $P4PASSWD changes -m 1 //depot/... | cut -d' ' -f2)
          echo "Latest changelist: $LATEST_CL"
          
          if [[ "${{ github.event_name }}" == "push" ]] || [[ "${{ github.event.inputs.force_sync }}" == "true" ]] || [[ ! -d "$P4_CACHE_DIR/.p4" ]]; then
            PUSH=1
          fi
          echo $PUSH
          
          # bulk import HDA packages
          poetry install
          poetry env info
          poetry run upload_packages.py -l ${P4_CACHE_DIR}/Houdini/Automation/package_list.py -e https://api-staging.mythica.gg

